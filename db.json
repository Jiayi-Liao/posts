{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"themes/hexo-theme-icalm/source/assets/avatar.jpg","path":"assets/avatar.jpg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-icalm/source/assets/bin.svg","path":"assets/bin.svg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-icalm/source/assets/facebook.svg","path":"assets/facebook.svg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-icalm/source/assets/favicon.ico","path":"assets/favicon.ico","modified":1,"renderable":1},{"_id":"themes/hexo-theme-icalm/source/assets/github.css","path":"assets/github.css","modified":1,"renderable":1},{"_id":"themes/hexo-theme-icalm/source/assets/github.svg","path":"assets/github.svg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-icalm/source/css/style.styl","path":"css/style.styl","modified":1,"renderable":1},{"_id":"source/images/DASHENG-900x700-1.png","path":"images/DASHENG-900x700-1.png","modified":1,"renderable":0},{"_id":"themes/hexo-theme-icalm/source/css/normalize/CHANGELOG.md","path":"css/normalize/CHANGELOG.md","modified":1,"renderable":1},{"_id":"themes/hexo-theme-icalm/source/css/normalize/CONTRIBUTING.md","path":"css/normalize/CONTRIBUTING.md","modified":1,"renderable":1},{"_id":"themes/hexo-theme-icalm/source/css/normalize/LICENSE.md","path":"css/normalize/LICENSE.md","modified":1,"renderable":1},{"_id":"themes/hexo-theme-icalm/source/css/normalize/README.md","path":"css/normalize/README.md","modified":1,"renderable":1},{"_id":"themes/hexo-theme-icalm/source/css/normalize/normalize.css","path":"css/normalize/normalize.css","modified":1,"renderable":1},{"_id":"themes/hexo-theme-icalm/source/css/normalize/package.json","path":"css/normalize/package.json","modified":1,"renderable":1},{"_id":"themes/hexo-theme-icalm/source/css/normalize/test.html","path":"css/normalize/test.html","modified":1,"renderable":1},{"_id":"themes/hexo-theme-icalm/source/js/pager/LICENSE","path":"js/pager/LICENSE","modified":1,"renderable":1},{"_id":"themes/hexo-theme-icalm/source/js/pager/Makefile","path":"js/pager/Makefile","modified":1,"renderable":1},{"_id":"themes/hexo-theme-icalm/source/js/pager/README.md","path":"js/pager/README.md","modified":1,"renderable":1},{"_id":"themes/hexo-theme-icalm/source/js/pager/package.json","path":"js/pager/package.json","modified":1,"renderable":1},{"_id":"themes/hexo-theme-icalm/source/js/pager/rollup.config.js","path":"js/pager/rollup.config.js","modified":1,"renderable":1},{"_id":"source/images/DASHENG-900x700-2.png","path":"images/DASHENG-900x700-2.png","modified":1,"renderable":0},{"_id":"source/images/DASHENG-900x700-4.png","path":"images/DASHENG-900x700-4.png","modified":1,"renderable":0},{"_id":"themes/hexo-theme-icalm/source/css/normalize/package-lock.json","path":"css/normalize/package-lock.json","modified":1,"renderable":1},{"_id":"source/images/DASHENG-900x700-3.png","path":"images/DASHENG-900x700-3.png","modified":1,"renderable":0},{"_id":"themes/hexo-theme-icalm/source/js/pager/dist/singlepager.js","path":"js/pager/dist/singlepager.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-icalm/source/js/pager/src/singlepager.ts","path":"js/pager/src/singlepager.ts","modified":1,"renderable":1},{"_id":"themes/hexo-theme-icalm/source/js/pager/test/test.html","path":"js/pager/test/test.html","modified":1,"renderable":1},{"_id":"themes/hexo-theme-icalm/source/js/pager/test/test1.html","path":"js/pager/test/test1.html","modified":1,"renderable":1}],"Cache":[{"_id":"source/hexo-admin-ehc-images.json","hash":"0d165d7223eabfe5ebab834a5d89c8cb9731b5ff","modified":1521480378534},{"_id":"themes/hexo-theme-icalm/.gitignore","hash":"39e0b97e9c58af8eb93426ef4d14f22c6ab4f581","modified":1521379839261},{"_id":"themes/hexo-theme-icalm/.gitmodules","hash":"88e4d27131057a201fb6de311231af3bae2c28f5","modified":1521379839261},{"_id":"themes/hexo-theme-icalm/LICENSE","hash":"92a340eb569b2580706dbdf1057f0796df7cc29f","modified":1521393863724},{"_id":"themes/hexo-theme-icalm/README.md","hash":"109b2d0fc8cc8145598f3bc282c8d1f25136a0a8","modified":1521379839261},{"_id":"themes/hexo-theme-icalm/_config.yml","hash":"20a4fd4ebc6eb139dd653fc2475d37fbc89cb5b6","modified":1521406403184},{"_id":"source/.git/COMMIT_EDITMSG","hash":"ba8549b556a02ad80429f21137fce773d50e437b","modified":1521482448577},{"_id":"source/.git/HEAD","hash":"acbaef275e46a7f14c1ef456fff2c8bbe8c84724","modified":1521482367585},{"_id":"source/.git/config","hash":"a7af0e4ae6add378ead3e2408b38fc9ec2331502","modified":1521482475747},{"_id":"source/.git/description","hash":"9635f1b7e12c045212819dd934d809ef07efa2f4","modified":1521482367583},{"_id":"source/.git/index","hash":"1f5b6345e0b4dbea6cd36732fc9b6ad27673016b","modified":1521482442020},{"_id":"source/_posts/Flink的Exactly-Once.md","hash":"dcd49da0763aaf60d05651dc4443cbb9e941849c","modified":1521481915161},{"_id":"source/_posts/aerospike.md","hash":"574500ebde8ee05aedc13cd83ea4d7006a7214ef","modified":1521481173248},{"_id":"source/_posts/hs-err-pid-log里是些什么？.md","hash":"adab2ad6ca96a0391cd0fe70d794f1e4f33b83a3","modified":1523466999190},{"_id":"source/about/index.md","hash":"b6bb4609074366757d3a213a022813f4530f419d","modified":1521482138542},{"_id":"source/tags/index.md","hash":"e7f8e3ada89407cb9dbdcccb14f4b49c0f6f0c92","modified":1521394467386},{"_id":"themes/hexo-theme-icalm/.git/FETCH_HEAD","hash":"19bad14a30f953306cb94539d000cf3b85e7375c","modified":1521383383529},{"_id":"themes/hexo-theme-icalm/.git/HEAD","hash":"acbaef275e46a7f14c1ef456fff2c8bbe8c84724","modified":1521379839258},{"_id":"themes/hexo-theme-icalm/.git/ORIG_HEAD","hash":"a93f7d8ccd25cb8f1102509347f5c6ec59457693","modified":1521383383554},{"_id":"themes/hexo-theme-icalm/.git/config","hash":"3121be68f6066b2d828575326c35ff8e9dbfbf27","modified":1521379868335},{"_id":"themes/hexo-theme-icalm/.git/description","hash":"9635f1b7e12c045212819dd934d809ef07efa2f4","modified":1521379787176},{"_id":"themes/hexo-theme-icalm/.git/index","hash":"b445b6e9d654f4ec253e1e55a9763d65f334de8b","modified":1521379839264},{"_id":"themes/hexo-theme-icalm/.git/packed-refs","hash":"a977b60f81a2ead8076560fa3cc096342d3328d0","modified":1521379839245},{"_id":"themes/hexo-theme-icalm/icalm.png","hash":"8ff94d829e2effe28b6ba1e0fe6d3143fd30f79e","modified":1521379839262},{"_id":"themes/hexo-theme-icalm/layout/archive.ejs","hash":"68bd893a75698ae911d2c86b912220c05d50dac7","modified":1521379839263},{"_id":"themes/hexo-theme-icalm/layout/category.ejs","hash":"5677b70953e6a33038a0e03eaa06e45c10ec7d73","modified":1521379839263},{"_id":"themes/hexo-theme-icalm/layout/index.ejs","hash":"7141a6cf698526543a1bffe8f2dc3eda90546b24","modified":1521379839263},{"_id":"themes/hexo-theme-icalm/layout/layout.ejs","hash":"41011a9f41aa7772a45cd04f4d04c2f8f893e8ad","modified":1521379839263},{"_id":"themes/hexo-theme-icalm/layout/page.ejs","hash":"29c0b2c51f6beb1c1abe311288e4e307d72d8b37","modified":1521379839263},{"_id":"themes/hexo-theme-icalm/layout/post.ejs","hash":"da23f6a9168f7032173e27ce4b2832725d90a32f","modified":1521379839263},{"_id":"themes/hexo-theme-icalm/layout/tag.ejs","hash":"25422985e84d98c4124009f722a7180eb15f8e29","modified":1521379839263},{"_id":"themes/hexo-theme-icalm/layout/tags.ejs","hash":"adc83b19e793491b1c6ea0fd8b46cd9f32e592fc","modified":1521379839263},{"_id":"themes/hexo-theme-icalm/layout/_partial/comment.ejs","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1521404199546},{"_id":"themes/hexo-theme-icalm/layout/_partial/comment.ejs.bak","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1521395462776},{"_id":"source/.git/hooks/applypatch-msg.sample","hash":"86b9655a9ebbde13ac8dd5795eb4d5b539edab0f","modified":1521482367573},{"_id":"source/.git/hooks/commit-msg.sample","hash":"ee1ed5aad98a435f2020b6de35c173b75d9affac","modified":1521482367565},{"_id":"source/.git/hooks/post-update.sample","hash":"b614c2f63da7dca9f1db2e7ade61ef30448fc96c","modified":1521482367574},{"_id":"source/.git/hooks/pre-applypatch.sample","hash":"42fa41564917b44183a50c4d94bb03e1768ddad8","modified":1521482367554},{"_id":"source/.git/hooks/pre-commit.sample","hash":"e6c9fe47f7506171be08ed90baaf91d49bc7fe0c","modified":1521482367577},{"_id":"source/.git/hooks/pre-push.sample","hash":"503c3d2cd9066c2329ae84309c03a4c274f6d90e","modified":1521482367572},{"_id":"source/.git/hooks/pre-rebase.sample","hash":"5885a56ab4fca8075a05a562d005e922cde9853b","modified":1521482367552},{"_id":"source/.git/hooks/prepare-commit-msg.sample","hash":"2b6275eda365cad50d167fe3a387c9bc9fedd54f","modified":1521482367570},{"_id":"source/.git/hooks/update.sample","hash":"39355a075977d05708ef74e1b66d09a36e486df1","modified":1521482367563},{"_id":"source/.git/info/exclude","hash":"c879df015d97615050afa7b9641e3352a1e701ac","modified":1521482367581},{"_id":"source/.git/logs/HEAD","hash":"b7b2418691a1e09ca149dd3e316fab9a9b8ef8bb","modified":1521482448581},{"_id":"themes/hexo-theme-icalm/.git/hooks/applypatch-msg.sample","hash":"86b9655a9ebbde13ac8dd5795eb4d5b539edab0f","modified":1521379787176},{"_id":"themes/hexo-theme-icalm/.git/hooks/commit-msg.sample","hash":"ee1ed5aad98a435f2020b6de35c173b75d9affac","modified":1521379787176},{"_id":"themes/hexo-theme-icalm/.git/hooks/post-update.sample","hash":"b614c2f63da7dca9f1db2e7ade61ef30448fc96c","modified":1521379787176},{"_id":"themes/hexo-theme-icalm/.git/hooks/pre-applypatch.sample","hash":"42fa41564917b44183a50c4d94bb03e1768ddad8","modified":1521379787176},{"_id":"themes/hexo-theme-icalm/.git/hooks/pre-commit.sample","hash":"e6c9fe47f7506171be08ed90baaf91d49bc7fe0c","modified":1521379787176},{"_id":"themes/hexo-theme-icalm/.git/hooks/pre-push.sample","hash":"503c3d2cd9066c2329ae84309c03a4c274f6d90e","modified":1521379787176},{"_id":"themes/hexo-theme-icalm/.git/hooks/pre-rebase.sample","hash":"5885a56ab4fca8075a05a562d005e922cde9853b","modified":1521379787175},{"_id":"themes/hexo-theme-icalm/.git/hooks/prepare-commit-msg.sample","hash":"2b6275eda365cad50d167fe3a387c9bc9fedd54f","modified":1521379787176},{"_id":"themes/hexo-theme-icalm/.git/hooks/update.sample","hash":"39355a075977d05708ef74e1b66d09a36e486df1","modified":1521379787176},{"_id":"themes/hexo-theme-icalm/.git/info/exclude","hash":"c879df015d97615050afa7b9641e3352a1e701ac","modified":1521379787176},{"_id":"themes/hexo-theme-icalm/.git/logs/HEAD","hash":"6c83d1ab0ffc671f2ea31e18d9473b1ebd1d1daa","modified":1521379839258},{"_id":"themes/hexo-theme-icalm/layout/_partial/content-view.ejs","hash":"2fead763e1a6be98ab066eadd1a6f2f5bd65bcf2","modified":1521484373669},{"_id":"themes/hexo-theme-icalm/layout/_partial/content-view.ejs.bak","hash":"e74209c72656468f667f30803f02e4a90f0d8694","modified":1521404303994},{"_id":"themes/hexo-theme-icalm/layout/_partial/footer.ejs","hash":"29e68bdac92817e75eabc74b571440ef0d16c188","modified":1521404440104},{"_id":"themes/hexo-theme-icalm/layout/_partial/head.ejs","hash":"250a041335fddbc6e0dc69a6be77014052cbefd1","modified":1523465550367},{"_id":"themes/hexo-theme-icalm/layout/_partial/list-view.ejs","hash":"89590b74a483858850c19d85b69624e50dcdc6be","modified":1521379839263},{"_id":"themes/hexo-theme-icalm/layout/_partial/meta.ejs","hash":"de18ccc762c0ee30bc691cda349a3da7dcabfcb0","modified":1521379839263},{"_id":"themes/hexo-theme-icalm/layout/_partial/sidebar.ejs","hash":"6a4b1af564b9f280ec56a0e0b555a391ce89b9d8","modified":1521379839263},{"_id":"themes/hexo-theme-icalm/layout/_partial/tag-list.ejs","hash":"a4247a7e56c31b8c41d639489d6653caad980924","modified":1521379839263},{"_id":"themes/hexo-theme-icalm/layout/_partial/time-sec.ejs","hash":"bc94d6402f85855d77b0515d07b340f0d1aba3ac","modified":1521379839263},{"_id":"themes/hexo-theme-icalm/source/assets/avatar.jpg","hash":"738c4fd688e66a0ce9a93016c3afc64531430298","modified":1521402082497},{"_id":"themes/hexo-theme-icalm/source/assets/bin.svg","hash":"10c98979d69d4278bdce97eb1b576da81028d0f9","modified":1521379839263},{"_id":"themes/hexo-theme-icalm/source/assets/facebook.svg","hash":"253ec9ee52cf794f63402f405813233b13eb9a8a","modified":1521379839263},{"_id":"themes/hexo-theme-icalm/source/assets/favicon.ico","hash":"62bf0dbfc7065380a4d7f189244e126ae52267d9","modified":1521402092290},{"_id":"themes/hexo-theme-icalm/source/assets/github.css","hash":"06dd7af250791fa3a1550be960faf6c550caabbb","modified":1521379839263},{"_id":"themes/hexo-theme-icalm/source/assets/github.svg","hash":"42e66421ff642307384e1ae535a96ef6a84474ac","modified":1521379839263},{"_id":"themes/hexo-theme-icalm/source/css/style.styl","hash":"bf55a1291d10d8e4b2d0c6952e6584348b668da5","modified":1523455328758},{"_id":"source/.git/objects/2f/5e44529ff7a7c47a96207279843abbc976125c","hash":"e7cd6850622a4c8f0b32dc653a5a84b218054687","modified":1521482448579},{"_id":"source/.git/objects/35/044940135fec45fe1595758c4c4ba57856441f","hash":"9f1c30a90b8833e3829accc118e08cc3dd558a35","modified":1521482448578},{"_id":"source/.git/objects/42/afa3996054ebcf133c1ad747324f7004b68e04","hash":"89f093d50eca954e5d4bdd0521239f6a292c353b","modified":1521482442020},{"_id":"source/.git/objects/5e/11b7331f2b2faba86d08b8a04cfea9105f339d","hash":"a90934d12a4bbcbf44ae017f116b14f0bbc20ffe","modified":1521482441853},{"_id":"source/.git/objects/84/9d3424ca93f8aa7b935658445b7c25c53b229c","hash":"5789bad2b8f23ea429ee5b3905247b41c2eec6f3","modified":1521482448578},{"_id":"source/.git/objects/88/09b9ea44e365cf7926405853429672328ed0e6","hash":"707ad14f2ee8f52e9f389e9e0f279c46409b0a6e","modified":1521482448579},{"_id":"source/.git/objects/99/52b3274b6af0f96f210deaad5c2c3bdd73f552","hash":"a7805a823bda50d4d1b04eed263a0c4a32671768","modified":1521482441852},{"_id":"source/.git/objects/ad/8e4431bf59d93870492339ede0f7ca576b3348","hash":"98d52ca261acdfe389ba48730542a843f7bce7c1","modified":1521482441853},{"_id":"source/.git/objects/c9/5f6d2680c5705b1845bc0cd4b6f3dc32fde0a1","hash":"a878bb16dbc10a43ce23d6cc54b31ae1c8dbe6a9","modified":1521482448579},{"_id":"source/.git/objects/e3/81f2339dda30a962713694dd90406d6ca97685","hash":"23ee8ccd34822dd3b4f739537bd3863689f16432","modified":1521482448578},{"_id":"source/.git/objects/e4/464dd6033f3818ef8c00297e5d7b9963f4d969","hash":"cd68effe8386594109ef6ac36397c58efee853a1","modified":1521482441853},{"_id":"source/.git/refs/heads/master","hash":"5a0aa7965aae0a5906fe7ca43fcf03a8b2f27f63","modified":1521482448581},{"_id":"source/images/DASHENG-900x700-1.png","hash":"8f275ab03560b758667ea8fbe2a32683d39840de","modified":1521480378721},{"_id":"themes/hexo-theme-icalm/.git/objects/pack/pack-63f25b1c8b26ab64d5af41823d153c2e3a5167f8.idx","hash":"fb9753edc7efc78a9d4cd093ebd7783d7ba8cbac","modified":1521379839230},{"_id":"themes/hexo-theme-icalm/.git/refs/heads/master","hash":"a93f7d8ccd25cb8f1102509347f5c6ec59457693","modified":1521379839258},{"_id":"themes/hexo-theme-icalm/source/css/_partial/layout.styl","hash":"1a15c18a12a83fec95e328e59734587f24786748","modified":1523468117693},{"_id":"themes/hexo-theme-icalm/source/css/_partial/post.styl","hash":"2e5fb05fe8f63d2601b35c1b1f5b99daa337c51e","modified":1521379839264},{"_id":"themes/hexo-theme-icalm/source/css/_partial/sidebar.styl","hash":"4ad6ab904a4b1468bc8bd9a31dac1047a967bf0f","modified":1521379839264},{"_id":"themes/hexo-theme-icalm/source/css/_partial/time-sec.styl","hash":"bd7ce80df01bb89db05572d96ac79c1dfd13dcf3","modified":1521379839264},{"_id":"themes/hexo-theme-icalm/source/css/normalize/.editorconfig","hash":"e794b657184d870b9e4f15432a167543d740ff0a","modified":1521381357946},{"_id":"themes/hexo-theme-icalm/source/css/normalize/.git","hash":"467f7f909e2bc28d66ff761f92a21bc2b82d2ad3","modified":1521381357847},{"_id":"themes/hexo-theme-icalm/source/css/normalize/.gitattributes","hash":"36c9f198102955b8ae2f3c25f113b74d5fdf2129","modified":1521383394536},{"_id":"themes/hexo-theme-icalm/source/css/normalize/.gitignore","hash":"8b894ec0b3bbc33011392ad9bafeb1df2634db45","modified":1521383394536},{"_id":"themes/hexo-theme-icalm/source/css/normalize/.normalize.css.swp","hash":"64827e575fd3f83e0e24cb00de90065a1614b54b","modified":1523455587453},{"_id":"themes/hexo-theme-icalm/source/css/normalize/.travis.yml","hash":"297bedf68fa3f469e39997f1ba26921aa5e75cac","modified":1521381357946},{"_id":"themes/hexo-theme-icalm/source/css/normalize/CHANGELOG.md","hash":"411a40aacdd12ea69e0ec2ef2582439515a43c6f","modified":1521383394537},{"_id":"themes/hexo-theme-icalm/source/css/normalize/CONTRIBUTING.md","hash":"3a8c93c7e487e074c798e8c739bc54d1795e95a3","modified":1521383394537},{"_id":"themes/hexo-theme-icalm/source/css/normalize/LICENSE.md","hash":"b038d1a51028b10dd7ffc08769e433321feb3030","modified":1521381357946},{"_id":"themes/hexo-theme-icalm/source/css/normalize/README.md","hash":"e7b4f50354d0ef93c3078ca54002959e5bca0ab9","modified":1521383394537},{"_id":"themes/hexo-theme-icalm/source/css/normalize/normalize.css","hash":"ffffcf46688d103b8fd5ea96133f25a896078722","modified":1523467973206},{"_id":"themes/hexo-theme-icalm/source/css/normalize/package.json","hash":"a0ed51ac96946ad1f86027ac6596adbf4848d624","modified":1521383394538},{"_id":"themes/hexo-theme-icalm/source/css/normalize/test.html","hash":"c07a26e7df2638bf9db3124dc2cfca6a9833b898","modified":1521383394538},{"_id":"themes/hexo-theme-icalm/source/js/pager/.git","hash":"d2c8cc570d154ba3c15604d05b604554507e4723","modified":1521381376319},{"_id":"themes/hexo-theme-icalm/source/js/pager/.gitignore","hash":"ae8ec0d465b7ed72cc82446120fcb508e1e6d8db","modified":1521381376343},{"_id":"themes/hexo-theme-icalm/source/js/pager/LICENSE","hash":"c9e69c202fa2046fa96086557c74e37eb983762f","modified":1521381376343},{"_id":"themes/hexo-theme-icalm/source/js/pager/Makefile","hash":"01c1c29bde86f45167f56ad5b44fcfbd6a9551ee","modified":1521381376343},{"_id":"themes/hexo-theme-icalm/source/js/pager/README.md","hash":"0745ce8429baa6a58ae8a37b7cb04284dbca256c","modified":1521381376343},{"_id":"themes/hexo-theme-icalm/source/js/pager/package.json","hash":"3e5d0f9ea81bce122079f1790b3d7754d1301bda","modified":1521381376343},{"_id":"themes/hexo-theme-icalm/source/js/pager/rollup.config.js","hash":"b784a6e03d6e13a7c6c5e82d6bbd456beb37719e","modified":1521381376343},{"_id":"source/images/DASHENG-900x700-2.png","hash":"a483686830d76d8c820c3a6f83ad6efaccbc48c1","modified":1521480378733},{"_id":"source/images/DASHENG-900x700-4.png","hash":"84179d4eb90ec12b2498bdd0f08982e86d5b1511","modified":1521480378734},{"_id":"themes/hexo-theme-icalm/source/css/normalize/package-lock.json","hash":"50369ac608a4b8ee728bec9a82d7e3263a381792","modified":1521383394538},{"_id":"source/.git/logs/refs/heads/master","hash":"b7b2418691a1e09ca149dd3e316fab9a9b8ef8bb","modified":1521482448581},{"_id":"source/.git/refs/remotes/origin/master","hash":"5a0aa7965aae0a5906fe7ca43fcf03a8b2f27f63","modified":1521482475747},{"_id":"source/images/DASHENG-900x700-3.png","hash":"c7da56072a60e52e3e8f2a8407859f47f69e0055","modified":1521480378759},{"_id":"themes/hexo-theme-icalm/.git/logs/refs/heads/master","hash":"6c83d1ab0ffc671f2ea31e18d9473b1ebd1d1daa","modified":1521379839258},{"_id":"themes/hexo-theme-icalm/.git/refs/remotes/origin/HEAD","hash":"d9427cda09aba1cdde5c69c2b13c905bddb0bc51","modified":1521379839258},{"_id":"themes/hexo-theme-icalm/source/js/pager/dist/singlepager.js","hash":"89f0974fe54128d541b0f983209f461229bb3ee0","modified":1521381376343},{"_id":"themes/hexo-theme-icalm/source/js/pager/src/singlepager.ts","hash":"b6c229d01a8e2cea1f0654f42e3bfbde8da6c7da","modified":1521381376343},{"_id":"themes/hexo-theme-icalm/source/js/pager/test/test.html","hash":"8d18b73414e2ad45b54ec69017d8b91e0d7ac6c5","modified":1521381376343},{"_id":"themes/hexo-theme-icalm/source/js/pager/test/test1.html","hash":"1b12e906898c4c240f59eccaaef7032902437868","modified":1521381376344},{"_id":"themes/hexo-theme-icalm/.git/objects/pack/pack-63f25b1c8b26ab64d5af41823d153c2e3a5167f8.pack","hash":"e992b4cdb29f6ae6b6703c7cdae6c290502ba01e","modified":1521379839230},{"_id":"source/.git/logs/refs/remotes/origin/master","hash":"297f5f9429703779e7c794cc82af60f508c9d8f3","modified":1521482475747},{"_id":"source/.git/objects/06/6b6eca35a6dc2fedaae1651404914ebcca4df5","hash":"033524714034c611a6a7f5075b5b48ac609b481b","modified":1521482441882},{"_id":"themes/hexo-theme-icalm/.git/logs/refs/remotes/origin/HEAD","hash":"6c83d1ab0ffc671f2ea31e18d9473b1ebd1d1daa","modified":1521379839258},{"_id":"themes/hexo-theme-icalm/.git/modules/source/assets/normalize/FETCH_HEAD","hash":"8a3bc234c0323396d85e41f2fda786fb6a3c35b5","modified":1521383394499},{"_id":"themes/hexo-theme-icalm/.git/modules/source/assets/normalize/HEAD","hash":"caf7fa2023e0eb232a761d8a2ceabf239daa4861","modified":1521383394538},{"_id":"themes/hexo-theme-icalm/.git/modules/source/assets/normalize/config","hash":"c2b31379fee09437d98f3002eebd6f286d5495ef","modified":1521381357854},{"_id":"themes/hexo-theme-icalm/.git/modules/source/assets/normalize/description","hash":"9635f1b7e12c045212819dd934d809ef07efa2f4","modified":1521381041097},{"_id":"themes/hexo-theme-icalm/.git/modules/source/assets/normalize/index","hash":"56e91f41a8047123564534b5d2203ce9f213aeb4","modified":1521383394538},{"_id":"themes/hexo-theme-icalm/.git/modules/source/assets/normalize/packed-refs","hash":"c9caad7bcff426de1077044c60abc6267980bc12","modified":1521381357824},{"_id":"themes/hexo-theme-icalm/.git/modules/source/js/pager/FETCH_HEAD","hash":"02810bf77af5501472b6fcec518632e2dd9cb366","modified":1521383399966},{"_id":"themes/hexo-theme-icalm/.git/modules/source/js/pager/HEAD","hash":"749745f4b2770b6b9c7111d743f480bf648d35b3","modified":1521381376344},{"_id":"themes/hexo-theme-icalm/.git/modules/source/js/pager/config","hash":"c66b0425c22c36e0ae92799f9668d66f48f7c663","modified":1521381376325},{"_id":"themes/hexo-theme-icalm/.git/modules/source/js/pager/description","hash":"9635f1b7e12c045212819dd934d809ef07efa2f4","modified":1521381357995},{"_id":"themes/hexo-theme-icalm/.git/modules/source/js/pager/index","hash":"9364822fe7f0d8a2eca6d5f19ff9aceb9256a253","modified":1521381376344},{"_id":"themes/hexo-theme-icalm/.git/modules/source/js/pager/packed-refs","hash":"9960d2791fa02ff80dae089b83fb0ee8f952fc1b","modified":1521381376281},{"_id":"source/.git/objects/13/61a07ff02e584bff5d3626d8ffec6ef59185d3","hash":"bce4891b598fffccdd356a7e03516caee6eb744e","modified":1521482441927},{"_id":"source/.git/objects/d7/2d12f6210b96330a881f4d46c37ace748d307d","hash":"9c917f9ddcaa72828e861768bff478aeb494b45f","modified":1521482442017},{"_id":"source/.git/objects/9c/616b6f08b3810b89341d5ed01e889177548ed1","hash":"d3ca0ddb83c18619d302149b72b58b01ff6cc685","modified":1521482441974},{"_id":"themes/hexo-theme-icalm/.git/modules/source/assets/normalize/hooks/applypatch-msg.sample","hash":"86b9655a9ebbde13ac8dd5795eb4d5b539edab0f","modified":1521381041097},{"_id":"themes/hexo-theme-icalm/.git/modules/source/assets/normalize/hooks/commit-msg.sample","hash":"ee1ed5aad98a435f2020b6de35c173b75d9affac","modified":1521381041097},{"_id":"themes/hexo-theme-icalm/.git/modules/source/assets/normalize/hooks/post-update.sample","hash":"b614c2f63da7dca9f1db2e7ade61ef30448fc96c","modified":1521381041097},{"_id":"themes/hexo-theme-icalm/.git/modules/source/assets/normalize/hooks/pre-applypatch.sample","hash":"42fa41564917b44183a50c4d94bb03e1768ddad8","modified":1521381041097},{"_id":"themes/hexo-theme-icalm/.git/modules/source/assets/normalize/hooks/pre-commit.sample","hash":"e6c9fe47f7506171be08ed90baaf91d49bc7fe0c","modified":1521381041097},{"_id":"themes/hexo-theme-icalm/.git/modules/source/assets/normalize/hooks/pre-push.sample","hash":"503c3d2cd9066c2329ae84309c03a4c274f6d90e","modified":1521381041097},{"_id":"themes/hexo-theme-icalm/.git/modules/source/assets/normalize/hooks/pre-rebase.sample","hash":"5885a56ab4fca8075a05a562d005e922cde9853b","modified":1521381041097},{"_id":"themes/hexo-theme-icalm/.git/modules/source/assets/normalize/hooks/prepare-commit-msg.sample","hash":"2b6275eda365cad50d167fe3a387c9bc9fedd54f","modified":1521381041097},{"_id":"themes/hexo-theme-icalm/.git/modules/source/assets/normalize/hooks/update.sample","hash":"39355a075977d05708ef74e1b66d09a36e486df1","modified":1521381041097},{"_id":"themes/hexo-theme-icalm/.git/modules/source/assets/normalize/info/exclude","hash":"c879df015d97615050afa7b9641e3352a1e701ac","modified":1521381041097},{"_id":"themes/hexo-theme-icalm/.git/modules/source/assets/normalize/logs/HEAD","hash":"8ce5b57031e9b22efd114f87f44f0725c3ecea39","modified":1521383394538},{"_id":"themes/hexo-theme-icalm/.git/modules/source/js/pager/hooks/applypatch-msg.sample","hash":"86b9655a9ebbde13ac8dd5795eb4d5b539edab0f","modified":1521381357995},{"_id":"themes/hexo-theme-icalm/.git/modules/source/js/pager/hooks/commit-msg.sample","hash":"ee1ed5aad98a435f2020b6de35c173b75d9affac","modified":1521381357995},{"_id":"themes/hexo-theme-icalm/.git/modules/source/js/pager/hooks/post-update.sample","hash":"b614c2f63da7dca9f1db2e7ade61ef30448fc96c","modified":1521381357995},{"_id":"themes/hexo-theme-icalm/.git/modules/source/js/pager/hooks/pre-applypatch.sample","hash":"42fa41564917b44183a50c4d94bb03e1768ddad8","modified":1521381357995},{"_id":"themes/hexo-theme-icalm/.git/modules/source/js/pager/hooks/pre-commit.sample","hash":"e6c9fe47f7506171be08ed90baaf91d49bc7fe0c","modified":1521381357995},{"_id":"themes/hexo-theme-icalm/.git/modules/source/js/pager/hooks/pre-push.sample","hash":"503c3d2cd9066c2329ae84309c03a4c274f6d90e","modified":1521381357995},{"_id":"themes/hexo-theme-icalm/.git/modules/source/js/pager/hooks/pre-rebase.sample","hash":"5885a56ab4fca8075a05a562d005e922cde9853b","modified":1521381357995},{"_id":"themes/hexo-theme-icalm/.git/modules/source/js/pager/hooks/prepare-commit-msg.sample","hash":"2b6275eda365cad50d167fe3a387c9bc9fedd54f","modified":1521381357995},{"_id":"themes/hexo-theme-icalm/.git/modules/source/js/pager/hooks/update.sample","hash":"39355a075977d05708ef74e1b66d09a36e486df1","modified":1521381357995},{"_id":"themes/hexo-theme-icalm/.git/modules/source/js/pager/info/exclude","hash":"c879df015d97615050afa7b9641e3352a1e701ac","modified":1521381357995},{"_id":"themes/hexo-theme-icalm/.git/modules/source/js/pager/logs/HEAD","hash":"e87f533d176b230f82a31ac76196fde41da8c785","modified":1521381376344},{"_id":"themes/hexo-theme-icalm/.git/modules/source/assets/normalize/objects/pack/pack-49a2be01ba856e06822070c58c8e24fa7f44722c.idx","hash":"4cfd0501035027e9b76cdb07ab7a2c85aed1b099","modified":1521381357785},{"_id":"themes/hexo-theme-icalm/.git/modules/source/assets/normalize/refs/heads/master","hash":"caf7fa2023e0eb232a761d8a2ceabf239daa4861","modified":1521381357833},{"_id":"themes/hexo-theme-icalm/.git/modules/source/js/pager/objects/00/5fd36630e81d1513c4bdae04ed4ea647c8e811","hash":"fc463391d491823eb135d3a2e02542be37998333","modified":1521381363783},{"_id":"themes/hexo-theme-icalm/.git/modules/source/js/pager/objects/00/ff72e9fee408f496353582036a4a0c12034afc","hash":"9ec175fa7b0d8267516617128659c7834b8d2293","modified":1521381376269},{"_id":"themes/hexo-theme-icalm/.git/modules/source/js/pager/objects/04/d7b866ffd588081d753166944908e441702247","hash":"9305385e31c2675f43ff35410429bcd1c6d4c0a0","modified":1521381363799},{"_id":"themes/hexo-theme-icalm/.git/modules/source/js/pager/objects/05/d868c23196734608fbde4ddaf4de95761870cf","hash":"2da1aa813166b5c7031e964ad2a2be48c1158b08","modified":1521381376267},{"_id":"themes/hexo-theme-icalm/.git/modules/source/js/pager/objects/0c/919f9ec621ac28239ab8482c94ca914c97f074","hash":"ce57e3ff7886e3ec78d300cadc1f886d1a807f7d","modified":1521381363798},{"_id":"themes/hexo-theme-icalm/.git/modules/source/js/pager/objects/0f/027be51d73b1adfdb83a3ae80e71c99a5694ae","hash":"312f28d3ba7173ee67e990b8cb011b3efe14b688","modified":1521381376267},{"_id":"themes/hexo-theme-icalm/.git/modules/source/js/pager/objects/1a/40b80a073f07070c050d3eb817bd90871a987c","hash":"149ffbb035c5bf8967955c9425d0e8c682885fa7","modified":1521381363797},{"_id":"themes/hexo-theme-icalm/.git/modules/source/js/pager/objects/1c/6f9d0e09d732abf7650de443bddb62b36ee419","hash":"c88ffd9c7b4439b81c6f311ab183db3671473f56","modified":1521381376274},{"_id":"themes/hexo-theme-icalm/.git/modules/source/js/pager/objects/1d/16e6439f3ffb117f51511af5cd53c9d02e6e55","hash":"b500d9aacca599c9bb36848ccdb0a2a9c2aecbed","modified":1521381376270},{"_id":"themes/hexo-theme-icalm/.git/modules/source/js/pager/objects/1f/55dc50716975bc7994556719a18d53b182add4","hash":"86d8f020904f47fdd06c4b9d3928954172a6faee","modified":1521381363796},{"_id":"themes/hexo-theme-icalm/.git/modules/source/js/pager/objects/21/122b5162b75f8c13a11d6f95bb8f29f943c0c7","hash":"748289b7c934713c39acbbde9e1303bf3d61c1bb","modified":1521381363783},{"_id":"themes/hexo-theme-icalm/.git/modules/source/js/pager/objects/21/127c553767c1751296e733db00a86d1f94bfec","hash":"05f5d9096c8043e7425e52a3de9990982fd4dc56","modified":1521381376271},{"_id":"themes/hexo-theme-icalm/.git/modules/source/js/pager/objects/25/571e3b485dde90ad71b73ca2b9ff9f31eec5a6","hash":"5d815f92ca54738af2747d2ca269aa03c88f5fd4","modified":1521381376267},{"_id":"themes/hexo-theme-icalm/.git/modules/source/js/pager/objects/26/4eaf84585bad809d0abe6d72bbeb9cf3255ed3","hash":"3a7b77ad2ea6d4957ea782a418a268ab5822e8bf","modified":1521381376272},{"_id":"themes/hexo-theme-icalm/.git/modules/source/js/pager/objects/27/aa755ede4fd357a24f540e3e912ddc9bab2b9a","hash":"1edd06b7f3660b10b0bf27d7cb5eb21fdd28b043","modified":1521381376266},{"_id":"themes/hexo-theme-icalm/.git/modules/source/js/pager/objects/28/9ed0f23f2d99b78230edb3801f93f63da9328e","hash":"f87d21397f6f2324e130aa22c27c7562f6afa197","modified":1521381376273},{"_id":"themes/hexo-theme-icalm/.git/modules/source/js/pager/objects/2b/0ca16b914b92aea72c36632f4a2655f28ca770","hash":"777cd1a61c4b16e8d3db72809810de3aee49bf56","modified":1521381363796},{"_id":"themes/hexo-theme-icalm/.git/modules/source/js/pager/objects/2c/fea9c620e6ebb22dd472cf289bfd010bb53d50","hash":"7cf901de29c9513963ee5dc7439497a4babecb00","modified":1521381376270},{"_id":"themes/hexo-theme-icalm/.git/modules/source/js/pager/objects/2d/b8e814d345e3196398c1155419296d069b22f9","hash":"15a5f525f2aac72959e0360595e4f616b7c1ce05","modified":1521381363796},{"_id":"themes/hexo-theme-icalm/.git/modules/source/js/pager/objects/2f/912a62373683ff5837f420d838641d1ee4a9a4","hash":"dd9949bb2d4af97f4f18fc9f905be84a57f58b08","modified":1521381363798},{"_id":"themes/hexo-theme-icalm/.git/modules/source/js/pager/objects/2f/e5a363b841985eea31209f0ae8978432c1217e","hash":"8357f17bf17021335256443e61d2fb02f13619c6","modified":1521381376271},{"_id":"themes/hexo-theme-icalm/.git/modules/source/js/pager/objects/31/2a328d60f051d0a4a14ce3365265edef152a31","hash":"cb263f1d0404f7c56c3c0126d4e8a87517e0bbd4","modified":1521381363799},{"_id":"themes/hexo-theme-icalm/.git/modules/source/js/pager/objects/31/8330ed500f2db79bfa9c9a84ba34351c776995","hash":"5f994218143329aa9b72ceb2b32b132f1ac0fa8d","modified":1521381363800},{"_id":"themes/hexo-theme-icalm/.git/modules/source/js/pager/objects/34/12badd6590b76f5c4e0f5ac5fd834955bc5656","hash":"7e816023681ce6cdd9ef9369ea999634f990a1e6","modified":1521381376272},{"_id":"themes/hexo-theme-icalm/.git/modules/source/js/pager/objects/38/f63cd9b656243ccc41438d62f18b1223884f1d","hash":"6c8140340b77dc5a143cbba7366ec2668b6b254e","modified":1521381376271},{"_id":"themes/hexo-theme-icalm/.git/modules/source/js/pager/objects/3d/1f7cd9bf17032fad97c25dfaf6dc893121049b","hash":"a6289b1af8a39056101cd23d3f832a9c768c23e4","modified":1521381363796},{"_id":"themes/hexo-theme-icalm/.git/modules/source/js/pager/objects/42/fd76e0395b32bcaaa892f3b216e458c03c0f54","hash":"f49396354670b49f06a11f59890d2d1f7c0ae35e","modified":1521381363796},{"_id":"themes/hexo-theme-icalm/.git/modules/source/js/pager/objects/43/dceaf245338e8b184ad1f3fa112088d0593f8c","hash":"05f852aad6e4db87e2a2720da2c4387a169320ff","modified":1521381376274},{"_id":"themes/hexo-theme-icalm/.git/modules/source/js/pager/objects/43/f182cbd84c8c7c4f5904f4d28fb63ff3a2b10a","hash":"f46c693435a5d6dfc1b4d6bda03636f9af938867","modified":1521381376273},{"_id":"themes/hexo-theme-icalm/.git/modules/source/js/pager/objects/4b/e7f1bfd743359259eb490d8bdc979f98f526a7","hash":"754e028edd4e56ca11cf1e25997e408eef47064a","modified":1521381376269},{"_id":"themes/hexo-theme-icalm/.git/modules/source/js/pager/objects/51/3b8fa24cbe46f6ec00ddc61470be00f8fc4d62","hash":"a9a5478d83feace4dc7c7f22ffd28fdc83cf6834","modified":1521381376265},{"_id":"themes/hexo-theme-icalm/.git/modules/source/js/pager/objects/51/4c893cf5387f7c82e67d21b48cce4e1d4bfea8","hash":"adc12ad8071601042e3093cb61e0f6b139736c49","modified":1521381376267},{"_id":"themes/hexo-theme-icalm/.git/modules/source/js/pager/objects/52/d1507976682c0f5abb64514523b0a3b8b94d09","hash":"ee93527cb4cc7ea01f665736a88e2fe300ca390e","modified":1521381376275},{"_id":"themes/hexo-theme-icalm/.git/modules/source/js/pager/objects/59/6b67ce2ff4c28f90f49aec3b72ddf278501ae2","hash":"521769d06d849b955a77b1f96cd6c71cebce235e","modified":1521381363782},{"_id":"themes/hexo-theme-icalm/.git/modules/source/js/pager/objects/5b/0d5ade2a6664749ad1c222d59d6589d1ff8288","hash":"79cd5be2eb8f445608bd88bd780d6dbe17ee1342","modified":1521381376275},{"_id":"themes/hexo-theme-icalm/.git/modules/source/js/pager/objects/5c/ab5628983805978abe301b0bdbfd01fd4cba9b","hash":"edc3e2d1aec42ef0fa7366135fcb74c217db77e3","modified":1521381376268},{"_id":"themes/hexo-theme-icalm/.git/modules/source/js/pager/objects/5c/efc781784d633e74850a9d20a8ff1a419e8f8a","hash":"00ac6d73bbc66c3def96fc42c76d4147eee23f44","modified":1521381363782},{"_id":"themes/hexo-theme-icalm/.git/modules/source/js/pager/objects/61/8b241bbf2d15404ea8002f18940e3134528642","hash":"821e2b36919924333e0d9adf3b0b8bafc47fcab2","modified":1521381376274},{"_id":"themes/hexo-theme-icalm/.git/modules/source/js/pager/objects/68/d62c4f44c468ca379b619e07e906feb93e93e1","hash":"20f541f88414329b6644099bd7d614d689ca141a","modified":1521381363796},{"_id":"themes/hexo-theme-icalm/.git/modules/source/js/pager/objects/69/6761a9c86ace5367b0d91a053e5c69c1c841dc","hash":"292b67d3b514c350c49f42fcceab0f681268ad6c","modified":1521381363797},{"_id":"themes/hexo-theme-icalm/.git/modules/source/js/pager/objects/6d/d1578745af1173f5ced6e0b6e02caaab8331c5","hash":"29f8649e26726f4db41278461e742f284ece2128","modified":1521381376273},{"_id":"themes/hexo-theme-icalm/.git/modules/source/js/pager/objects/6f/1dad472f476fde6ee0f18dafd9583cab47f0aa","hash":"5da3fb06ed1dffacc9150612fe2ae2028b0625f0","modified":1521381376275},{"_id":"themes/hexo-theme-icalm/.git/modules/source/js/pager/objects/70/aff374ac942f1543ff45c80c5fcbb20b45fbe8","hash":"e09eca78061d7675bc542c7d2a814720ee8f69a5","modified":1521381376274},{"_id":"themes/hexo-theme-icalm/.git/modules/source/js/pager/objects/73/5c3353ec7f0c32e03a044edf6916a8d640bb11","hash":"406e5606f1168601e49356778862376ceb3ee8ad","modified":1521381376269},{"_id":"themes/hexo-theme-icalm/.git/modules/source/js/pager/objects/77/f1ac8e0a042111a7d377238f67cdcb2ad5f382","hash":"e01114eef65e868d769ae2c95eb3c25e0a7c01fa","modified":1521381376268},{"_id":"themes/hexo-theme-icalm/.git/modules/source/js/pager/objects/7c/88c776bfa241132e78458f9edbd74caba11c56","hash":"0ff4713b70fe9d9e1b77ef6837cf98a5f4e66cd5","modified":1521381376272},{"_id":"themes/hexo-theme-icalm/.git/modules/source/js/pager/objects/83/bdefa65b2f4fa3a88a63aaecdc3aeec47958dd","hash":"4063fa912e5e5910c5eb25bcf7c03bac8ce3e044","modified":1521381376268},{"_id":"themes/hexo-theme-icalm/.git/modules/source/js/pager/objects/85/734fb425758837c9aa3813d58e1543a1d18fd2","hash":"f5c7c2a2d9771827d6d2f6c1b74a3cf8ec564f19","modified":1521381376271},{"_id":"themes/hexo-theme-icalm/.git/modules/source/js/pager/objects/85/901b201022092f97959ea2739a9c8e8ab11835","hash":"c28cee0107b058e582ec01e38245ce93b3d5618b","modified":1521381376265},{"_id":"themes/hexo-theme-icalm/.git/modules/source/js/pager/objects/8c/660ce72a1cf4f7be6d4f6df24a6282495bdb78","hash":"31e6f7ab0cd4d5bfd5d10303d22679b97b5ab970","modified":1521381376276},{"_id":"themes/hexo-theme-icalm/.git/modules/source/js/pager/objects/8c/a2d369827064f0479b87cf11405aa2c35a62fe","hash":"97ff1a7c0b4f6c518ae1783c0ad4d143272fe2b4","modified":1521381363800},{"_id":"themes/hexo-theme-icalm/.git/modules/source/js/pager/objects/90/52781ca0a4d846c33926a399f67829c044c312","hash":"42a5190e313cab5a382a419272bbe3fe2e879df8","modified":1521381376272},{"_id":"themes/hexo-theme-icalm/.git/modules/source/js/pager/objects/96/2e6ab9921e23f963bbaf723ddd66394c593e0e","hash":"8787142349510f869f26b0df5c88c2b3412accac","modified":1521381376276},{"_id":"themes/hexo-theme-icalm/.git/modules/source/js/pager/objects/96/73effd77c142060157df302ec8c24d50a02cf1","hash":"5c646941e7bbabb928e999912385e36a8518cb56","modified":1521381363799},{"_id":"themes/hexo-theme-icalm/.git/modules/source/js/pager/objects/96/89f68bb24dc5a70115b2e5aac7040d35d80f4e","hash":"2bf2e5905168dbb4998121095706fd87d043c526","modified":1521381363798},{"_id":"themes/hexo-theme-icalm/.git/modules/source/js/pager/objects/98/bf3ca3d51442fa21f4eaa593c18ac07bd04f3b","hash":"4d95f8f77bd141763b7d1103172bccd8259eeebb","modified":1521381376274},{"_id":"themes/hexo-theme-icalm/.git/modules/source/js/pager/objects/9a/7ac6d5856f1e386b98bc011c8250e781cb849f","hash":"7e669df93901ccbdebbbdc77f59615ba27a23bb0","modified":1521381376271},{"_id":"themes/hexo-theme-icalm/.git/modules/source/js/pager/objects/9c/3f220f57b061f86e1ee509098f6a8a7ca60873","hash":"3c4ad84dee37d0051360c2f066050bbc303d9551","modified":1521381376270},{"_id":"themes/hexo-theme-icalm/.git/modules/source/js/pager/objects/9d/c6ec3cb31218dd3c4c96d0e23dc0d6569dbdf2","hash":"18659ed405af005bb701aa2d7cb4f22dfb92311d","modified":1521381376274},{"_id":"themes/hexo-theme-icalm/.git/modules/source/js/pager/objects/9f/31f48e9f2cd259b666693a6460086acef9d141","hash":"8a0ce3ec3a80d9d87ddff56da3579c697c6a5dcd","modified":1521381376275},{"_id":"themes/hexo-theme-icalm/.git/modules/source/js/pager/objects/a3/752bdabdc640c5f0d6745011ac69e5ab2bab9b","hash":"aad626755c90e3f311bd9ca7eb2ef4410e2eeede","modified":1521381376270},{"_id":"themes/hexo-theme-icalm/.git/modules/source/js/pager/objects/a7/c081861bbee80405f3d17d4492968c657d490b","hash":"1923db5c0aec32c60f8e58505882772d0a0187ce","modified":1521381376275},{"_id":"themes/hexo-theme-icalm/.git/modules/source/js/pager/objects/a8/ec06a7013008a42efce4a61ae76b25a93f307e","hash":"3d16f52075ddaa042fd7e10bd95dc49b38dfa133","modified":1521381376264},{"_id":"themes/hexo-theme-icalm/.git/modules/source/js/pager/objects/a9/0bd795d8db2efdfe3366a250c2fab8d6dab95d","hash":"699370412d10476d4cf95c935235b6ef2aff9521","modified":1521381363799},{"_id":"themes/hexo-theme-icalm/.git/modules/source/js/pager/objects/af/b36999dffa27bef00cb04611f8b58d9e288484","hash":"1b0fc8f6991cb81d8f10e95e0907c4fff013cab0","modified":1521381376268},{"_id":"themes/hexo-theme-icalm/.git/modules/source/js/pager/objects/b1/907bd8044932fcd695eca0aa7aba447b826659","hash":"f1337549342fd50b376bf34ea03a6574b8cfe908","modified":1521381376273},{"_id":"themes/hexo-theme-icalm/.git/modules/source/js/pager/objects/b1/d97bad33683e56ccc39ef6f9b424aa93320282","hash":"ff3e0369a816060d7fd9d30de41fb77b9b8826ba","modified":1521381363782},{"_id":"themes/hexo-theme-icalm/.git/modules/source/js/pager/objects/b4/67adde43fcfa8099c1d1e9346dac53ed514785","hash":"aa539e517499de73cc35daa9c72c6e11e16420d4","modified":1521381376272},{"_id":"themes/hexo-theme-icalm/.git/modules/source/js/pager/objects/bd/d7f2e3103cf77547c488b4a24093efacb7ae8d","hash":"82048efaf6158bf866967d0685695bc09523bd47","modified":1521381376275},{"_id":"themes/hexo-theme-icalm/.git/modules/source/js/pager/objects/c4/6801a4d091e3f180addf854446c3238ed6f17b","hash":"f3bd05ece8905fb0fcd9a056b397d6923f17d87c","modified":1521381376273},{"_id":"themes/hexo-theme-icalm/.git/modules/source/js/pager/objects/c5/9c7e218dfb9f3defd3bd84b2f8589210fa1141","hash":"93f12d50381c422a07a649e348e9b26920125d45","modified":1521381363797},{"_id":"themes/hexo-theme-icalm/.git/modules/source/js/pager/objects/c9/c06bb8cf307155518e6ba15e138043b801a254","hash":"d46101bd1d1df43812edf780e50ff8e6c6ee67d6","modified":1521381376274},{"_id":"themes/hexo-theme-icalm/.git/modules/source/js/pager/objects/cb/dd690d9e7079f1b02e42baa5a11fa82066dcca","hash":"7df47973bee2df825bbe203ae20fb6bae2c04277","modified":1521381376272},{"_id":"themes/hexo-theme-icalm/.git/modules/source/js/pager/objects/cd/f494a1cb86e4947882de60bcbef39d7488d7a6","hash":"aa16b63d480aa88928e4740c743dbb2441328437","modified":1521381363798},{"_id":"themes/hexo-theme-icalm/.git/modules/source/js/pager/objects/cf/3c691d978673519e968c8a81ff58a019d0cefc","hash":"cebe0c820173041fc1d875c57c7faf5e6d2f2a4d","modified":1521381376266},{"_id":"themes/hexo-theme-icalm/.git/modules/source/js/pager/objects/cf/e7393500bb3db65cebae8f20365f8941a249da","hash":"ce510d3678cda6752d7d54f0d3fe2faca3f9a61a","modified":1521381376276},{"_id":"themes/hexo-theme-icalm/.git/modules/source/js/pager/objects/d2/1d9b70b8ec7aa5a21df20f9f51a66ca272c270","hash":"df137ab25df5c81c4d0321c67793c15bec5d8d9a","modified":1521381363798},{"_id":"themes/hexo-theme-icalm/.git/modules/source/js/pager/objects/d3/1315bc4d016a1ab5294296bbdbc35c1c0f6bfa","hash":"04bc2fdae2636b85779419c460b74ae593cc6a29","modified":1521381376273},{"_id":"themes/hexo-theme-icalm/.git/modules/source/js/pager/objects/d3/1b77e1053eebf9afc439d84d0a923d619c3e57","hash":"8d5196c442815ba8efc28e54c24bbfa239fc4f1c","modified":1521381376275},{"_id":"themes/hexo-theme-icalm/.git/modules/source/js/pager/objects/d3/e3e2273cde4233578b2e374ccd5dcc3d315935","hash":"c8b4ef31b271324fb44d8bf783d9a944edf66648","modified":1521381363797},{"_id":"themes/hexo-theme-icalm/.git/modules/source/js/pager/objects/df/eef7b5d8368462f1ea01329e7885a59b72ee7a","hash":"a4ef6ae0ef797a1d4f683825207cbbdfa636c261","modified":1521381363783},{"_id":"themes/hexo-theme-icalm/.git/modules/source/js/pager/objects/f0/5e73632c8e2958eebc8f70c8a1f52980cbe630","hash":"242efc3c307052592326e3f41677b6d7b1097431","modified":1521381376276},{"_id":"themes/hexo-theme-icalm/.git/modules/source/js/pager/objects/f4/e0f03e42ee5b5a4091d28e76ddc624e7a10a25","hash":"6151adf767ca4df7cc09a010714fbb26adb92cec","modified":1521381363798},{"_id":"themes/hexo-theme-icalm/.git/modules/source/js/pager/objects/f7/e8ea76ae5c1812eb9b6c1200cb88f402874e37","hash":"b23d537367afe2172cdd91cb97516a04342c8389","modified":1521381376264},{"_id":"themes/hexo-theme-icalm/.git/modules/source/js/pager/objects/f9/f22ae33dadf3aac37fa474b6e4d1d014c9e6cb","hash":"671cd05775a480acfe3c92978d2cbe203bf0301b","modified":1521381376267},{"_id":"themes/hexo-theme-icalm/.git/modules/source/js/pager/objects/fe/2a375db6381544592ecabf1d8d8915ec8c9357","hash":"594fbd763b3b442fb8e1a219f555836f8ea8186d","modified":1521381376272},{"_id":"themes/hexo-theme-icalm/.git/modules/source/js/pager/refs/heads/master","hash":"749745f4b2770b6b9c7111d743f480bf648d35b3","modified":1521381376307},{"_id":"themes/hexo-theme-icalm/.git/modules/source/assets/normalize/logs/refs/heads/master","hash":"63676dde38b70d8799f1c2a47f1cbb2deed58016","modified":1521381357833},{"_id":"themes/hexo-theme-icalm/.git/modules/source/assets/normalize/refs/remotes/origin/HEAD","hash":"d9427cda09aba1cdde5c69c2b13c905bddb0bc51","modified":1521381357833},{"_id":"themes/hexo-theme-icalm/.git/modules/source/js/pager/logs/refs/heads/master","hash":"5c683c28a8a17ba97b61fe9a77ac2a4022951049","modified":1521381376307},{"_id":"themes/hexo-theme-icalm/.git/modules/source/js/pager/refs/remotes/origin/HEAD","hash":"d9427cda09aba1cdde5c69c2b13c905bddb0bc51","modified":1521381376307},{"_id":"themes/hexo-theme-icalm/.git/modules/source/assets/normalize/logs/refs/remotes/origin/HEAD","hash":"63676dde38b70d8799f1c2a47f1cbb2deed58016","modified":1521381357833},{"_id":"themes/hexo-theme-icalm/.git/modules/source/js/pager/logs/refs/remotes/origin/HEAD","hash":"5c683c28a8a17ba97b61fe9a77ac2a4022951049","modified":1521381376307},{"_id":"themes/hexo-theme-icalm/.git/modules/source/assets/normalize/objects/pack/pack-49a2be01ba856e06822070c58c8e24fa7f44722c.pack","hash":"9f780cea8fcccba7f7d02e1d6515f718bf8745b7","modified":1521381357784},{"_id":"public/hexo-admin-ehc-images.json","hash":"0d165d7223eabfe5ebab834a5d89c8cb9731b5ff","modified":1523468157670},{"_id":"public/about/index.html","hash":"422561299fc8f49c263e8118c5475c7b4b2adcab","modified":1523468157940},{"_id":"public/tags/index.html","hash":"d5c8b7914a0a17499d30e9f3f6a0ffcce9ff01ca","modified":1523468157940},{"_id":"public/2018/03/20/Flink的Exactly-Once/index.html","hash":"7df4872bb0c031432e3509fe40652f0ac7739937","modified":1523468157940},{"_id":"public/2018/03/20/aerospike/index.html","hash":"019719398ccf7422808872d03e923380b84d8c9b","modified":1523468157941},{"_id":"public/archives/index.html","hash":"cd297941e73d5a9ef0f6cc69a257b57805b049c7","modified":1523468157941},{"_id":"public/archives/2018/index.html","hash":"cd297941e73d5a9ef0f6cc69a257b57805b049c7","modified":1523468157941},{"_id":"public/archives/2018/03/index.html","hash":"cd297941e73d5a9ef0f6cc69a257b57805b049c7","modified":1523468157941},{"_id":"public/archives/2018/04/index.html","hash":"cd297941e73d5a9ef0f6cc69a257b57805b049c7","modified":1523468157941},{"_id":"public/tags/flink/index.html","hash":"4c2335705458504e1b54343586143246cd3206c8","modified":1523468157941},{"_id":"public/tags/exactly-once/index.html","hash":"b20b849d4ad2d844cd6ff6e7818a1d09f97e3579","modified":1523468157941},{"_id":"public/tags/Aerospike/index.html","hash":"ba2f5c92d59ec1914ccd6e9eaae70dc0fa646833","modified":1523468157942},{"_id":"public/2018/04/11/hs-err-pid-log里是些什么？/index.html","hash":"24738101ce2798fac736e1471d5cb95e8a3741cd","modified":1523468157942},{"_id":"public/index.html","hash":"d43310b8ea59aa28ba7ef5c41a72d73fa2379013","modified":1523468157942},{"_id":"public/tags/memory/index.html","hash":"a7c9399a339f3d3589910ad625e5f13afc2d43ec","modified":1523468157942},{"_id":"public/tags/linux/index.html","hash":"95ce9f2d4f2f6d64835775cce4865f52e5f32841","modified":1523468157942},{"_id":"public/assets/avatar.jpg","hash":"738c4fd688e66a0ce9a93016c3afc64531430298","modified":1523468157957},{"_id":"public/assets/bin.svg","hash":"10c98979d69d4278bdce97eb1b576da81028d0f9","modified":1523468157958},{"_id":"public/assets/facebook.svg","hash":"253ec9ee52cf794f63402f405813233b13eb9a8a","modified":1523468157958},{"_id":"public/assets/favicon.ico","hash":"62bf0dbfc7065380a4d7f189244e126ae52267d9","modified":1523468157958},{"_id":"public/assets/github.svg","hash":"42e66421ff642307384e1ae535a96ef6a84474ac","modified":1523468157958},{"_id":"public/js/pager/LICENSE","hash":"c9e69c202fa2046fa96086557c74e37eb983762f","modified":1523468157958},{"_id":"public/js/pager/Makefile","hash":"01c1c29bde86f45167f56ad5b44fcfbd6a9551ee","modified":1523468157958},{"_id":"public/js/pager/src/singlepager.ts","hash":"b6c229d01a8e2cea1f0654f42e3bfbde8da6c7da","modified":1523468157959},{"_id":"public/assets/github.css","hash":"06dd7af250791fa3a1550be960faf6c550caabbb","modified":1523468158517},{"_id":"public/css/normalize/CHANGELOG.html","hash":"99d1911a807efdc12c7296497dd2ecfab5d16ddb","modified":1523468158517},{"_id":"public/css/normalize/CONTRIBUTING.html","hash":"6cd84a8735e36a82be14e6115e243589937b3dd2","modified":1523468158517},{"_id":"public/css/normalize/LICENSE.html","hash":"5334111737bc533756eacd35fbbaae7c3ac935a7","modified":1523468158517},{"_id":"public/css/normalize/README.html","hash":"a9c5da9373a48c93dae4b75e373c1b53d1b9303e","modified":1523468158517},{"_id":"public/css/normalize/normalize.css","hash":"ffffcf46688d103b8fd5ea96133f25a896078722","modified":1523468158517},{"_id":"public/css/normalize/package.json","hash":"965a5fc7b2b59eabc43e0beb02a0ea0835e6d371","modified":1523468158517},{"_id":"public/css/normalize/test.html","hash":"c07a26e7df2638bf9db3124dc2cfca6a9833b898","modified":1523468158518},{"_id":"public/js/pager/README.html","hash":"2dab6a04639e9c03ca2e61985b6c7aa6d8a60efc","modified":1523468158518},{"_id":"public/js/pager/package.json","hash":"e9999665140b683a3ea7dde5e76ad9df0cc687a3","modified":1523468158518},{"_id":"public/js/pager/rollup.config.js","hash":"b784a6e03d6e13a7c6c5e82d6bbd456beb37719e","modified":1523468158518},{"_id":"public/js/pager/dist/singlepager.js","hash":"52d8a8f86357f1b907c6f6b3ddd117569dccb22f","modified":1523468158518},{"_id":"public/js/pager/test/test.html","hash":"3b07cb27a6942aea4515cc67902936153f310880","modified":1523468158518},{"_id":"public/js/pager/test/test1.html","hash":"9bea4ee467c99aadf39088cfbc8aa0e002d2359b","modified":1523468158518},{"_id":"public/css/style.css","hash":"6af587e59c62f1081e1bb7bee8e49f27b5f9a4d4","modified":1523468158518},{"_id":"public/css/normalize/package-lock.json","hash":"31039e15f7232686f225b71143e24846caa8a02a","modified":1523468158519},{"_id":"public/images/DASHENG-900x700-1.png","hash":"8f275ab03560b758667ea8fbe2a32683d39840de","modified":1523468158531},{"_id":"public/images/DASHENG-900x700-2.png","hash":"a483686830d76d8c820c3a6f83ad6efaccbc48c1","modified":1523468158540},{"_id":"public/images/DASHENG-900x700-4.png","hash":"84179d4eb90ec12b2498bdd0f08982e86d5b1511","modified":1523468158540},{"_id":"public/images/DASHENG-900x700-3.png","hash":"c7da56072a60e52e3e8f2a8407859f47f69e0055","modified":1523468158553}],"Category":[],"Data":[],"Page":[{"_content":"[{\"name\":\"DASHENG-900x700-1.png\",\"date\":1518959551960},{\"name\":\"DASHENG-900x700-2.png\",\"date\":1518959599098},{\"name\":\"DASHENG-900x700-3.png\",\"date\":1518959609913},{\"name\":\"DASHENG-900x700-4.png\",\"date\":1518959618105}]","source":"hexo-admin-ehc-images.json","raw":"[{\"name\":\"DASHENG-900x700-1.png\",\"date\":1518959551960},{\"name\":\"DASHENG-900x700-2.png\",\"date\":1518959599098},{\"name\":\"DASHENG-900x700-3.png\",\"date\":1518959609913},{\"name\":\"DASHENG-900x700-4.png\",\"date\":1518959618105}]","date":"2018-03-19T17:26:18.534Z","updated":"2018-03-19T17:26:18.534Z","path":"hexo-admin-ehc-images.json","layout":"false","title":"","comments":1,"_id":"cjfvdlqtx0000faugjdmqtiw4","content":"[{\"name\":\"DASHENG-900x700-1.png\",\"date\":1518959551960},{\"name\":\"DASHENG-900x700-2.png\",\"date\":1518959599098},{\"name\":\"DASHENG-900x700-3.png\",\"date\":1518959609913},{\"name\":\"DASHENG-900x700-4.png\",\"date\":1518959618105}]","site":{"data":{}},"excerpt":"","more":"[{\"name\":\"DASHENG-900x700-1.png\",\"date\":1518959551960},{\"name\":\"DASHENG-900x700-2.png\",\"date\":1518959599098},{\"name\":\"DASHENG-900x700-3.png\",\"date\":1518959609913},{\"name\":\"DASHENG-900x700-4.png\",\"date\":1518959618105}]"},{"title":"About","tags":"About","articleId":"about","date":"2018-03-18T17:26:57.000Z","_content":"### 廖嘉逸\n**北邮人**  \n**菜鸡一枚**  \n**欢迎交流**\n\n*Feel free to contact me :)*    \n*By Wechat: WindHold*  \n*By Email: buptliaojiayi@gmail.com*","source":"about/index.md","raw":"title: About\ntags: About\narticleId: about\ndate: 2018-03-19 01:26:57\n---\n### 廖嘉逸\n**北邮人**  \n**菜鸡一枚**  \n**欢迎交流**\n\n*Feel free to contact me :)*    \n*By Wechat: WindHold*  \n*By Email: buptliaojiayi@gmail.com*","updated":"2018-03-19T17:55:38.542Z","path":"about/index.html","comments":1,"layout":"page","_id":"cjfvdlqwv0002faughgqa46g9","content":"<h3 id=\"廖嘉逸\"><a href=\"#廖嘉逸\" class=\"headerlink\" title=\"廖嘉逸\"></a>廖嘉逸</h3><p><strong>北邮人</strong><br><strong>菜鸡一枚</strong><br><strong>欢迎交流</strong></p>\n<p><em>Feel free to contact me :)</em><br><em>By Wechat: WindHold</em><br><em>By Email: <a href=\"mailto:buptliaojiayi@gmail.com\" target=\"_blank\" rel=\"noopener\">buptliaojiayi@gmail.com</a></em></p>\n","site":{"data":{}},"excerpt":"","more":"<h3 id=\"廖嘉逸\"><a href=\"#廖嘉逸\" class=\"headerlink\" title=\"廖嘉逸\"></a>廖嘉逸</h3><p><strong>北邮人</strong><br><strong>菜鸡一枚</strong><br><strong>欢迎交流</strong></p>\n<p><em>Feel free to contact me :)</em><br><em>By Wechat: WindHold</em><br><em>By Email: <a href=\"mailto:buptliaojiayi@gmail.com\" target=\"_blank\" rel=\"noopener\">buptliaojiayi@gmail.com</a></em></p>\n"},{"title":"tags","date":"2018-03-18T17:25:46.000Z","type":"tags","_content":"","source":"tags/index.md","raw":"---\ntitle: tags\ndate: 2018-03-19 01:25:46\ntype: \"tags\"\n---\n","updated":"2018-03-18T17:34:27.386Z","path":"tags/index.html","comments":1,"layout":"page","_id":"cjfvdlqx20004faugytrig1zy","content":"","site":{"data":{}},"excerpt":"","more":""}],"Post":[{"title":"Flink的Exactly-Once","author":"Liao Jiayi","date":"2018-03-19T17:41:00.000Z","articleId":"flink-eo","_content":"[Official Document](https://flink.apache.org/features/2018/03/01/end-to-end-exactly-once-apache-flink.html)\n### 闲扯\n最近Spark2.3正式发布，流处理不再试Beta版，Spark的Structure Streaming几乎是拥有了Flink的所有功能，生态社区做得好就是不一样，Flink该加把劲了...\n***\n### 引言\nExactly-once是一个经常提到的语义，也是程序开发中，需要尽可能做到的一个理想状态。这种语义其实放在分布式程序中有很多种理解，比如读取数据源Exactly-once，Process过程Exactly-once，存储数据Exactly-once，但我们常用的理解方式是End-to-end的语义，也就是说，每一个输入，只会影响一次输出。\n***\n### Exacly-once\n既然是分布式的程序，要达到Exactly-once的语义，在输出那层，就应该只有两种情况，要么一起输出，要么一起不输出。Flink为此就提供了一个**TwoPhaseCommitSinkFunction**的抽象类用来完成这一语义，[JIRA](https://issues.apache.org/jira/browse/FLINK-7210)，[PR](https://github.com/apache/flink/pull/4368)。\n顾名思义，此类利用了Checkpoint机制提供了两个Phase(步骤)：\n\n1. preCommit()\n2. commit()\n\n#### preCommit()示意图：    \n![flink-precommit][1]  \n这个示意图描述了一个从kafka读取数据，采用WindowFunction做处理，最后再存储到kafka里的数据流。在Checkpoint过程中，首先在Datasource上用barrier把数据流切成两部分并不断传递下去触发snapshot，以保证所有的snapshot都是在相同一部分数据下产生的，最后一个阶段调用Sink函数的Pre-commit()表示，所有的Taskmanager的Sink都可以进行commit()操作了。\n\n**注意此时并不能直接commit，因为taskmanager之间彼此并不知道其他的节点是否准备好了commit！**\n\n#### commit()示意图：   \n![flink-commit][2]  \n在checkpoint结束之后，JobManager会通知Listener们调用各自的Callback，**此时Sink对象如果收到了JobManager发出的checkpointCompleted的通知，就知道所有的节点都准备好commit**，然后此时才是真正的commit。\n\n*** \n### 用法详解\n简单来说，其实就是两步输出达到Exactly-once的思想，在很多地方都有用到。比如Hive在写表时，先将要写入的文件放入一个临时目录，然后再移入到target directory。\n\n**对应到程序里就4个步骤**：\n* beginTransaction - 开始这个事务，比如创建一个临时目录\n* preCommit - 开始准备最后的commit，比如flush数据到临时目录中\n* commit - 真正的提交数据，比如将临时目录下的数据移动到最终目录下\n* abort - 删除临时目录\n\n···\n稍后我会写一个示例放出来\n···\n\n\n\n\n[1]: http://liaojiayi.com/static/flink-2.png\n[2]: http://liaojiayi.com/static/flink-3.png\n","source":"_posts/Flink的Exactly-Once.md","raw":"title: Flink的Exactly-Once\nauthor: Liao Jiayi\ndate: 2018-03-20 01:41:00\ntags: \n- flink\n- exactly-once\narticleId: flink-eo\n---\n[Official Document](https://flink.apache.org/features/2018/03/01/end-to-end-exactly-once-apache-flink.html)\n### 闲扯\n最近Spark2.3正式发布，流处理不再试Beta版，Spark的Structure Streaming几乎是拥有了Flink的所有功能，生态社区做得好就是不一样，Flink该加把劲了...\n***\n### 引言\nExactly-once是一个经常提到的语义，也是程序开发中，需要尽可能做到的一个理想状态。这种语义其实放在分布式程序中有很多种理解，比如读取数据源Exactly-once，Process过程Exactly-once，存储数据Exactly-once，但我们常用的理解方式是End-to-end的语义，也就是说，每一个输入，只会影响一次输出。\n***\n### Exacly-once\n既然是分布式的程序，要达到Exactly-once的语义，在输出那层，就应该只有两种情况，要么一起输出，要么一起不输出。Flink为此就提供了一个**TwoPhaseCommitSinkFunction**的抽象类用来完成这一语义，[JIRA](https://issues.apache.org/jira/browse/FLINK-7210)，[PR](https://github.com/apache/flink/pull/4368)。\n顾名思义，此类利用了Checkpoint机制提供了两个Phase(步骤)：\n\n1. preCommit()\n2. commit()\n\n#### preCommit()示意图：    \n![flink-precommit][1]  \n这个示意图描述了一个从kafka读取数据，采用WindowFunction做处理，最后再存储到kafka里的数据流。在Checkpoint过程中，首先在Datasource上用barrier把数据流切成两部分并不断传递下去触发snapshot，以保证所有的snapshot都是在相同一部分数据下产生的，最后一个阶段调用Sink函数的Pre-commit()表示，所有的Taskmanager的Sink都可以进行commit()操作了。\n\n**注意此时并不能直接commit，因为taskmanager之间彼此并不知道其他的节点是否准备好了commit！**\n\n#### commit()示意图：   \n![flink-commit][2]  \n在checkpoint结束之后，JobManager会通知Listener们调用各自的Callback，**此时Sink对象如果收到了JobManager发出的checkpointCompleted的通知，就知道所有的节点都准备好commit**，然后此时才是真正的commit。\n\n*** \n### 用法详解\n简单来说，其实就是两步输出达到Exactly-once的思想，在很多地方都有用到。比如Hive在写表时，先将要写入的文件放入一个临时目录，然后再移入到target directory。\n\n**对应到程序里就4个步骤**：\n* beginTransaction - 开始这个事务，比如创建一个临时目录\n* preCommit - 开始准备最后的commit，比如flush数据到临时目录中\n* commit - 真正的提交数据，比如将临时目录下的数据移动到最终目录下\n* abort - 删除临时目录\n\n···\n稍后我会写一个示例放出来\n···\n\n\n\n\n[1]: http://liaojiayi.com/static/flink-2.png\n[2]: http://liaojiayi.com/static/flink-3.png\n","slug":"Flink的Exactly-Once","published":1,"updated":"2018-03-19T17:51:55.161Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjfvdlqwk0001faugfaxus5j4","content":"<p><a href=\"https://flink.apache.org/features/2018/03/01/end-to-end-exactly-once-apache-flink.html\" target=\"_blank\" rel=\"noopener\">Official Document</a></p>\n<h3 id=\"闲扯\"><a href=\"#闲扯\" class=\"headerlink\" title=\"闲扯\"></a>闲扯</h3><p>最近Spark2.3正式发布，流处理不再试Beta版，Spark的Structure Streaming几乎是拥有了Flink的所有功能，生态社区做得好就是不一样，Flink该加把劲了…</p>\n<hr>\n<h3 id=\"引言\"><a href=\"#引言\" class=\"headerlink\" title=\"引言\"></a>引言</h3><p>Exactly-once是一个经常提到的语义，也是程序开发中，需要尽可能做到的一个理想状态。这种语义其实放在分布式程序中有很多种理解，比如读取数据源Exactly-once，Process过程Exactly-once，存储数据Exactly-once，但我们常用的理解方式是End-to-end的语义，也就是说，每一个输入，只会影响一次输出。</p>\n<hr>\n<h3 id=\"Exacly-once\"><a href=\"#Exacly-once\" class=\"headerlink\" title=\"Exacly-once\"></a>Exacly-once</h3><p>既然是分布式的程序，要达到Exactly-once的语义，在输出那层，就应该只有两种情况，要么一起输出，要么一起不输出。Flink为此就提供了一个<strong>TwoPhaseCommitSinkFunction</strong>的抽象类用来完成这一语义，<a href=\"https://issues.apache.org/jira/browse/FLINK-7210\" target=\"_blank\" rel=\"noopener\">JIRA</a>，<a href=\"https://github.com/apache/flink/pull/4368\" target=\"_blank\" rel=\"noopener\">PR</a>。<br>顾名思义，此类利用了Checkpoint机制提供了两个Phase(步骤)：</p>\n<ol>\n<li>preCommit()</li>\n<li>commit()</li>\n</ol>\n<h4 id=\"preCommit-示意图：\"><a href=\"#preCommit-示意图：\" class=\"headerlink\" title=\"preCommit()示意图：\"></a>preCommit()示意图：</h4><p><img src=\"http://liaojiayi.com/static/flink-2.png\" alt=\"flink-precommit\"><br>这个示意图描述了一个从kafka读取数据，采用WindowFunction做处理，最后再存储到kafka里的数据流。在Checkpoint过程中，首先在Datasource上用barrier把数据流切成两部分并不断传递下去触发snapshot，以保证所有的snapshot都是在相同一部分数据下产生的，最后一个阶段调用Sink函数的Pre-commit()表示，所有的Taskmanager的Sink都可以进行commit()操作了。</p>\n<p><strong>注意此时并不能直接commit，因为taskmanager之间彼此并不知道其他的节点是否准备好了commit！</strong></p>\n<h4 id=\"commit-示意图：\"><a href=\"#commit-示意图：\" class=\"headerlink\" title=\"commit()示意图：\"></a>commit()示意图：</h4><p><img src=\"http://liaojiayi.com/static/flink-3.png\" alt=\"flink-commit\"><br>在checkpoint结束之后，JobManager会通知Listener们调用各自的Callback，<strong>此时Sink对象如果收到了JobManager发出的checkpointCompleted的通知，就知道所有的节点都准备好commit</strong>，然后此时才是真正的commit。</p>\n<hr>\n<h3 id=\"用法详解\"><a href=\"#用法详解\" class=\"headerlink\" title=\"用法详解\"></a>用法详解</h3><p>简单来说，其实就是两步输出达到Exactly-once的思想，在很多地方都有用到。比如Hive在写表时，先将要写入的文件放入一个临时目录，然后再移入到target directory。</p>\n<p><strong>对应到程序里就4个步骤</strong>：</p>\n<ul>\n<li>beginTransaction - 开始这个事务，比如创建一个临时目录</li>\n<li>preCommit - 开始准备最后的commit，比如flush数据到临时目录中</li>\n<li>commit - 真正的提交数据，比如将临时目录下的数据移动到最终目录下</li>\n<li>abort - 删除临时目录</li>\n</ul>\n<p>···<br>稍后我会写一个示例放出来<br>···</p>\n","site":{"data":{}},"excerpt":"","more":"<p><a href=\"https://flink.apache.org/features/2018/03/01/end-to-end-exactly-once-apache-flink.html\" target=\"_blank\" rel=\"noopener\">Official Document</a></p>\n<h3 id=\"闲扯\"><a href=\"#闲扯\" class=\"headerlink\" title=\"闲扯\"></a>闲扯</h3><p>最近Spark2.3正式发布，流处理不再试Beta版，Spark的Structure Streaming几乎是拥有了Flink的所有功能，生态社区做得好就是不一样，Flink该加把劲了…</p>\n<hr>\n<h3 id=\"引言\"><a href=\"#引言\" class=\"headerlink\" title=\"引言\"></a>引言</h3><p>Exactly-once是一个经常提到的语义，也是程序开发中，需要尽可能做到的一个理想状态。这种语义其实放在分布式程序中有很多种理解，比如读取数据源Exactly-once，Process过程Exactly-once，存储数据Exactly-once，但我们常用的理解方式是End-to-end的语义，也就是说，每一个输入，只会影响一次输出。</p>\n<hr>\n<h3 id=\"Exacly-once\"><a href=\"#Exacly-once\" class=\"headerlink\" title=\"Exacly-once\"></a>Exacly-once</h3><p>既然是分布式的程序，要达到Exactly-once的语义，在输出那层，就应该只有两种情况，要么一起输出，要么一起不输出。Flink为此就提供了一个<strong>TwoPhaseCommitSinkFunction</strong>的抽象类用来完成这一语义，<a href=\"https://issues.apache.org/jira/browse/FLINK-7210\" target=\"_blank\" rel=\"noopener\">JIRA</a>，<a href=\"https://github.com/apache/flink/pull/4368\" target=\"_blank\" rel=\"noopener\">PR</a>。<br>顾名思义，此类利用了Checkpoint机制提供了两个Phase(步骤)：</p>\n<ol>\n<li>preCommit()</li>\n<li>commit()</li>\n</ol>\n<h4 id=\"preCommit-示意图：\"><a href=\"#preCommit-示意图：\" class=\"headerlink\" title=\"preCommit()示意图：\"></a>preCommit()示意图：</h4><p><img src=\"http://liaojiayi.com/static/flink-2.png\" alt=\"flink-precommit\"><br>这个示意图描述了一个从kafka读取数据，采用WindowFunction做处理，最后再存储到kafka里的数据流。在Checkpoint过程中，首先在Datasource上用barrier把数据流切成两部分并不断传递下去触发snapshot，以保证所有的snapshot都是在相同一部分数据下产生的，最后一个阶段调用Sink函数的Pre-commit()表示，所有的Taskmanager的Sink都可以进行commit()操作了。</p>\n<p><strong>注意此时并不能直接commit，因为taskmanager之间彼此并不知道其他的节点是否准备好了commit！</strong></p>\n<h4 id=\"commit-示意图：\"><a href=\"#commit-示意图：\" class=\"headerlink\" title=\"commit()示意图：\"></a>commit()示意图：</h4><p><img src=\"http://liaojiayi.com/static/flink-3.png\" alt=\"flink-commit\"><br>在checkpoint结束之后，JobManager会通知Listener们调用各自的Callback，<strong>此时Sink对象如果收到了JobManager发出的checkpointCompleted的通知，就知道所有的节点都准备好commit</strong>，然后此时才是真正的commit。</p>\n<hr>\n<h3 id=\"用法详解\"><a href=\"#用法详解\" class=\"headerlink\" title=\"用法详解\"></a>用法详解</h3><p>简单来说，其实就是两步输出达到Exactly-once的思想，在很多地方都有用到。比如Hive在写表时，先将要写入的文件放入一个临时目录，然后再移入到target directory。</p>\n<p><strong>对应到程序里就4个步骤</strong>：</p>\n<ul>\n<li>beginTransaction - 开始这个事务，比如创建一个临时目录</li>\n<li>preCommit - 开始准备最后的commit，比如flush数据到临时目录中</li>\n<li>commit - 真正的提交数据，比如将临时目录下的数据移动到最终目录下</li>\n<li>abort - 删除临时目录</li>\n</ul>\n<p>···<br>稍后我会写一个示例放出来<br>···</p>\n"},{"title":"Aerospike学习笔记","articleId":"aerospike","date":"2018-03-19T17:01:00.000Z","_content":"\n### 应用场景\n在很多业务场景比如反欺诈、广告定向推荐、数字身份验证等，这些场景都有一些共同的特点： \n   \n* 读多于写    \n* 随机读   \n* 延迟低   \n\n数据量不大时，有很多优秀的框架可以使用，比如单机的redis、Cassandra等，它们不但满足上述需求而且还有着易于运维、管理方便的优点，但随着业务规模扩大，不可预测的大流量、查询延时低效都成为了比较难解决的痛点。     \nAerospike在2012年作为分布式KV数据库出现后，以稳定性和延迟低的特点让不少公司开始试水，到如今4.0版本发布，6年时间里Aerospike已经积累了不少在不同行业的成功案例。\n\n***\n\n### 数据模型\n我理解在Aerospike的Data model其实和Hbase中的namespace/table/row/column family非常类似。   \n \n* **namespace**\n    - namespace是最高层级的一个容器概念，决定了这个容器中的数据的存储方式，有着如下的配置    \n    - 如何存储，可以选择全部存储到DRAM或者SSD上\n    - replica复制因子，决定了这个namespace的高可用性\n    - expire TTL\n* **sets**\n    - sets是可选项，数据存储时可以指定set也可以不指定，在set中可以设置基于set的二级索引\n* **records**\n    - record就是一行记录了，包括:\n        * key\n        * metadata(版本号(version), ttl, last-update-time(lut))\n        * bins\n* **bins**\n    - 包括name和value（类似列名和值）\n\n***\n### 查询索引\nAerospike中的查询索引分为两种，一级索引和二级索引，两种索引的用途各不相同。\n\n* **一级索引（Primary-Index）**\n    - Primary-Index是Aerospike默认存在的，作用是加速查询和防止数据倾斜，[具体原理](https://www.aerospike.com/docs/architecture/primary-index.html)是取每一个key做hash后，前12bit作为partitionID，所以partition的个数是固定的，4096个。\n* **二级索引（Secondary-Index）**\n    - Secondary-Index和关系型数据库中的索引类似，基于bin而存在，但其索引后的值是当前节点的partitionId列表，也就是说，即使命中了二级索引，还是要scan相应partition list中的每一行记录，效率并不高。需要注意的是，在生成Secondary-Index的过程，Aerospike需要扫描所有的数据，所以要在low load的时候做这样的操作。\n\n***\n### 一致性和高可用分析\n我们假设在单namespace的情况下，当前Aerospike集群为4个节点，每个节点有1024个partition，replica复制因子为1，探讨常见的以下[几种场景](https://www.aerospike.com/docs/architecture/consistency.html)：\n\n1. 在一个节点宕机的情况下，其replica的节点从replica变成了master，并开始寻找新的replica节点，数据不会发生丢失。\n2. 在两个节点宕机的情况下，如果两个节点正好是partition的replica和master，数据丢失，可靠性无法保证。\n3. 在一个节点宕机后重启时，由于在内存中的index丢失，需要重新scan整个SSD来重建索引（非常耗时），整个集群开始重新rebalance，相应partition的数据从其他节点复制到新节点中，直到新节点ready之后再加入集群，数据不会丢失。\n\n***\n### 选型建议\nKV数据库有很多，但大多数都是在Speed和Scale上来做取舍，根据别人的一些选型经验，总结出了其他几个存储和Aerospike对比的一些劣势。\n\n* MongoDB、Redis这种需要内存的代价过高，无法做到低成本地快速Scale，且无法应对高峰流量。\n* Couchbase性能很好，但是不支持udf。\n* Cassandra在大数据量下无法保证低延迟。\n\n***\n### 不足之处\n虽然Aerospike有稳定性好、延迟低、性价比高的特点，但是也有一些不足的地方需要注意的：\n\n* Aerospike Rolling Start时间过长（scan整个SSD重建索引）\n* 无法支持复杂的数据类型，例如hyperloglog\n* 每个record不能超过1MB\n* 在做rebalance过程中，响应会有所抖动\n","source":"_posts/aerospike.md","raw":"title: Aerospike学习笔记\ntags:\n  - Aerospike\narticleId: aerospike\ncategories: []\ndate: 2018-03-20 01:01:00\n---\n\n### 应用场景\n在很多业务场景比如反欺诈、广告定向推荐、数字身份验证等，这些场景都有一些共同的特点： \n   \n* 读多于写    \n* 随机读   \n* 延迟低   \n\n数据量不大时，有很多优秀的框架可以使用，比如单机的redis、Cassandra等，它们不但满足上述需求而且还有着易于运维、管理方便的优点，但随着业务规模扩大，不可预测的大流量、查询延时低效都成为了比较难解决的痛点。     \nAerospike在2012年作为分布式KV数据库出现后，以稳定性和延迟低的特点让不少公司开始试水，到如今4.0版本发布，6年时间里Aerospike已经积累了不少在不同行业的成功案例。\n\n***\n\n### 数据模型\n我理解在Aerospike的Data model其实和Hbase中的namespace/table/row/column family非常类似。   \n \n* **namespace**\n    - namespace是最高层级的一个容器概念，决定了这个容器中的数据的存储方式，有着如下的配置    \n    - 如何存储，可以选择全部存储到DRAM或者SSD上\n    - replica复制因子，决定了这个namespace的高可用性\n    - expire TTL\n* **sets**\n    - sets是可选项，数据存储时可以指定set也可以不指定，在set中可以设置基于set的二级索引\n* **records**\n    - record就是一行记录了，包括:\n        * key\n        * metadata(版本号(version), ttl, last-update-time(lut))\n        * bins\n* **bins**\n    - 包括name和value（类似列名和值）\n\n***\n### 查询索引\nAerospike中的查询索引分为两种，一级索引和二级索引，两种索引的用途各不相同。\n\n* **一级索引（Primary-Index）**\n    - Primary-Index是Aerospike默认存在的，作用是加速查询和防止数据倾斜，[具体原理](https://www.aerospike.com/docs/architecture/primary-index.html)是取每一个key做hash后，前12bit作为partitionID，所以partition的个数是固定的，4096个。\n* **二级索引（Secondary-Index）**\n    - Secondary-Index和关系型数据库中的索引类似，基于bin而存在，但其索引后的值是当前节点的partitionId列表，也就是说，即使命中了二级索引，还是要scan相应partition list中的每一行记录，效率并不高。需要注意的是，在生成Secondary-Index的过程，Aerospike需要扫描所有的数据，所以要在low load的时候做这样的操作。\n\n***\n### 一致性和高可用分析\n我们假设在单namespace的情况下，当前Aerospike集群为4个节点，每个节点有1024个partition，replica复制因子为1，探讨常见的以下[几种场景](https://www.aerospike.com/docs/architecture/consistency.html)：\n\n1. 在一个节点宕机的情况下，其replica的节点从replica变成了master，并开始寻找新的replica节点，数据不会发生丢失。\n2. 在两个节点宕机的情况下，如果两个节点正好是partition的replica和master，数据丢失，可靠性无法保证。\n3. 在一个节点宕机后重启时，由于在内存中的index丢失，需要重新scan整个SSD来重建索引（非常耗时），整个集群开始重新rebalance，相应partition的数据从其他节点复制到新节点中，直到新节点ready之后再加入集群，数据不会丢失。\n\n***\n### 选型建议\nKV数据库有很多，但大多数都是在Speed和Scale上来做取舍，根据别人的一些选型经验，总结出了其他几个存储和Aerospike对比的一些劣势。\n\n* MongoDB、Redis这种需要内存的代价过高，无法做到低成本地快速Scale，且无法应对高峰流量。\n* Couchbase性能很好，但是不支持udf。\n* Cassandra在大数据量下无法保证低延迟。\n\n***\n### 不足之处\n虽然Aerospike有稳定性好、延迟低、性价比高的特点，但是也有一些不足的地方需要注意的：\n\n* Aerospike Rolling Start时间过长（scan整个SSD重建索引）\n* 无法支持复杂的数据类型，例如hyperloglog\n* 每个record不能超过1MB\n* 在做rebalance过程中，响应会有所抖动\n","slug":"aerospike","published":1,"updated":"2018-03-19T17:39:33.248Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjfvdlqwy0003faugvkhcrxr7","content":"<h3 id=\"应用场景\"><a href=\"#应用场景\" class=\"headerlink\" title=\"应用场景\"></a>应用场景</h3><p>在很多业务场景比如反欺诈、广告定向推荐、数字身份验证等，这些场景都有一些共同的特点： </p>\n<ul>\n<li>读多于写    </li>\n<li>随机读   </li>\n<li>延迟低   </li>\n</ul>\n<p>数据量不大时，有很多优秀的框架可以使用，比如单机的redis、Cassandra等，它们不但满足上述需求而且还有着易于运维、管理方便的优点，但随着业务规模扩大，不可预测的大流量、查询延时低效都成为了比较难解决的痛点。<br>Aerospike在2012年作为分布式KV数据库出现后，以稳定性和延迟低的特点让不少公司开始试水，到如今4.0版本发布，6年时间里Aerospike已经积累了不少在不同行业的成功案例。</p>\n<hr>\n<h3 id=\"数据模型\"><a href=\"#数据模型\" class=\"headerlink\" title=\"数据模型\"></a>数据模型</h3><p>我理解在Aerospike的Data model其实和Hbase中的namespace/table/row/column family非常类似。   </p>\n<ul>\n<li><strong>namespace</strong><ul>\n<li>namespace是最高层级的一个容器概念，决定了这个容器中的数据的存储方式，有着如下的配置    </li>\n<li>如何存储，可以选择全部存储到DRAM或者SSD上</li>\n<li>replica复制因子，决定了这个namespace的高可用性</li>\n<li>expire TTL</li>\n</ul>\n</li>\n<li><strong>sets</strong><ul>\n<li>sets是可选项，数据存储时可以指定set也可以不指定，在set中可以设置基于set的二级索引</li>\n</ul>\n</li>\n<li><strong>records</strong><ul>\n<li>record就是一行记录了，包括:<ul>\n<li>key</li>\n<li>metadata(版本号(version), ttl, last-update-time(lut))</li>\n<li>bins</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><strong>bins</strong><ul>\n<li>包括name和value（类似列名和值）</li>\n</ul>\n</li>\n</ul>\n<hr>\n<h3 id=\"查询索引\"><a href=\"#查询索引\" class=\"headerlink\" title=\"查询索引\"></a>查询索引</h3><p>Aerospike中的查询索引分为两种，一级索引和二级索引，两种索引的用途各不相同。</p>\n<ul>\n<li><strong>一级索引（Primary-Index）</strong><ul>\n<li>Primary-Index是Aerospike默认存在的，作用是加速查询和防止数据倾斜，<a href=\"https://www.aerospike.com/docs/architecture/primary-index.html\" target=\"_blank\" rel=\"noopener\">具体原理</a>是取每一个key做hash后，前12bit作为partitionID，所以partition的个数是固定的，4096个。</li>\n</ul>\n</li>\n<li><strong>二级索引（Secondary-Index）</strong><ul>\n<li>Secondary-Index和关系型数据库中的索引类似，基于bin而存在，但其索引后的值是当前节点的partitionId列表，也就是说，即使命中了二级索引，还是要scan相应partition list中的每一行记录，效率并不高。需要注意的是，在生成Secondary-Index的过程，Aerospike需要扫描所有的数据，所以要在low load的时候做这样的操作。</li>\n</ul>\n</li>\n</ul>\n<hr>\n<h3 id=\"一致性和高可用分析\"><a href=\"#一致性和高可用分析\" class=\"headerlink\" title=\"一致性和高可用分析\"></a>一致性和高可用分析</h3><p>我们假设在单namespace的情况下，当前Aerospike集群为4个节点，每个节点有1024个partition，replica复制因子为1，探讨常见的以下<a href=\"https://www.aerospike.com/docs/architecture/consistency.html\" target=\"_blank\" rel=\"noopener\">几种场景</a>：</p>\n<ol>\n<li>在一个节点宕机的情况下，其replica的节点从replica变成了master，并开始寻找新的replica节点，数据不会发生丢失。</li>\n<li>在两个节点宕机的情况下，如果两个节点正好是partition的replica和master，数据丢失，可靠性无法保证。</li>\n<li>在一个节点宕机后重启时，由于在内存中的index丢失，需要重新scan整个SSD来重建索引（非常耗时），整个集群开始重新rebalance，相应partition的数据从其他节点复制到新节点中，直到新节点ready之后再加入集群，数据不会丢失。</li>\n</ol>\n<hr>\n<h3 id=\"选型建议\"><a href=\"#选型建议\" class=\"headerlink\" title=\"选型建议\"></a>选型建议</h3><p>KV数据库有很多，但大多数都是在Speed和Scale上来做取舍，根据别人的一些选型经验，总结出了其他几个存储和Aerospike对比的一些劣势。</p>\n<ul>\n<li>MongoDB、Redis这种需要内存的代价过高，无法做到低成本地快速Scale，且无法应对高峰流量。</li>\n<li>Couchbase性能很好，但是不支持udf。</li>\n<li>Cassandra在大数据量下无法保证低延迟。</li>\n</ul>\n<hr>\n<h3 id=\"不足之处\"><a href=\"#不足之处\" class=\"headerlink\" title=\"不足之处\"></a>不足之处</h3><p>虽然Aerospike有稳定性好、延迟低、性价比高的特点，但是也有一些不足的地方需要注意的：</p>\n<ul>\n<li>Aerospike Rolling Start时间过长（scan整个SSD重建索引）</li>\n<li>无法支持复杂的数据类型，例如hyperloglog</li>\n<li>每个record不能超过1MB</li>\n<li>在做rebalance过程中，响应会有所抖动</li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<h3 id=\"应用场景\"><a href=\"#应用场景\" class=\"headerlink\" title=\"应用场景\"></a>应用场景</h3><p>在很多业务场景比如反欺诈、广告定向推荐、数字身份验证等，这些场景都有一些共同的特点： </p>\n<ul>\n<li>读多于写    </li>\n<li>随机读   </li>\n<li>延迟低   </li>\n</ul>\n<p>数据量不大时，有很多优秀的框架可以使用，比如单机的redis、Cassandra等，它们不但满足上述需求而且还有着易于运维、管理方便的优点，但随着业务规模扩大，不可预测的大流量、查询延时低效都成为了比较难解决的痛点。<br>Aerospike在2012年作为分布式KV数据库出现后，以稳定性和延迟低的特点让不少公司开始试水，到如今4.0版本发布，6年时间里Aerospike已经积累了不少在不同行业的成功案例。</p>\n<hr>\n<h3 id=\"数据模型\"><a href=\"#数据模型\" class=\"headerlink\" title=\"数据模型\"></a>数据模型</h3><p>我理解在Aerospike的Data model其实和Hbase中的namespace/table/row/column family非常类似。   </p>\n<ul>\n<li><strong>namespace</strong><ul>\n<li>namespace是最高层级的一个容器概念，决定了这个容器中的数据的存储方式，有着如下的配置    </li>\n<li>如何存储，可以选择全部存储到DRAM或者SSD上</li>\n<li>replica复制因子，决定了这个namespace的高可用性</li>\n<li>expire TTL</li>\n</ul>\n</li>\n<li><strong>sets</strong><ul>\n<li>sets是可选项，数据存储时可以指定set也可以不指定，在set中可以设置基于set的二级索引</li>\n</ul>\n</li>\n<li><strong>records</strong><ul>\n<li>record就是一行记录了，包括:<ul>\n<li>key</li>\n<li>metadata(版本号(version), ttl, last-update-time(lut))</li>\n<li>bins</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><strong>bins</strong><ul>\n<li>包括name和value（类似列名和值）</li>\n</ul>\n</li>\n</ul>\n<hr>\n<h3 id=\"查询索引\"><a href=\"#查询索引\" class=\"headerlink\" title=\"查询索引\"></a>查询索引</h3><p>Aerospike中的查询索引分为两种，一级索引和二级索引，两种索引的用途各不相同。</p>\n<ul>\n<li><strong>一级索引（Primary-Index）</strong><ul>\n<li>Primary-Index是Aerospike默认存在的，作用是加速查询和防止数据倾斜，<a href=\"https://www.aerospike.com/docs/architecture/primary-index.html\" target=\"_blank\" rel=\"noopener\">具体原理</a>是取每一个key做hash后，前12bit作为partitionID，所以partition的个数是固定的，4096个。</li>\n</ul>\n</li>\n<li><strong>二级索引（Secondary-Index）</strong><ul>\n<li>Secondary-Index和关系型数据库中的索引类似，基于bin而存在，但其索引后的值是当前节点的partitionId列表，也就是说，即使命中了二级索引，还是要scan相应partition list中的每一行记录，效率并不高。需要注意的是，在生成Secondary-Index的过程，Aerospike需要扫描所有的数据，所以要在low load的时候做这样的操作。</li>\n</ul>\n</li>\n</ul>\n<hr>\n<h3 id=\"一致性和高可用分析\"><a href=\"#一致性和高可用分析\" class=\"headerlink\" title=\"一致性和高可用分析\"></a>一致性和高可用分析</h3><p>我们假设在单namespace的情况下，当前Aerospike集群为4个节点，每个节点有1024个partition，replica复制因子为1，探讨常见的以下<a href=\"https://www.aerospike.com/docs/architecture/consistency.html\" target=\"_blank\" rel=\"noopener\">几种场景</a>：</p>\n<ol>\n<li>在一个节点宕机的情况下，其replica的节点从replica变成了master，并开始寻找新的replica节点，数据不会发生丢失。</li>\n<li>在两个节点宕机的情况下，如果两个节点正好是partition的replica和master，数据丢失，可靠性无法保证。</li>\n<li>在一个节点宕机后重启时，由于在内存中的index丢失，需要重新scan整个SSD来重建索引（非常耗时），整个集群开始重新rebalance，相应partition的数据从其他节点复制到新节点中，直到新节点ready之后再加入集群，数据不会丢失。</li>\n</ol>\n<hr>\n<h3 id=\"选型建议\"><a href=\"#选型建议\" class=\"headerlink\" title=\"选型建议\"></a>选型建议</h3><p>KV数据库有很多，但大多数都是在Speed和Scale上来做取舍，根据别人的一些选型经验，总结出了其他几个存储和Aerospike对比的一些劣势。</p>\n<ul>\n<li>MongoDB、Redis这种需要内存的代价过高，无法做到低成本地快速Scale，且无法应对高峰流量。</li>\n<li>Couchbase性能很好，但是不支持udf。</li>\n<li>Cassandra在大数据量下无法保证低延迟。</li>\n</ul>\n<hr>\n<h3 id=\"不足之处\"><a href=\"#不足之处\" class=\"headerlink\" title=\"不足之处\"></a>不足之处</h3><p>虽然Aerospike有稳定性好、延迟低、性价比高的特点，但是也有一些不足的地方需要注意的：</p>\n<ul>\n<li>Aerospike Rolling Start时间过长（scan整个SSD重建索引）</li>\n<li>无法支持复杂的数据类型，例如hyperloglog</li>\n<li>每个record不能超过1MB</li>\n<li>在做rebalance过程中，响应会有所抖动</li>\n</ul>\n"},{"title":"hs_err_pid.log里是些什么？","author":"Liao Jiayi","articleId":"linux-hs_err_pid","date":"2018-04-11T12:28:03.000Z","_content":"{% codeblock %}\n# There is insufficient memory for the Java Runtime Environment to continue.\n# Native memory allocation (mmap) failed to map 12288 bytes for committing reserved memory.\n# Possible reasons:\n#   The system is out of physical RAM or swap space\n#   In 32 bit mode, the process size limit was hit\n# Possible solutions:\n#   Reduce memory load on the system\n#   Increase physical memory or swap space\n#   Check if swap backing store is full\n#   Use 64 bit Java on a 64 bit OS\n#   Decrease Java heap size (-Xmx/-Xms)\n#   Decrease number of Java threads\n#   Decrease Java thread stack sizes (-Xss)\n#   Set larger code cache with -XX:ReservedCodeCacheSize=\n# This output file may be truncated or incomplete.\n#\n#  Out of Memory Error (os_linux.cpp:2673), pid=13016, tid=140682742126336\n#\n# JRE version: Java(TM) SE Runtime Environment (8.0_40-b25) (build 1.8.0_40-b25)\n# Java VM: Java HotSpot(TM) 64-Bit Server VM (25.40-b25 mixed mode linux-amd64 compressed oops)\n# Failed to write core dump. Core dumps have been disabled. To enable core dumping, try \"ulimit -c unlimited\" before starting Java again\n{% endcodeblock %}\n\n\n第一部分主要是程序crash的原因以及相关的solution。\n{% codeblock %}\nCurrent thread (0x00007ff2d8001000):  JavaThread \"flink-akka.remote.default-remote-dispatcher-15\" daemon [_thread_new, id=31925, stack(0x00007ff340ced000,0x00007ff340dee000)]\n\nStack: [0x00007ff340ced000,0x00007ff340dee000],  sp=0x00007ff340dec9a0,  free space=1022k\nNative frames: (J=compiled Java code, j=interpreted, Vv=VM code, C=native code)\nV  [libjvm.so+0xaaca9a]  VMError::report_and_die()+0x2ba\nV  [libjvm.so+0x4f333b]  report_vm_out_of_memory(char const*, int, unsigned long, VMErrorType, char const*)+0x8b\nV  [libjvm.so+0x90e8c3]  os::Linux::commit_memory_impl(char*, unsigned long, bool)+0x103\nV  [libjvm.so+0x90e98c]  os::pd_commit_memory(char*, unsigned long, bool)+0xc\nV  [libjvm.so+0x90772a]  os::commit_memory(char*, unsigned long, bool)+0x2a\nV  [libjvm.so+0x90c97f]  os::pd_create_stack_guard_pages(char*, unsigned long)+0x7f\nV  [libjvm.so+0xa52b4e]  JavaThread::create_stack_guard_pages()+0x5e\nV  [libjvm.so+0xa5c9b4]  JavaThread::run()+0x34\nV  [libjvm.so+0x910ee8]  java_start(Thread*)+0x108\nC  [libpthread.so.0+0x7dc5]  start_thread+0xc5\n{% endcodeblock %}\nCurrent Thread表示crash时程序所处的线程。\n**线程类别**: JavaThread，共有以下几种\n* JavaThread\n* VMThread（负责VM内的一些操作，包括GC）\n* CompilerThread\n* GCTaskThread\n* WatcherThread\n* ConcurrentMarkSweepThread\n\n**线程状态**：_thread_new\n\n线程状态 | 描述\n- | -\n _thread_uninitialized | 线程未被创建\n _thread_new | 线程创建但并未执行\n _thread_in_native | 线程正在运行native code\n _thread_in_vm | 执行VM的code\n _thread_in_java | 执行java的code\n _thread_blocked | 被block住的线程\n\n**原生堆栈信息（Native frames）**: 主要是一些jvm动态库的对战信息，是分析crash中比较重要的一个部分。\n{% codeblock %}\nJava Threads: ( => current thread )\n=>0x00007ff2d8001000 JavaThread \"flink-akka.remote.default-remote-dispatcher-15\" daemon [_thread_new, id=31925, stack(0x00007ff340ced000,0x00007ff340dee000)]\n  0x00007ff2ec053800 JavaThread \"Hashed wheel timer #1\" daemon [_thread_blocked, id=14219, stack(0x00007ff33bdfe000,0x00007ff33beff000)]\n  0x00007ff2dc130800 JavaThread \"New I/O server boss #6\" daemon [_thread_in_native, id=14218, stack(0x00007ff33beff000,0x00007ff33c000000)]\n  0x00007ff2dc119800 JavaThread \"New I/O worker #5\" daemon [_thread_in_native, id=14217, stack(0x00007ff3400e3000,0x00007ff3401e4000)]\n  0x00007ff2dc0b6000 JavaThread \"New I/O worker #4\" daemon [_thread_in_native, id=14216, stack(0x00007ff3401e4000,0x00007ff3402e5000)]\n  0x00007ff2dc0bb800 JavaThread \"New I/O boss #3\" daemon [_thread_in_native, id=14215, stack(0x00007ff3402e5000,0x00007ff3403e6000)]\n  0x00007ff2dc05c000 JavaThread \"New I/O worker #2\" daemon [_thread_in_native, id=14214, stack(0x00007ff3403e6000,0x00007ff3404e7000)]\n  0x00007ff2dc052000 JavaThread \"New I/O worker #1\" daemon [_thread_in_native, id=14213, stack(0x00007ff3404e7000,0x00007ff3405e8000)]\n  0x00007ff2c8009800 JavaThread \"flink-akka.remote.default-remote-dispatcher-7\" daemon [_thread_in_vm, id=14206, stack(0x00007ff3407e8000,0x00007ff3408e9000)]\n  0x00007ff2c800c000 JavaThread \"flink-akka.remote.default-remote-dispatcher-6\" daemon [_thread_in_native, id=14202, stack(0x00007ff3408e9000,0x00007ff3409ea000)]\n  0x00007ff2cc020000 JavaThread \"flink-akka.actor.default-dispatcher-5\" daemon [_thread_blocked, id=14147, stack(0x00007ff3409ea000,0x00007ff340aeb000)]\n  0x00007ff36222a800 JavaThread \"flink-akka.actor.default-dispatcher-4\" daemon [_thread_blocked, id=14136, stack(0x00007ff340aeb000,0x00007ff340bec000)]\n  0x00007ff362229000 JavaThread \"flink-akka.actor.default-dispatcher-3\" daemon [_thread_blocked, id=14135, stack(0x00007ff340bec000,0x00007ff340ced000)]\n  0x00007ff362183000 JavaThread \"flink-scheduler-1\" daemon [_thread_blocked, id=14044, stack(0x00007ff340fee000,0x00007ff3410ef000)]\n  0x00007ff3614b4000 JavaThread \"Timer for 'phoenix' metrics system\" daemon [_thread_blocked, id=14032, stack(0x00007ff342dfa000,0x00007ff342efb000)]\n  0x00007ff360fc1000 JavaThread \"main-EventThread\" daemon [_thread_blocked, id=14031, stack(0x00007ff3431fc000,0x00007ff3432fd000)]\n  0x00007ff360faf000 JavaThread \"main-SendThread(cnzk2:2181)\" daemon [_thread_in_native, id=14030, stack(0x00007ff3432fd000,0x00007ff3433fe000)]\n  0x00007ff360471000 JavaThread \"Thread-80\" daemon [_thread_blocked, id=14029, stack(0x00007ff3430fb000,0x00007ff3431fc000)]\n  0x00007ff3608a7000 JavaThread \"IPC Parameter Sending Thread #0\" daemon [_thread_blocked, id=13178, stack(0x00007ff3437fe000,0x00007ff3438ff000)]\n  0x00007ff3608a4000 JavaThread \"IPC Client (1508059488) connection to cnhm0/10.0.1.222:8032 from apps\" daemon [_thread_blocked, id=13177, stack(0x00007ff348923000,0x00007ff348a24000)]\n  0x00007ff3600df800 JavaThread \"Service Thread\" daemon [_thread_blocked, id=13172, stack(0x00007ff3498c5000,0x00007ff3499c6000)]\n  0x00007ff3600d2000 JavaThread \"C1 CompilerThread2\" daemon [_thread_in_native, id=13171, stack(0x00007ff3499c6000,0x00007ff349ac7000)]\n  0x00007ff3600d0000 JavaThread \"C2 CompilerThread1\" daemon [_thread_blocked, id=13170, stack(0x00007ff349ac7000,0x00007ff349bc8000)]\n  0x00007ff3600cd000 JavaThread \"C2 CompilerThread0\" daemon [_thread_blocked, id=13169, stack(0x00007ff349bc8000,0x00007ff349cc9000)]\n  0x00007ff3600cb000 JavaThread \"JDWP Event Helper Thread\" daemon [_thread_blocked, id=13168, stack(0x00007ff349cc9000,0x00007ff349dca000)]\n  0x00007ff3600c7000 JavaThread \"JDWP Transport Listener: dt_socket\" daemon [_thread_in_native, id=13167, stack(0x00007ff349dca000,0x00007ff349ecb000)]\n  0x00007ff3600b8000 JavaThread \"Signal Dispatcher\" daemon [_thread_blocked, id=13166, stack(0x00007ff34a0cf000,0x00007ff34a1d0000)]\n  0x00007ff36008c000 JavaThread \"Finalizer\" daemon [_thread_blocked, id=13165, stack(0x00007ff34a1d0000,0x00007ff34a2d1000)]\n  0x00007ff36008a000 JavaThread \"Reference Handler\" daemon [_thread_blocked, id=13164, stack(0x00007ff34a2d1000,0x00007ff34a3d2000)]\n  0x00007ff360017000 JavaThread \"main\" [_thread_blocked, id=13158, stack(0x00007ff369c7a000,0x00007ff369d7b000)]\n\nOther Threads:\n  0x00007ff360085000 VMThread [stack: 0x00007ff34a3d2000,0x00007ff34a4d3000] [id=13163]\n  0x00007ff3600e2000 WatcherThread [stack: 0x00007ff3497c4000,0x00007ff3498c5000] [id=13173]\n{% endcodeblock %}\n这一部分是crash时Java代码中所有线程的状况。分析类似上一部分。\n{% codeblock %}\nVM state:not at safepoint (normal execution)\nVM Mutex/Monitor currently owned by a thread: None\n{% endcodeblock %}\n**VM状态**：\n\n状态 | 描述\n- | :-: |\nnot at a safepoint | 正常执行\nat safepoint | 所有VM内的线程被block住，在等待某一个VM操作完成\nsynchronizing | 一个特殊VM操作需要执行，VM在等待所有线程block\n\n{% codeblock %}\nHeap:\n PSYoungGen  total 39424K, used 31166K [0x0000000771a00000, 0x0000000774780000, 0x00000007c0000000)\n  eden space 38912K, 79% used [0x0000000771a00000,0x000000077384faf0,0x0000000774000000)\n  from space 512K, 25% used [0x0000000774680000,0x00000007746a0000,0x0000000774700000)\n  to   space 512K, 0% used [0x0000000774700000,0x0000000774700000,0x0000000774780000)\n ParOldGen   total 124928K, used 67043K [0x00000006d4e00000, 0x00000006dc800000, 0x0000000771a00000)\n  object space 124928K, 53% used [0x00000006d4e00000,0x00000006d8f78d18,0x00000006dc800000)\n Metaspace   used 54122K, capacity 54748K, committed 54912K, reserved 1097728K\n  class spaceused 6562K, capacity 6716K, committed 6784K, reserved 1048576K\n\nCard table byte_map: [0x00007ff3664db000,0x00007ff366c35000] byte_map_base: 0x00007ff362e34000\n\nMarking Bits: (ParMarkBitMap*) 0x00007ff3691426c0\n Begin Bits: [0x00007ff324a70000, 0x00007ff328538000)\n End Bits:   [0x00007ff328538000, 0x00007ff32c000000)\n\nPolling page: 0x00007ff369d84000\n\nCodeCache: size=245760Kb used=17958Kb max_used=18385Kb free=227801Kb\n bounds [0x00007ff34aad9000, 0x00007ff34bd29000, 0x00007ff359ad9000]\n total_blobs=6019 nmethods=5425 adapters=516\n compilation: enabled\n{% endcodeblock %}\n* Card Table是jvm维护的一种数据结构，用于记录更改对象时的引用，方便GC。\n* CodeCache是用来保存本地代码的，不属于PermGen。\n\n{% codeblock %}\nCompilation events (10 events):\nGC Heap History (10 events):\nDeoptimization events (10 events):\nInternal exceptions (10 events):\nEvents (10 events):\nDynamic libraries:\n{% endcodeblock %}\n\n这些都是表示crash时jvm最近的一些操作。举个例子说明：\n{% codeblock %}\nEvents (10 events):\nEvent: 2603309.010 Thread 0x00007ff2c800c000 DEOPT UNPACKING pc=0x00007ff34aaddf69 sp=0x00007ff3409e88a8 mode 2\nEvent: 2603310.108 Thread 0x00007ff362229000 DEOPT PACKING pc=0x00007ff34b25ce6c sp=0x00007ff340ceb660\nEvent: 2603310.122 Thread 0x00007ff2c8009800 Uncommon trap: trap_request=0xffffff65 fr.pc=0x00007ff34b890e40\nEvent: 2603310.124 Thread 0x00007ff2c8009800 DEOPT PACKING pc=0x00007ff34b890e40 sp=0x00007ff3408e7790\nEvent: 2603310.124 Thread 0x00007ff2c8009800 DEOPT UNPACKING pc=0x00007ff34aaddf69 sp=0x00007ff3408e7680 mode 2\nEvent: 2603310.125 Thread 0x00007ff2c8009800 Uncommon trap: trap_request=0xffffff65 fr.pc=0x00007ff34b850fe4\nEvent: 2603310.125 Thread 0x00007ff2c8009800 DEOPT PACKING pc=0x00007ff34b850fe4 sp=0x00007ff3408e7560\nEvent: 2603310.125 Thread 0x00007ff2c8009800 DEOPT UNPACKING pc=0x00007ff34aaddf69 sp=0x00007ff3408e72d8 mode 2\nEvent: 2603310.126 Thread 0x00007ff362229000 DEOPT UNPACKING pc=0x00007ff34aaddf69 sp=0x00007ff340ceb628 mode 2\nEvent: 2603310.935 Thread 0x00007ff2d8001000 Thread added: 0x00007ff2d8001000\n{% endcodeblock %}\n\n上述是最近10个runtime VM的事件，拿第一条举例，2603309.010是从VM启动后的时长，单位是秒，pc是program counter，sp是stack pointer。关于 DEOPT、Uncommon trap等的解释可以看这个[issue](https://stackoverflow.com/questions/49716694/what-are-events-in-hs-err-pid-log/49716888#49716888)，大概就是编译的时候，编译器做了一些优化，但是在runtime时发现这个优化没有用，所以叫去优化（deoptimization）。\n{% codeblock %}\n---------------  S Y S T E M  ---------------\n\nOS:Amazon Linux AMI release 2016.03\n\nuname:Linux 4.4.11-23.53.amzn1.x86_64 #1 SMP Wed Jun 1 22:22:50 UTC 2016 x86_64\nlibc:glibc 2.17 NPTL 2.17\nrlimit: STACK 8192k, CORE 0k, NPROC 65536, NOFILE 65536, AS infinity\nload average:10.84 2.76 1.17\n\n/proc/meminfo:\nMemTotal:   15403948 kB\nMemFree: 2637700 kB\nMemAvailable:2571132 kB\nBuffers: 304 kB\nCached:13784 kB\nSwapCached:0 kB\nActive: 12625320 kB\nInactive:   7684 kB\nActive(anon):   12619252 kB\nInactive(anon):  336 kB\nActive(file):   6068 kB\nInactive(file): 7348 kB\nUnevictable:   0 kB\nMlocked:   0 kB\nSwapTotal: 0 kB\nSwapFree:  0 kB\nDirty:16 kB\nWriteback:56 kB\nAnonPages:  12606968 kB\nMapped:10896 kB\nShmem:   356 kB\nSlab:  46004 kB\nSReclaimable:  22384 kB\nSUnreclaim:23620 kB\nKernelStack:9856 kB\nPageTables:38084 kB\nNFS_Unstable:  0 kB\nBounce:0 kB\nWritebackTmp:  0 kB\nCommitLimit: 7701972 kB\nCommitted_AS:   18337652 kB\nVmallocTotal:   34359738367 kB\nVmallocUsed:   0 kB\nVmallocChunk:  0 kB\nAnonHugePages: 0 kB\nHugePages_Total:   0\nHugePages_Free:0\nHugePages_Rsvd:0\nHugePages_Surp:0\nHugepagesize:   2048 kB\nDirectMap4k:   12288 kB\nDirectMap2M:15716352 kB\n{% endcodeblock %}\n系统内存情况：\n\n名词 | 描述 | 名词 | 描述 | 名词 | 描述\n- | :-: | :-: | :-: | :-: | :-\nMemToal | 总内存 | MemFree | 未使用内存 | MemAvailable | 可用内存\nBuffers | 文件读写Buffer | Cached | 缓存 | SwapCached | 缓存的交换空间\nActive | 最近被申请过的空间 | Inactive | 最近未被申请过的空间 | Active(anon) | ..\nInactive(anon) | .. | Active(file) | .. | Inactive(file) | ..\nUnevictable | .. | Unevictable | .. | Mlocked | ..\nSwapTotal | 可用交换空间 | SwapFree | 可用交换空间 | Dirty | 等待写入磁盘的空间\nWriteback | 正在被写入磁盘的空间 | AnonPages | .. | Mapped | ..\nShmem | .. | Slab | kernel使用 | Sreclaimable | ..\nSUnreclaim | .. | KernelStack | .. | PageTables | 内存页映射表空间\nNFS_Unstable | .. | Bounce | .. | WritebackTmp | ..\nCommitLimit | .. | Committed_AS | 完成workload最坏情况的内存使用情况 | VmallocTotal | ..\nVmallocUsed | 虚拟空间可映射的大小 | VmallocUsed | 已使用的虚拟空间映射大小 | VmallocChunk | 虚拟空间最大的虚拟空间块\nAnonHugePages | .. | HugePages_Total | .. | HugePages_Free | ..\nHugePages_Rsvd | .. | HugePages_Surp | .. | Hugepagesize | ..\nDirectMap4k | .. | DirectMap2M | ..\n\n\n\n","source":"_posts/hs-err-pid-log里是些什么？.md","raw":"title: hs_err_pid.log里是些什么？\nauthor: Liao Jiayi\ntags:\n  - memory\n  - linux\narticleId: linux-hs_err_pid\ncategories: []\ndate: 2018-04-11 20:28:03\n---\n{% codeblock %}\n# There is insufficient memory for the Java Runtime Environment to continue.\n# Native memory allocation (mmap) failed to map 12288 bytes for committing reserved memory.\n# Possible reasons:\n#   The system is out of physical RAM or swap space\n#   In 32 bit mode, the process size limit was hit\n# Possible solutions:\n#   Reduce memory load on the system\n#   Increase physical memory or swap space\n#   Check if swap backing store is full\n#   Use 64 bit Java on a 64 bit OS\n#   Decrease Java heap size (-Xmx/-Xms)\n#   Decrease number of Java threads\n#   Decrease Java thread stack sizes (-Xss)\n#   Set larger code cache with -XX:ReservedCodeCacheSize=\n# This output file may be truncated or incomplete.\n#\n#  Out of Memory Error (os_linux.cpp:2673), pid=13016, tid=140682742126336\n#\n# JRE version: Java(TM) SE Runtime Environment (8.0_40-b25) (build 1.8.0_40-b25)\n# Java VM: Java HotSpot(TM) 64-Bit Server VM (25.40-b25 mixed mode linux-amd64 compressed oops)\n# Failed to write core dump. Core dumps have been disabled. To enable core dumping, try \"ulimit -c unlimited\" before starting Java again\n{% endcodeblock %}\n\n\n第一部分主要是程序crash的原因以及相关的solution。\n{% codeblock %}\nCurrent thread (0x00007ff2d8001000):  JavaThread \"flink-akka.remote.default-remote-dispatcher-15\" daemon [_thread_new, id=31925, stack(0x00007ff340ced000,0x00007ff340dee000)]\n\nStack: [0x00007ff340ced000,0x00007ff340dee000],  sp=0x00007ff340dec9a0,  free space=1022k\nNative frames: (J=compiled Java code, j=interpreted, Vv=VM code, C=native code)\nV  [libjvm.so+0xaaca9a]  VMError::report_and_die()+0x2ba\nV  [libjvm.so+0x4f333b]  report_vm_out_of_memory(char const*, int, unsigned long, VMErrorType, char const*)+0x8b\nV  [libjvm.so+0x90e8c3]  os::Linux::commit_memory_impl(char*, unsigned long, bool)+0x103\nV  [libjvm.so+0x90e98c]  os::pd_commit_memory(char*, unsigned long, bool)+0xc\nV  [libjvm.so+0x90772a]  os::commit_memory(char*, unsigned long, bool)+0x2a\nV  [libjvm.so+0x90c97f]  os::pd_create_stack_guard_pages(char*, unsigned long)+0x7f\nV  [libjvm.so+0xa52b4e]  JavaThread::create_stack_guard_pages()+0x5e\nV  [libjvm.so+0xa5c9b4]  JavaThread::run()+0x34\nV  [libjvm.so+0x910ee8]  java_start(Thread*)+0x108\nC  [libpthread.so.0+0x7dc5]  start_thread+0xc5\n{% endcodeblock %}\nCurrent Thread表示crash时程序所处的线程。\n**线程类别**: JavaThread，共有以下几种\n* JavaThread\n* VMThread（负责VM内的一些操作，包括GC）\n* CompilerThread\n* GCTaskThread\n* WatcherThread\n* ConcurrentMarkSweepThread\n\n**线程状态**：_thread_new\n\n线程状态 | 描述\n- | -\n _thread_uninitialized | 线程未被创建\n _thread_new | 线程创建但并未执行\n _thread_in_native | 线程正在运行native code\n _thread_in_vm | 执行VM的code\n _thread_in_java | 执行java的code\n _thread_blocked | 被block住的线程\n\n**原生堆栈信息（Native frames）**: 主要是一些jvm动态库的对战信息，是分析crash中比较重要的一个部分。\n{% codeblock %}\nJava Threads: ( => current thread )\n=>0x00007ff2d8001000 JavaThread \"flink-akka.remote.default-remote-dispatcher-15\" daemon [_thread_new, id=31925, stack(0x00007ff340ced000,0x00007ff340dee000)]\n  0x00007ff2ec053800 JavaThread \"Hashed wheel timer #1\" daemon [_thread_blocked, id=14219, stack(0x00007ff33bdfe000,0x00007ff33beff000)]\n  0x00007ff2dc130800 JavaThread \"New I/O server boss #6\" daemon [_thread_in_native, id=14218, stack(0x00007ff33beff000,0x00007ff33c000000)]\n  0x00007ff2dc119800 JavaThread \"New I/O worker #5\" daemon [_thread_in_native, id=14217, stack(0x00007ff3400e3000,0x00007ff3401e4000)]\n  0x00007ff2dc0b6000 JavaThread \"New I/O worker #4\" daemon [_thread_in_native, id=14216, stack(0x00007ff3401e4000,0x00007ff3402e5000)]\n  0x00007ff2dc0bb800 JavaThread \"New I/O boss #3\" daemon [_thread_in_native, id=14215, stack(0x00007ff3402e5000,0x00007ff3403e6000)]\n  0x00007ff2dc05c000 JavaThread \"New I/O worker #2\" daemon [_thread_in_native, id=14214, stack(0x00007ff3403e6000,0x00007ff3404e7000)]\n  0x00007ff2dc052000 JavaThread \"New I/O worker #1\" daemon [_thread_in_native, id=14213, stack(0x00007ff3404e7000,0x00007ff3405e8000)]\n  0x00007ff2c8009800 JavaThread \"flink-akka.remote.default-remote-dispatcher-7\" daemon [_thread_in_vm, id=14206, stack(0x00007ff3407e8000,0x00007ff3408e9000)]\n  0x00007ff2c800c000 JavaThread \"flink-akka.remote.default-remote-dispatcher-6\" daemon [_thread_in_native, id=14202, stack(0x00007ff3408e9000,0x00007ff3409ea000)]\n  0x00007ff2cc020000 JavaThread \"flink-akka.actor.default-dispatcher-5\" daemon [_thread_blocked, id=14147, stack(0x00007ff3409ea000,0x00007ff340aeb000)]\n  0x00007ff36222a800 JavaThread \"flink-akka.actor.default-dispatcher-4\" daemon [_thread_blocked, id=14136, stack(0x00007ff340aeb000,0x00007ff340bec000)]\n  0x00007ff362229000 JavaThread \"flink-akka.actor.default-dispatcher-3\" daemon [_thread_blocked, id=14135, stack(0x00007ff340bec000,0x00007ff340ced000)]\n  0x00007ff362183000 JavaThread \"flink-scheduler-1\" daemon [_thread_blocked, id=14044, stack(0x00007ff340fee000,0x00007ff3410ef000)]\n  0x00007ff3614b4000 JavaThread \"Timer for 'phoenix' metrics system\" daemon [_thread_blocked, id=14032, stack(0x00007ff342dfa000,0x00007ff342efb000)]\n  0x00007ff360fc1000 JavaThread \"main-EventThread\" daemon [_thread_blocked, id=14031, stack(0x00007ff3431fc000,0x00007ff3432fd000)]\n  0x00007ff360faf000 JavaThread \"main-SendThread(cnzk2:2181)\" daemon [_thread_in_native, id=14030, stack(0x00007ff3432fd000,0x00007ff3433fe000)]\n  0x00007ff360471000 JavaThread \"Thread-80\" daemon [_thread_blocked, id=14029, stack(0x00007ff3430fb000,0x00007ff3431fc000)]\n  0x00007ff3608a7000 JavaThread \"IPC Parameter Sending Thread #0\" daemon [_thread_blocked, id=13178, stack(0x00007ff3437fe000,0x00007ff3438ff000)]\n  0x00007ff3608a4000 JavaThread \"IPC Client (1508059488) connection to cnhm0/10.0.1.222:8032 from apps\" daemon [_thread_blocked, id=13177, stack(0x00007ff348923000,0x00007ff348a24000)]\n  0x00007ff3600df800 JavaThread \"Service Thread\" daemon [_thread_blocked, id=13172, stack(0x00007ff3498c5000,0x00007ff3499c6000)]\n  0x00007ff3600d2000 JavaThread \"C1 CompilerThread2\" daemon [_thread_in_native, id=13171, stack(0x00007ff3499c6000,0x00007ff349ac7000)]\n  0x00007ff3600d0000 JavaThread \"C2 CompilerThread1\" daemon [_thread_blocked, id=13170, stack(0x00007ff349ac7000,0x00007ff349bc8000)]\n  0x00007ff3600cd000 JavaThread \"C2 CompilerThread0\" daemon [_thread_blocked, id=13169, stack(0x00007ff349bc8000,0x00007ff349cc9000)]\n  0x00007ff3600cb000 JavaThread \"JDWP Event Helper Thread\" daemon [_thread_blocked, id=13168, stack(0x00007ff349cc9000,0x00007ff349dca000)]\n  0x00007ff3600c7000 JavaThread \"JDWP Transport Listener: dt_socket\" daemon [_thread_in_native, id=13167, stack(0x00007ff349dca000,0x00007ff349ecb000)]\n  0x00007ff3600b8000 JavaThread \"Signal Dispatcher\" daemon [_thread_blocked, id=13166, stack(0x00007ff34a0cf000,0x00007ff34a1d0000)]\n  0x00007ff36008c000 JavaThread \"Finalizer\" daemon [_thread_blocked, id=13165, stack(0x00007ff34a1d0000,0x00007ff34a2d1000)]\n  0x00007ff36008a000 JavaThread \"Reference Handler\" daemon [_thread_blocked, id=13164, stack(0x00007ff34a2d1000,0x00007ff34a3d2000)]\n  0x00007ff360017000 JavaThread \"main\" [_thread_blocked, id=13158, stack(0x00007ff369c7a000,0x00007ff369d7b000)]\n\nOther Threads:\n  0x00007ff360085000 VMThread [stack: 0x00007ff34a3d2000,0x00007ff34a4d3000] [id=13163]\n  0x00007ff3600e2000 WatcherThread [stack: 0x00007ff3497c4000,0x00007ff3498c5000] [id=13173]\n{% endcodeblock %}\n这一部分是crash时Java代码中所有线程的状况。分析类似上一部分。\n{% codeblock %}\nVM state:not at safepoint (normal execution)\nVM Mutex/Monitor currently owned by a thread: None\n{% endcodeblock %}\n**VM状态**：\n\n状态 | 描述\n- | :-: |\nnot at a safepoint | 正常执行\nat safepoint | 所有VM内的线程被block住，在等待某一个VM操作完成\nsynchronizing | 一个特殊VM操作需要执行，VM在等待所有线程block\n\n{% codeblock %}\nHeap:\n PSYoungGen  total 39424K, used 31166K [0x0000000771a00000, 0x0000000774780000, 0x00000007c0000000)\n  eden space 38912K, 79% used [0x0000000771a00000,0x000000077384faf0,0x0000000774000000)\n  from space 512K, 25% used [0x0000000774680000,0x00000007746a0000,0x0000000774700000)\n  to   space 512K, 0% used [0x0000000774700000,0x0000000774700000,0x0000000774780000)\n ParOldGen   total 124928K, used 67043K [0x00000006d4e00000, 0x00000006dc800000, 0x0000000771a00000)\n  object space 124928K, 53% used [0x00000006d4e00000,0x00000006d8f78d18,0x00000006dc800000)\n Metaspace   used 54122K, capacity 54748K, committed 54912K, reserved 1097728K\n  class spaceused 6562K, capacity 6716K, committed 6784K, reserved 1048576K\n\nCard table byte_map: [0x00007ff3664db000,0x00007ff366c35000] byte_map_base: 0x00007ff362e34000\n\nMarking Bits: (ParMarkBitMap*) 0x00007ff3691426c0\n Begin Bits: [0x00007ff324a70000, 0x00007ff328538000)\n End Bits:   [0x00007ff328538000, 0x00007ff32c000000)\n\nPolling page: 0x00007ff369d84000\n\nCodeCache: size=245760Kb used=17958Kb max_used=18385Kb free=227801Kb\n bounds [0x00007ff34aad9000, 0x00007ff34bd29000, 0x00007ff359ad9000]\n total_blobs=6019 nmethods=5425 adapters=516\n compilation: enabled\n{% endcodeblock %}\n* Card Table是jvm维护的一种数据结构，用于记录更改对象时的引用，方便GC。\n* CodeCache是用来保存本地代码的，不属于PermGen。\n\n{% codeblock %}\nCompilation events (10 events):\nGC Heap History (10 events):\nDeoptimization events (10 events):\nInternal exceptions (10 events):\nEvents (10 events):\nDynamic libraries:\n{% endcodeblock %}\n\n这些都是表示crash时jvm最近的一些操作。举个例子说明：\n{% codeblock %}\nEvents (10 events):\nEvent: 2603309.010 Thread 0x00007ff2c800c000 DEOPT UNPACKING pc=0x00007ff34aaddf69 sp=0x00007ff3409e88a8 mode 2\nEvent: 2603310.108 Thread 0x00007ff362229000 DEOPT PACKING pc=0x00007ff34b25ce6c sp=0x00007ff340ceb660\nEvent: 2603310.122 Thread 0x00007ff2c8009800 Uncommon trap: trap_request=0xffffff65 fr.pc=0x00007ff34b890e40\nEvent: 2603310.124 Thread 0x00007ff2c8009800 DEOPT PACKING pc=0x00007ff34b890e40 sp=0x00007ff3408e7790\nEvent: 2603310.124 Thread 0x00007ff2c8009800 DEOPT UNPACKING pc=0x00007ff34aaddf69 sp=0x00007ff3408e7680 mode 2\nEvent: 2603310.125 Thread 0x00007ff2c8009800 Uncommon trap: trap_request=0xffffff65 fr.pc=0x00007ff34b850fe4\nEvent: 2603310.125 Thread 0x00007ff2c8009800 DEOPT PACKING pc=0x00007ff34b850fe4 sp=0x00007ff3408e7560\nEvent: 2603310.125 Thread 0x00007ff2c8009800 DEOPT UNPACKING pc=0x00007ff34aaddf69 sp=0x00007ff3408e72d8 mode 2\nEvent: 2603310.126 Thread 0x00007ff362229000 DEOPT UNPACKING pc=0x00007ff34aaddf69 sp=0x00007ff340ceb628 mode 2\nEvent: 2603310.935 Thread 0x00007ff2d8001000 Thread added: 0x00007ff2d8001000\n{% endcodeblock %}\n\n上述是最近10个runtime VM的事件，拿第一条举例，2603309.010是从VM启动后的时长，单位是秒，pc是program counter，sp是stack pointer。关于 DEOPT、Uncommon trap等的解释可以看这个[issue](https://stackoverflow.com/questions/49716694/what-are-events-in-hs-err-pid-log/49716888#49716888)，大概就是编译的时候，编译器做了一些优化，但是在runtime时发现这个优化没有用，所以叫去优化（deoptimization）。\n{% codeblock %}\n---------------  S Y S T E M  ---------------\n\nOS:Amazon Linux AMI release 2016.03\n\nuname:Linux 4.4.11-23.53.amzn1.x86_64 #1 SMP Wed Jun 1 22:22:50 UTC 2016 x86_64\nlibc:glibc 2.17 NPTL 2.17\nrlimit: STACK 8192k, CORE 0k, NPROC 65536, NOFILE 65536, AS infinity\nload average:10.84 2.76 1.17\n\n/proc/meminfo:\nMemTotal:   15403948 kB\nMemFree: 2637700 kB\nMemAvailable:2571132 kB\nBuffers: 304 kB\nCached:13784 kB\nSwapCached:0 kB\nActive: 12625320 kB\nInactive:   7684 kB\nActive(anon):   12619252 kB\nInactive(anon):  336 kB\nActive(file):   6068 kB\nInactive(file): 7348 kB\nUnevictable:   0 kB\nMlocked:   0 kB\nSwapTotal: 0 kB\nSwapFree:  0 kB\nDirty:16 kB\nWriteback:56 kB\nAnonPages:  12606968 kB\nMapped:10896 kB\nShmem:   356 kB\nSlab:  46004 kB\nSReclaimable:  22384 kB\nSUnreclaim:23620 kB\nKernelStack:9856 kB\nPageTables:38084 kB\nNFS_Unstable:  0 kB\nBounce:0 kB\nWritebackTmp:  0 kB\nCommitLimit: 7701972 kB\nCommitted_AS:   18337652 kB\nVmallocTotal:   34359738367 kB\nVmallocUsed:   0 kB\nVmallocChunk:  0 kB\nAnonHugePages: 0 kB\nHugePages_Total:   0\nHugePages_Free:0\nHugePages_Rsvd:0\nHugePages_Surp:0\nHugepagesize:   2048 kB\nDirectMap4k:   12288 kB\nDirectMap2M:15716352 kB\n{% endcodeblock %}\n系统内存情况：\n\n名词 | 描述 | 名词 | 描述 | 名词 | 描述\n- | :-: | :-: | :-: | :-: | :-\nMemToal | 总内存 | MemFree | 未使用内存 | MemAvailable | 可用内存\nBuffers | 文件读写Buffer | Cached | 缓存 | SwapCached | 缓存的交换空间\nActive | 最近被申请过的空间 | Inactive | 最近未被申请过的空间 | Active(anon) | ..\nInactive(anon) | .. | Active(file) | .. | Inactive(file) | ..\nUnevictable | .. | Unevictable | .. | Mlocked | ..\nSwapTotal | 可用交换空间 | SwapFree | 可用交换空间 | Dirty | 等待写入磁盘的空间\nWriteback | 正在被写入磁盘的空间 | AnonPages | .. | Mapped | ..\nShmem | .. | Slab | kernel使用 | Sreclaimable | ..\nSUnreclaim | .. | KernelStack | .. | PageTables | 内存页映射表空间\nNFS_Unstable | .. | Bounce | .. | WritebackTmp | ..\nCommitLimit | .. | Committed_AS | 完成workload最坏情况的内存使用情况 | VmallocTotal | ..\nVmallocUsed | 虚拟空间可映射的大小 | VmallocUsed | 已使用的虚拟空间映射大小 | VmallocChunk | 虚拟空间最大的虚拟空间块\nAnonHugePages | .. | HugePages_Total | .. | HugePages_Free | ..\nHugePages_Rsvd | .. | HugePages_Surp | .. | Hugepagesize | ..\nDirectMap4k | .. | DirectMap2M | ..\n\n\n\n","slug":"hs-err-pid-log里是些什么？","published":1,"updated":"2018-04-11T17:16:39.190Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjfvdlqxi0006fauggapoj8lk","content":"<figure class=\"highlight shell\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> There is insufficient memory <span class=\"keyword\">for</span> the Java Runtime Environment to <span class=\"built_in\">continue</span>.</span></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> Native memory allocation (mmap) failed to map 12288 bytes <span class=\"keyword\">for</span> committing reserved memory.</span></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> Possible reasons:</span></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">   The system is out of physical RAM or swap space</span></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">   In 32 bit mode, the process size <span class=\"built_in\">limit</span> was hit</span></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> Possible solutions:</span></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">   Reduce memory load on the system</span></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">   Increase physical memory or swap space</span></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">   Check <span class=\"keyword\">if</span> swap backing store is full</span></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">   Use 64 bit Java on a 64 bit OS</span></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">   Decrease Java heap size (-Xmx/-Xms)</span></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">   Decrease number of Java threads</span></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">   Decrease Java thread stack sizes (-Xss)</span></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">   Set larger code cache with -XX:ReservedCodeCacheSize=</span></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> This output file may be truncated or incomplete.</span></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"></span></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">  Out of Memory Error (os_linux.cpp:2673), pid=13016, tid=140682742126336</span></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"></span></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> JRE version: Java(TM) SE Runtime Environment (8.0_40-b25) (build 1.8.0_40-b25)</span></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> Java VM: Java HotSpot(TM) 64-Bit Server VM (25.40-b25 mixed mode linux-amd64 compressed oops)</span></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> Failed to write core dump. Core dumps have been disabled. To <span class=\"built_in\">enable</span> core dumping, try <span class=\"string\">\"ulimit -c unlimited\"</span> before starting Java again</span></span><br></pre></td></tr></table></figure>\n<p>第一部分主要是程序crash的原因以及相关的solution。<br><figure class=\"highlight x86asm\"><table><tr><td class=\"code\"><pre><span class=\"line\">Current thread (<span class=\"number\">0x00007ff2d8001000</span>):  JavaThread <span class=\"string\">\"flink-akka.remote.default-remote-dispatcher-15\"</span> daemon [_thread_new, id=<span class=\"number\">31925</span>, stack(<span class=\"number\">0x00007ff340ced000</span>,<span class=\"number\">0x00007ff340dee000</span>)]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"symbol\">Stack:</span> [<span class=\"number\">0x00007ff340ced000</span>,<span class=\"number\">0x00007ff340dee000</span>],  <span class=\"built_in\">sp</span>=<span class=\"number\">0x00007ff340dec9a0</span>,  free space=1022k</span><br><span class=\"line\">Native frames: (J=compiled Java code, j=interpreted, Vv=VM code, C=native code)</span><br><span class=\"line\">V  [libjvm.so+<span class=\"number\">0xaaca9a</span>]  VMError::report_and_die()+<span class=\"number\">0x2ba</span></span><br><span class=\"line\">V  [libjvm.so+<span class=\"number\">0x4f333b</span>]  report_vm_out_of_memory(char const*, <span class=\"keyword\">int</span>, unsigned long, VMErrorType, char const*)+<span class=\"number\">0x8b</span></span><br><span class=\"line\">V  [libjvm.so+<span class=\"number\">0x90e8c3</span>]  os::Linux::commit_memory_impl(char*, unsigned long, bool)+<span class=\"number\">0x103</span></span><br><span class=\"line\">V  [libjvm.so+<span class=\"number\">0x90e98c</span>]  os::pd_commit_memory(char*, unsigned long, bool)+<span class=\"number\">0xc</span></span><br><span class=\"line\">V  [libjvm.so+<span class=\"number\">0x90772a</span>]  os::commit_memory(char*, unsigned long, bool)+<span class=\"number\">0x2a</span></span><br><span class=\"line\">V  [libjvm.so+<span class=\"number\">0x90c97f</span>]  os::pd_create_stack_guard_pages(char*, unsigned long)+<span class=\"number\">0x7f</span></span><br><span class=\"line\">V  [libjvm.so+<span class=\"number\">0xa52b4e</span>]  JavaThread::create_stack_guard_pages()+<span class=\"number\">0x5e</span></span><br><span class=\"line\">V  [libjvm.so+<span class=\"number\">0xa5c9b4</span>]  JavaThread::run()+<span class=\"number\">0x34</span></span><br><span class=\"line\">V  [libjvm.so+<span class=\"number\">0x910ee8</span>]  java_start(Thread*)+<span class=\"number\">0x108</span></span><br><span class=\"line\">C  [libpthread.so<span class=\"meta\">.0</span>+<span class=\"number\">0x7dc5</span>]  start_thread+<span class=\"number\">0xc5</span></span><br></pre></td></tr></table></figure><br>Current Thread表示crash时程序所处的线程。<br><strong>线程类别</strong>: JavaThread，共有以下几种</p>\n<ul>\n<li>JavaThread</li>\n<li>VMThread（负责VM内的一些操作，包括GC）</li>\n<li>CompilerThread</li>\n<li>GCTaskThread</li>\n<li>WatcherThread</li>\n<li>ConcurrentMarkSweepThread</li>\n</ul>\n<p><strong>线程状态</strong>：_thread_new</p>\n<table>\n<thead>\n<tr>\n<th>线程状态</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td> _thread_uninitialized</td>\n<td>线程未被创建</td>\n</tr>\n<tr>\n<td> _thread_new</td>\n<td>线程创建但并未执行</td>\n</tr>\n<tr>\n<td> _thread_in_native</td>\n<td>线程正在运行native code</td>\n</tr>\n<tr>\n<td> _thread_in_vm</td>\n<td>执行VM的code</td>\n</tr>\n<tr>\n<td> _thread_in_java</td>\n<td>执行java的code</td>\n</tr>\n<tr>\n<td> _thread_blocked</td>\n<td>被block住的线程</td>\n</tr>\n</tbody>\n</table>\n<p><strong>原生堆栈信息（Native frames）</strong>: 主要是一些jvm动态库的对战信息，是分析crash中比较重要的一个部分。<br><figure class=\"highlight go\"><table><tr><td class=\"code\"><pre><span class=\"line\">Java Threads: ( =&gt; current thread )</span><br><span class=\"line\">=&gt;<span class=\"number\">0x00007ff2d</span>8001000 JavaThread <span class=\"string\">\"flink-akka.remote.default-remote-dispatcher-15\"</span> daemon [_thread_new, id=<span class=\"number\">31925</span>, stack(<span class=\"number\">0x00007ff340ced</span>000,<span class=\"number\">0x00007ff340d</span>ee000)]</span><br><span class=\"line\">  <span class=\"number\">0x00007ff</span>2ec053800 JavaThread <span class=\"string\">\"Hashed wheel timer #1\"</span> daemon [_thread_blocked, id=<span class=\"number\">14219</span>, stack(<span class=\"number\">0x00007ff33bdf</span>e000,<span class=\"number\">0x00007ff33beff</span>000)]</span><br><span class=\"line\">  <span class=\"number\">0x00007ff2d</span>c130800 JavaThread <span class=\"string\">\"New I/O server boss #6\"</span> daemon [_thread_in_native, id=<span class=\"number\">14218</span>, stack(<span class=\"number\">0x00007ff33beff</span>000,<span class=\"number\">0x00007ff</span>33c000000)]</span><br><span class=\"line\">  <span class=\"number\">0x00007ff2d</span>c119800 JavaThread <span class=\"string\">\"New I/O worker #5\"</span> daemon [_thread_in_native, id=<span class=\"number\">14217</span>, stack(<span class=\"number\">0x00007ff</span>3400e3000,<span class=\"number\">0x00007ff</span>3401e4000)]</span><br><span class=\"line\">  <span class=\"number\">0x00007ff2d</span>c0b6000 JavaThread <span class=\"string\">\"New I/O worker #4\"</span> daemon [_thread_in_native, id=<span class=\"number\">14216</span>, stack(<span class=\"number\">0x00007ff</span>3401e4000,<span class=\"number\">0x00007ff</span>3402e5000)]</span><br><span class=\"line\">  <span class=\"number\">0x00007ff2d</span>c0bb800 JavaThread <span class=\"string\">\"New I/O boss #3\"</span> daemon [_thread_in_native, id=<span class=\"number\">14215</span>, stack(<span class=\"number\">0x00007ff</span>3402e5000,<span class=\"number\">0x00007ff</span>3403e6000)]</span><br><span class=\"line\">  <span class=\"number\">0x00007ff2d</span>c05c000 JavaThread <span class=\"string\">\"New I/O worker #2\"</span> daemon [_thread_in_native, id=<span class=\"number\">14214</span>, stack(<span class=\"number\">0x00007ff</span>3403e6000,<span class=\"number\">0x00007ff</span>3404e7000)]</span><br><span class=\"line\">  <span class=\"number\">0x00007ff2d</span>c052000 JavaThread <span class=\"string\">\"New I/O worker #1\"</span> daemon [_thread_in_native, id=<span class=\"number\">14213</span>, stack(<span class=\"number\">0x00007ff</span>3404e7000,<span class=\"number\">0x00007ff</span>3405e8000)]</span><br><span class=\"line\">  <span class=\"number\">0x00007ff</span>2c8009800 JavaThread <span class=\"string\">\"flink-akka.remote.default-remote-dispatcher-7\"</span> daemon [_thread_in_vm, id=<span class=\"number\">14206</span>, stack(<span class=\"number\">0x00007ff</span>3407e8000,<span class=\"number\">0x00007ff</span>3408e9000)]</span><br><span class=\"line\">  <span class=\"number\">0x00007ff</span>2c800c000 JavaThread <span class=\"string\">\"flink-akka.remote.default-remote-dispatcher-6\"</span> daemon [_thread_in_native, id=<span class=\"number\">14202</span>, stack(<span class=\"number\">0x00007ff</span>3408e9000,<span class=\"number\">0x00007ff</span>3409ea000)]</span><br><span class=\"line\">  <span class=\"number\">0x00007ff</span>2cc020000 JavaThread <span class=\"string\">\"flink-akka.actor.default-dispatcher-5\"</span> daemon [_thread_blocked, id=<span class=\"number\">14147</span>, stack(<span class=\"number\">0x00007ff</span>3409ea000,<span class=\"number\">0x00007ff</span>340aeb000)]</span><br><span class=\"line\">  <span class=\"number\">0x00007ff</span>36222a800 JavaThread <span class=\"string\">\"flink-akka.actor.default-dispatcher-4\"</span> daemon [_thread_blocked, id=<span class=\"number\">14136</span>, stack(<span class=\"number\">0x00007ff</span>340aeb000,<span class=\"number\">0x00007ff</span>340bec000)]</span><br><span class=\"line\">  <span class=\"number\">0x00007ff</span>362229000 JavaThread <span class=\"string\">\"flink-akka.actor.default-dispatcher-3\"</span> daemon [_thread_blocked, id=<span class=\"number\">14135</span>, stack(<span class=\"number\">0x00007ff</span>340bec000,<span class=\"number\">0x00007ff340ced</span>000)]</span><br><span class=\"line\">  <span class=\"number\">0x00007ff</span>362183000 JavaThread <span class=\"string\">\"flink-scheduler-1\"</span> daemon [_thread_blocked, id=<span class=\"number\">14044</span>, stack(<span class=\"number\">0x00007ff340f</span>ee000,<span class=\"number\">0x00007ff3410ef</span>000)]</span><br><span class=\"line\">  <span class=\"number\">0x00007ff</span>3614b4000 JavaThread <span class=\"string\">\"Timer for 'phoenix' metrics system\"</span> daemon [_thread_blocked, id=<span class=\"number\">14032</span>, stack(<span class=\"number\">0x00007ff342df</span>a000,<span class=\"number\">0x00007ff342ef</span>b000)]</span><br><span class=\"line\">  <span class=\"number\">0x00007ff360f</span>c1000 JavaThread <span class=\"string\">\"main-EventThread\"</span> daemon [_thread_blocked, id=<span class=\"number\">14031</span>, stack(<span class=\"number\">0x00007ff3431f</span>c000,<span class=\"number\">0x00007ff3432fd</span>000)]</span><br><span class=\"line\">  <span class=\"number\">0x00007ff360faf</span>000 JavaThread <span class=\"string\">\"main-SendThread(cnzk2:2181)\"</span> daemon [_thread_in_native, id=<span class=\"number\">14030</span>, stack(<span class=\"number\">0x00007ff3432fd</span>000,<span class=\"number\">0x00007ff3433f</span>e000)]</span><br><span class=\"line\">  <span class=\"number\">0x00007ff</span>360471000 JavaThread <span class=\"string\">\"Thread-80\"</span> daemon [_thread_blocked, id=<span class=\"number\">14029</span>, stack(<span class=\"number\">0x00007ff3430f</span>b000,<span class=\"number\">0x00007ff3431f</span>c000)]</span><br><span class=\"line\">  <span class=\"number\">0x00007ff</span>3608a7000 JavaThread <span class=\"string\">\"IPC Parameter Sending Thread #0\"</span> daemon [_thread_blocked, id=<span class=\"number\">13178</span>, stack(<span class=\"number\">0x00007ff3437f</span>e000,<span class=\"number\">0x00007ff3438ff</span>000)]</span><br><span class=\"line\">  <span class=\"number\">0x00007ff</span>3608a4000 JavaThread <span class=\"string\">\"IPC Client (1508059488) connection to cnhm0/10.0.1.222:8032 from apps\"</span> daemon [_thread_blocked, id=<span class=\"number\">13177</span>, stack(<span class=\"number\">0x00007ff</span>348923000,<span class=\"number\">0x00007ff</span>348a24000)]</span><br><span class=\"line\">  <span class=\"number\">0x00007ff3600df</span>800 JavaThread <span class=\"string\">\"Service Thread\"</span> daemon [_thread_blocked, id=<span class=\"number\">13172</span>, stack(<span class=\"number\">0x00007ff</span>3498c5000,<span class=\"number\">0x00007ff</span>3499c6000)]</span><br><span class=\"line\">  <span class=\"number\">0x00007ff3600d</span>2000 JavaThread <span class=\"string\">\"C1 CompilerThread2\"</span> daemon [_thread_in_native, id=<span class=\"number\">13171</span>, stack(<span class=\"number\">0x00007ff</span>3499c6000,<span class=\"number\">0x00007ff</span>349ac7000)]</span><br><span class=\"line\">  <span class=\"number\">0x00007ff3600d</span>0000 JavaThread <span class=\"string\">\"C2 CompilerThread1\"</span> daemon [_thread_blocked, id=<span class=\"number\">13170</span>, stack(<span class=\"number\">0x00007ff</span>349ac7000,<span class=\"number\">0x00007ff</span>349bc8000)]</span><br><span class=\"line\">  <span class=\"number\">0x00007ff3600cd</span>000 JavaThread <span class=\"string\">\"C2 CompilerThread0\"</span> daemon [_thread_blocked, id=<span class=\"number\">13169</span>, stack(<span class=\"number\">0x00007ff</span>349bc8000,<span class=\"number\">0x00007ff</span>349cc9000)]</span><br><span class=\"line\">  <span class=\"number\">0x00007ff</span>3600cb000 JavaThread <span class=\"string\">\"JDWP Event Helper Thread\"</span> daemon [_thread_blocked, id=<span class=\"number\">13168</span>, stack(<span class=\"number\">0x00007ff</span>349cc9000,<span class=\"number\">0x00007ff349d</span>ca000)]</span><br><span class=\"line\">  <span class=\"number\">0x00007ff</span>3600c7000 JavaThread <span class=\"string\">\"JDWP Transport Listener: dt_socket\"</span> daemon [_thread_in_native, id=<span class=\"number\">13167</span>, stack(<span class=\"number\">0x00007ff349d</span>ca000,<span class=\"number\">0x00007ff</span>349ecb000)]</span><br><span class=\"line\">  <span class=\"number\">0x00007ff</span>3600b8000 JavaThread <span class=\"string\">\"Signal Dispatcher\"</span> daemon [_thread_blocked, id=<span class=\"number\">13166</span>, stack(<span class=\"number\">0x00007ff34a0cf</span>000,<span class=\"number\">0x00007ff34a1d</span>0000)]</span><br><span class=\"line\">  <span class=\"number\">0x00007ff</span>36008c000 JavaThread <span class=\"string\">\"Finalizer\"</span> daemon [_thread_blocked, id=<span class=\"number\">13165</span>, stack(<span class=\"number\">0x00007ff34a1d</span>0000,<span class=\"number\">0x00007ff34a2d</span>1000)]</span><br><span class=\"line\">  <span class=\"number\">0x00007ff</span>36008a000 JavaThread <span class=\"string\">\"Reference Handler\"</span> daemon [_thread_blocked, id=<span class=\"number\">13164</span>, stack(<span class=\"number\">0x00007ff34a2d</span>1000,<span class=\"number\">0x00007ff34a3d</span>2000)]</span><br><span class=\"line\">  <span class=\"number\">0x00007ff</span>360017000 JavaThread <span class=\"string\">\"main\"</span> [_thread_blocked, id=<span class=\"number\">13158</span>, stack(<span class=\"number\">0x00007ff</span>369c7a000,<span class=\"number\">0x00007ff369d</span>7b000)]</span><br><span class=\"line\"></span><br><span class=\"line\">Other Threads:</span><br><span class=\"line\">  <span class=\"number\">0x00007ff</span>360085000 VMThread [stack: <span class=\"number\">0x00007ff34a3d</span>2000,<span class=\"number\">0x00007ff34a4d</span>3000] [id=<span class=\"number\">13163</span>]</span><br><span class=\"line\">  <span class=\"number\">0x00007ff</span>3600e2000 WatcherThread [stack: <span class=\"number\">0x00007ff</span>3497c4000,<span class=\"number\">0x00007ff</span>3498c5000] [id=<span class=\"number\">13173</span>]</span><br></pre></td></tr></table></figure><br>这一部分是crash时Java代码中所有线程的状况。分析类似上一部分。<br><figure class=\"highlight livecodeserver\"><table><tr><td class=\"code\"><pre><span class=\"line\">VM state:<span class=\"keyword\">not</span> <span class=\"keyword\">at</span> safepoint (<span class=\"keyword\">normal</span> execution)</span><br><span class=\"line\">VM Mutex/Monitor currently owned <span class=\"keyword\">by</span> <span class=\"keyword\">a</span> thread: None</span><br></pre></td></tr></table></figure><br><strong>VM状态</strong>：</p>\n<table>\n<thead>\n<tr>\n<th>状态</th>\n<th style=\"text-align:center\">描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>not at a safepoint</td>\n<td style=\"text-align:center\">正常执行</td>\n</tr>\n<tr>\n<td>at safepoint</td>\n<td style=\"text-align:center\">所有VM内的线程被block住，在等待某一个VM操作完成</td>\n</tr>\n<tr>\n<td>synchronizing</td>\n<td style=\"text-align:center\">一个特殊VM操作需要执行，VM在等待所有线程block</td>\n</tr>\n</tbody>\n</table>\n<figure class=\"highlight x86asm\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"symbol\">Heap:</span></span><br><span class=\"line\"> PSYoungGen  total 39424K, used 31166K [<span class=\"number\">0x0000000771a00000</span>, <span class=\"number\">0x0000000774780000</span>, <span class=\"number\">0x00000007c0000000</span>)</span><br><span class=\"line\">  eden space 38912K, <span class=\"number\">79</span>% used [<span class=\"number\">0x0000000771a00000</span>,<span class=\"number\">0x000000077384faf0</span>,<span class=\"number\">0x0000000774000000</span>)</span><br><span class=\"line\">  from space 512K, <span class=\"number\">25</span>% used [<span class=\"number\">0x0000000774680000</span>,<span class=\"number\">0x00000007746a0000</span>,<span class=\"number\">0x0000000774700000</span>)</span><br><span class=\"line\">  to   space 512K, <span class=\"number\">0</span>% used [<span class=\"number\">0x0000000774700000</span>,<span class=\"number\">0x0000000774700000</span>,<span class=\"number\">0x0000000774780000</span>)</span><br><span class=\"line\"> ParOldGen   total 124928K, used 67043K [<span class=\"number\">0x00000006d4e00000</span>, <span class=\"number\">0x00000006dc800000</span>, <span class=\"number\">0x0000000771a00000</span>)</span><br><span class=\"line\">  object space 124928K, <span class=\"number\">53</span>% used [<span class=\"number\">0x00000006d4e00000</span>,<span class=\"number\">0x00000006d8f78d18</span>,<span class=\"number\">0x00000006dc800000</span>)</span><br><span class=\"line\"> Metaspace   used 54122K, capacity 54748K, committed 54912K, reserved 1097728K</span><br><span class=\"line\">  class spaceused 6562K, capacity 6716K, committed 6784K, reserved 1048576K</span><br><span class=\"line\"></span><br><span class=\"line\">Card table byte_map: [<span class=\"number\">0x00007ff3664db000</span>,<span class=\"number\">0x00007ff366c35000</span>] byte_map_base: <span class=\"number\">0x00007ff362e34000</span></span><br><span class=\"line\"></span><br><span class=\"line\">Marking <span class=\"meta\">Bits</span>: (ParMarkBitMap*) <span class=\"number\">0x00007ff3691426c0</span></span><br><span class=\"line\"> Begin <span class=\"meta\">Bits</span>: [<span class=\"number\">0x00007ff324a70000</span>, <span class=\"number\">0x00007ff328538000</span>)</span><br><span class=\"line\"> End <span class=\"meta\">Bits</span>:   [<span class=\"number\">0x00007ff328538000</span>, <span class=\"number\">0x00007ff32c000000</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">Polling page: <span class=\"number\">0x00007ff369d84000</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"symbol\">CodeCache:</span> size=245760Kb used=17958Kb max_used=18385Kb free=227801Kb</span><br><span class=\"line\"> bounds [<span class=\"number\">0x00007ff34aad9000</span>, <span class=\"number\">0x00007ff34bd29000</span>, <span class=\"number\">0x00007ff359ad9000</span>]</span><br><span class=\"line\"> total_blobs=<span class=\"number\">6019</span> nmethods=<span class=\"number\">5425</span> adapters=<span class=\"number\">516</span></span><br><span class=\"line\"><span class=\"symbol\"> compilation:</span> enabled</span><br></pre></td></tr></table></figure>\n<ul>\n<li>Card Table是jvm维护的一种数据结构，用于记录更改对象时的引用，方便GC。</li>\n<li>CodeCache是用来保存本地代码的，不属于PermGen。</li>\n</ul>\n<figure class=\"highlight matlab\"><table><tr><td class=\"code\"><pre><span class=\"line\">Compilation <span class=\"keyword\">events</span> (<span class=\"number\">10</span> <span class=\"keyword\">events</span>):</span><br><span class=\"line\">GC Heap History (<span class=\"number\">10</span> <span class=\"keyword\">events</span>):</span><br><span class=\"line\">Deoptimization <span class=\"keyword\">events</span> (<span class=\"number\">10</span> <span class=\"keyword\">events</span>):</span><br><span class=\"line\">Internal exceptions (<span class=\"number\">10</span> <span class=\"keyword\">events</span>):</span><br><span class=\"line\">Events (<span class=\"number\">10</span> <span class=\"keyword\">events</span>):</span><br><span class=\"line\">Dynamic libraries:</span><br></pre></td></tr></table></figure>\n<p>这些都是表示crash时jvm最近的一些操作。举个例子说明：<br><figure class=\"highlight routeros\"><table><tr><td class=\"code\"><pre><span class=\"line\">Events (10 events):</span><br><span class=\"line\">Event: 2603309.010 Thread 0x00007ff2c800c000 DEOPT UNPACKING <span class=\"attribute\">pc</span>=0x00007ff34aaddf69 <span class=\"attribute\">sp</span>=0x00007ff3409e88a8 mode 2</span><br><span class=\"line\">Event: 2603310.108 Thread 0x00007ff362229000 DEOPT PACKING <span class=\"attribute\">pc</span>=0x00007ff34b25ce6c <span class=\"attribute\">sp</span>=0x00007ff340ceb660</span><br><span class=\"line\">Event: 2603310.122 Thread 0x00007ff2c8009800 Uncommon trap: <span class=\"attribute\">trap_request</span>=0xffffff65 fr.<span class=\"attribute\">pc</span>=0x00007ff34b890e40</span><br><span class=\"line\">Event: 2603310.124 Thread 0x00007ff2c8009800 DEOPT PACKING <span class=\"attribute\">pc</span>=0x00007ff34b890e40 <span class=\"attribute\">sp</span>=0x00007ff3408e7790</span><br><span class=\"line\">Event: 2603310.124 Thread 0x00007ff2c8009800 DEOPT UNPACKING <span class=\"attribute\">pc</span>=0x00007ff34aaddf69 <span class=\"attribute\">sp</span>=0x00007ff3408e7680 mode 2</span><br><span class=\"line\">Event: 2603310.125 Thread 0x00007ff2c8009800 Uncommon trap: <span class=\"attribute\">trap_request</span>=0xffffff65 fr.<span class=\"attribute\">pc</span>=0x00007ff34b850fe4</span><br><span class=\"line\">Event: 2603310.125 Thread 0x00007ff2c8009800 DEOPT PACKING <span class=\"attribute\">pc</span>=0x00007ff34b850fe4 <span class=\"attribute\">sp</span>=0x00007ff3408e7560</span><br><span class=\"line\">Event: 2603310.125 Thread 0x00007ff2c8009800 DEOPT UNPACKING <span class=\"attribute\">pc</span>=0x00007ff34aaddf69 <span class=\"attribute\">sp</span>=0x00007ff3408e72d8 mode 2</span><br><span class=\"line\">Event: 2603310.126 Thread 0x00007ff362229000 DEOPT UNPACKING <span class=\"attribute\">pc</span>=0x00007ff34aaddf69 <span class=\"attribute\">sp</span>=0x00007ff340ceb628 mode 2</span><br><span class=\"line\">Event: 2603310.935 Thread 0x00007ff2d8001000 Thread added: 0x00007ff2d8001000</span><br></pre></td></tr></table></figure></p>\n<p>上述是最近10个runtime VM的事件，拿第一条举例，2603309.010是从VM启动后的时长，单位是秒，pc是program counter，sp是stack pointer。关于 DEOPT、Uncommon trap等的解释可以看这个<a href=\"https://stackoverflow.com/questions/49716694/what-are-events-in-hs-err-pid-log/49716888#49716888\" target=\"_blank\" rel=\"noopener\">issue</a>，大概就是编译的时候，编译器做了一些优化，但是在runtime时发现这个优化没有用，所以叫去优化（deoptimization）。<br><figure class=\"highlight makefile\"><table><tr><td class=\"code\"><pre><span class=\"line\">---------------  S Y S T E M  ---------------</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"section\">OS:Amazon Linux AMI release 2016.03</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"section\">uname:Linux 4.4.11-23.53.amzn1.x86_64 #1 SMP Wed Jun 1 22:22:50 UTC 2016 x86_64</span></span><br><span class=\"line\"><span class=\"section\">libc:glibc 2.17 NPTL 2.17</span></span><br><span class=\"line\"><span class=\"section\">rlimit: STACK 8192k, CORE 0k, NPROC 65536, NOFILE 65536, AS infinity</span></span><br><span class=\"line\">load average:10.84 2.76 1.17</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"section\">/proc/meminfo:</span></span><br><span class=\"line\"><span class=\"section\">MemTotal:   15403948 kB</span></span><br><span class=\"line\"><span class=\"section\">MemFree: 2637700 kB</span></span><br><span class=\"line\"><span class=\"section\">MemAvailable:2571132 kB</span></span><br><span class=\"line\"><span class=\"section\">Buffers: 304 kB</span></span><br><span class=\"line\"><span class=\"section\">Cached:13784 kB</span></span><br><span class=\"line\"><span class=\"section\">SwapCached:0 kB</span></span><br><span class=\"line\"><span class=\"section\">Active: 12625320 kB</span></span><br><span class=\"line\"><span class=\"section\">Inactive:   7684 kB</span></span><br><span class=\"line\"><span class=\"section\">Active(anon):   12619252 kB</span></span><br><span class=\"line\"><span class=\"section\">Inactive(anon):  336 kB</span></span><br><span class=\"line\"><span class=\"section\">Active(file):   6068 kB</span></span><br><span class=\"line\"><span class=\"section\">Inactive(file): 7348 kB</span></span><br><span class=\"line\"><span class=\"section\">Unevictable:   0 kB</span></span><br><span class=\"line\"><span class=\"section\">Mlocked:   0 kB</span></span><br><span class=\"line\"><span class=\"section\">SwapTotal: 0 kB</span></span><br><span class=\"line\"><span class=\"section\">SwapFree:  0 kB</span></span><br><span class=\"line\"><span class=\"section\">Dirty:16 kB</span></span><br><span class=\"line\"><span class=\"section\">Writeback:56 kB</span></span><br><span class=\"line\"><span class=\"section\">AnonPages:  12606968 kB</span></span><br><span class=\"line\"><span class=\"section\">Mapped:10896 kB</span></span><br><span class=\"line\"><span class=\"section\">Shmem:   356 kB</span></span><br><span class=\"line\"><span class=\"section\">Slab:  46004 kB</span></span><br><span class=\"line\"><span class=\"section\">SReclaimable:  22384 kB</span></span><br><span class=\"line\"><span class=\"section\">SUnreclaim:23620 kB</span></span><br><span class=\"line\"><span class=\"section\">KernelStack:9856 kB</span></span><br><span class=\"line\"><span class=\"section\">PageTables:38084 kB</span></span><br><span class=\"line\"><span class=\"section\">NFS_Unstable:  0 kB</span></span><br><span class=\"line\"><span class=\"section\">Bounce:0 kB</span></span><br><span class=\"line\"><span class=\"section\">WritebackTmp:  0 kB</span></span><br><span class=\"line\"><span class=\"section\">CommitLimit: 7701972 kB</span></span><br><span class=\"line\"><span class=\"section\">Committed_AS:   18337652 kB</span></span><br><span class=\"line\"><span class=\"section\">VmallocTotal:   34359738367 kB</span></span><br><span class=\"line\"><span class=\"section\">VmallocUsed:   0 kB</span></span><br><span class=\"line\"><span class=\"section\">VmallocChunk:  0 kB</span></span><br><span class=\"line\"><span class=\"section\">AnonHugePages: 0 kB</span></span><br><span class=\"line\"><span class=\"section\">HugePages_Total:   0</span></span><br><span class=\"line\"><span class=\"section\">HugePages_Free:0</span></span><br><span class=\"line\"><span class=\"section\">HugePages_Rsvd:0</span></span><br><span class=\"line\"><span class=\"section\">HugePages_Surp:0</span></span><br><span class=\"line\"><span class=\"section\">Hugepagesize:   2048 kB</span></span><br><span class=\"line\"><span class=\"section\">DirectMap4k:   12288 kB</span></span><br><span class=\"line\"><span class=\"section\">DirectMap2M:15716352 kB</span></span><br></pre></td></tr></table></figure><br>系统内存情况：</p>\n<table>\n<thead>\n<tr>\n<th>名词</th>\n<th style=\"text-align:center\">描述</th>\n<th style=\"text-align:center\">名词</th>\n<th style=\"text-align:center\">描述</th>\n<th style=\"text-align:center\">名词</th>\n<th style=\"text-align:left\">描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>MemToal</td>\n<td style=\"text-align:center\">总内存</td>\n<td style=\"text-align:center\">MemFree</td>\n<td style=\"text-align:center\">未使用内存</td>\n<td style=\"text-align:center\">MemAvailable</td>\n<td style=\"text-align:left\">可用内存</td>\n</tr>\n<tr>\n<td>Buffers</td>\n<td style=\"text-align:center\">文件读写Buffer</td>\n<td style=\"text-align:center\">Cached</td>\n<td style=\"text-align:center\">缓存</td>\n<td style=\"text-align:center\">SwapCached</td>\n<td style=\"text-align:left\">缓存的交换空间</td>\n</tr>\n<tr>\n<td>Active</td>\n<td style=\"text-align:center\">最近被申请过的空间</td>\n<td style=\"text-align:center\">Inactive</td>\n<td style=\"text-align:center\">最近未被申请过的空间</td>\n<td style=\"text-align:center\">Active(anon)</td>\n<td style=\"text-align:left\">..</td>\n</tr>\n<tr>\n<td>Inactive(anon)</td>\n<td style=\"text-align:center\">..</td>\n<td style=\"text-align:center\">Active(file)</td>\n<td style=\"text-align:center\">..</td>\n<td style=\"text-align:center\">Inactive(file)</td>\n<td style=\"text-align:left\">..</td>\n</tr>\n<tr>\n<td>Unevictable</td>\n<td style=\"text-align:center\">..</td>\n<td style=\"text-align:center\">Unevictable</td>\n<td style=\"text-align:center\">..</td>\n<td style=\"text-align:center\">Mlocked</td>\n<td style=\"text-align:left\">..</td>\n</tr>\n<tr>\n<td>SwapTotal</td>\n<td style=\"text-align:center\">可用交换空间</td>\n<td style=\"text-align:center\">SwapFree</td>\n<td style=\"text-align:center\">可用交换空间</td>\n<td style=\"text-align:center\">Dirty</td>\n<td style=\"text-align:left\">等待写入磁盘的空间</td>\n</tr>\n<tr>\n<td>Writeback</td>\n<td style=\"text-align:center\">正在被写入磁盘的空间</td>\n<td style=\"text-align:center\">AnonPages</td>\n<td style=\"text-align:center\">..</td>\n<td style=\"text-align:center\">Mapped</td>\n<td style=\"text-align:left\">..</td>\n</tr>\n<tr>\n<td>Shmem</td>\n<td style=\"text-align:center\">..</td>\n<td style=\"text-align:center\">Slab</td>\n<td style=\"text-align:center\">kernel使用</td>\n<td style=\"text-align:center\">Sreclaimable</td>\n<td style=\"text-align:left\">..</td>\n</tr>\n<tr>\n<td>SUnreclaim</td>\n<td style=\"text-align:center\">..</td>\n<td style=\"text-align:center\">KernelStack</td>\n<td style=\"text-align:center\">..</td>\n<td style=\"text-align:center\">PageTables</td>\n<td style=\"text-align:left\">内存页映射表空间</td>\n</tr>\n<tr>\n<td>NFS_Unstable</td>\n<td style=\"text-align:center\">..</td>\n<td style=\"text-align:center\">Bounce</td>\n<td style=\"text-align:center\">..</td>\n<td style=\"text-align:center\">WritebackTmp</td>\n<td style=\"text-align:left\">..</td>\n</tr>\n<tr>\n<td>CommitLimit</td>\n<td style=\"text-align:center\">..</td>\n<td style=\"text-align:center\">Committed_AS</td>\n<td style=\"text-align:center\">完成workload最坏情况的内存使用情况</td>\n<td style=\"text-align:center\">VmallocTotal</td>\n<td style=\"text-align:left\">..</td>\n</tr>\n<tr>\n<td>VmallocUsed</td>\n<td style=\"text-align:center\">虚拟空间可映射的大小</td>\n<td style=\"text-align:center\">VmallocUsed</td>\n<td style=\"text-align:center\">已使用的虚拟空间映射大小</td>\n<td style=\"text-align:center\">VmallocChunk</td>\n<td style=\"text-align:left\">虚拟空间最大的虚拟空间块</td>\n</tr>\n<tr>\n<td>AnonHugePages</td>\n<td style=\"text-align:center\">..</td>\n<td style=\"text-align:center\">HugePages_Total</td>\n<td style=\"text-align:center\">..</td>\n<td style=\"text-align:center\">HugePages_Free</td>\n<td style=\"text-align:left\">..</td>\n</tr>\n<tr>\n<td>HugePages_Rsvd</td>\n<td style=\"text-align:center\">..</td>\n<td style=\"text-align:center\">HugePages_Surp</td>\n<td style=\"text-align:center\">..</td>\n<td style=\"text-align:center\">Hugepagesize</td>\n<td style=\"text-align:left\">..</td>\n</tr>\n<tr>\n<td>DirectMap4k</td>\n<td style=\"text-align:center\">..</td>\n<td style=\"text-align:center\">DirectMap2M</td>\n<td style=\"text-align:center\">..</td>\n</tr>\n</tbody>\n</table>\n","site":{"data":{}},"excerpt":"","more":"<figure class=\"highlight shell\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> There is insufficient memory <span class=\"keyword\">for</span> the Java Runtime Environment to <span class=\"built_in\">continue</span>.</span></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> Native memory allocation (mmap) failed to map 12288 bytes <span class=\"keyword\">for</span> committing reserved memory.</span></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> Possible reasons:</span></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">   The system is out of physical RAM or swap space</span></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">   In 32 bit mode, the process size <span class=\"built_in\">limit</span> was hit</span></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> Possible solutions:</span></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">   Reduce memory load on the system</span></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">   Increase physical memory or swap space</span></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">   Check <span class=\"keyword\">if</span> swap backing store is full</span></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">   Use 64 bit Java on a 64 bit OS</span></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">   Decrease Java heap size (-Xmx/-Xms)</span></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">   Decrease number of Java threads</span></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">   Decrease Java thread stack sizes (-Xss)</span></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">   Set larger code cache with -XX:ReservedCodeCacheSize=</span></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> This output file may be truncated or incomplete.</span></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"></span></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">  Out of Memory Error (os_linux.cpp:2673), pid=13016, tid=140682742126336</span></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"></span></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> JRE version: Java(TM) SE Runtime Environment (8.0_40-b25) (build 1.8.0_40-b25)</span></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> Java VM: Java HotSpot(TM) 64-Bit Server VM (25.40-b25 mixed mode linux-amd64 compressed oops)</span></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> Failed to write core dump. Core dumps have been disabled. To <span class=\"built_in\">enable</span> core dumping, try <span class=\"string\">\"ulimit -c unlimited\"</span> before starting Java again</span></span><br></pre></td></tr></table></figure>\n<p>第一部分主要是程序crash的原因以及相关的solution。<br><figure class=\"highlight x86asm\"><table><tr><td class=\"code\"><pre><span class=\"line\">Current thread (<span class=\"number\">0x00007ff2d8001000</span>):  JavaThread <span class=\"string\">\"flink-akka.remote.default-remote-dispatcher-15\"</span> daemon [_thread_new, id=<span class=\"number\">31925</span>, stack(<span class=\"number\">0x00007ff340ced000</span>,<span class=\"number\">0x00007ff340dee000</span>)]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"symbol\">Stack:</span> [<span class=\"number\">0x00007ff340ced000</span>,<span class=\"number\">0x00007ff340dee000</span>],  <span class=\"built_in\">sp</span>=<span class=\"number\">0x00007ff340dec9a0</span>,  free space=1022k</span><br><span class=\"line\">Native frames: (J=compiled Java code, j=interpreted, Vv=VM code, C=native code)</span><br><span class=\"line\">V  [libjvm.so+<span class=\"number\">0xaaca9a</span>]  VMError::report_and_die()+<span class=\"number\">0x2ba</span></span><br><span class=\"line\">V  [libjvm.so+<span class=\"number\">0x4f333b</span>]  report_vm_out_of_memory(char const*, <span class=\"keyword\">int</span>, unsigned long, VMErrorType, char const*)+<span class=\"number\">0x8b</span></span><br><span class=\"line\">V  [libjvm.so+<span class=\"number\">0x90e8c3</span>]  os::Linux::commit_memory_impl(char*, unsigned long, bool)+<span class=\"number\">0x103</span></span><br><span class=\"line\">V  [libjvm.so+<span class=\"number\">0x90e98c</span>]  os::pd_commit_memory(char*, unsigned long, bool)+<span class=\"number\">0xc</span></span><br><span class=\"line\">V  [libjvm.so+<span class=\"number\">0x90772a</span>]  os::commit_memory(char*, unsigned long, bool)+<span class=\"number\">0x2a</span></span><br><span class=\"line\">V  [libjvm.so+<span class=\"number\">0x90c97f</span>]  os::pd_create_stack_guard_pages(char*, unsigned long)+<span class=\"number\">0x7f</span></span><br><span class=\"line\">V  [libjvm.so+<span class=\"number\">0xa52b4e</span>]  JavaThread::create_stack_guard_pages()+<span class=\"number\">0x5e</span></span><br><span class=\"line\">V  [libjvm.so+<span class=\"number\">0xa5c9b4</span>]  JavaThread::run()+<span class=\"number\">0x34</span></span><br><span class=\"line\">V  [libjvm.so+<span class=\"number\">0x910ee8</span>]  java_start(Thread*)+<span class=\"number\">0x108</span></span><br><span class=\"line\">C  [libpthread.so<span class=\"meta\">.0</span>+<span class=\"number\">0x7dc5</span>]  start_thread+<span class=\"number\">0xc5</span></span><br></pre></td></tr></table></figure><br>Current Thread表示crash时程序所处的线程。<br><strong>线程类别</strong>: JavaThread，共有以下几种</p>\n<ul>\n<li>JavaThread</li>\n<li>VMThread（负责VM内的一些操作，包括GC）</li>\n<li>CompilerThread</li>\n<li>GCTaskThread</li>\n<li>WatcherThread</li>\n<li>ConcurrentMarkSweepThread</li>\n</ul>\n<p><strong>线程状态</strong>：_thread_new</p>\n<table>\n<thead>\n<tr>\n<th>线程状态</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td> _thread_uninitialized</td>\n<td>线程未被创建</td>\n</tr>\n<tr>\n<td> _thread_new</td>\n<td>线程创建但并未执行</td>\n</tr>\n<tr>\n<td> _thread_in_native</td>\n<td>线程正在运行native code</td>\n</tr>\n<tr>\n<td> _thread_in_vm</td>\n<td>执行VM的code</td>\n</tr>\n<tr>\n<td> _thread_in_java</td>\n<td>执行java的code</td>\n</tr>\n<tr>\n<td> _thread_blocked</td>\n<td>被block住的线程</td>\n</tr>\n</tbody>\n</table>\n<p><strong>原生堆栈信息（Native frames）</strong>: 主要是一些jvm动态库的对战信息，是分析crash中比较重要的一个部分。<br><figure class=\"highlight go\"><table><tr><td class=\"code\"><pre><span class=\"line\">Java Threads: ( =&gt; current thread )</span><br><span class=\"line\">=&gt;<span class=\"number\">0x00007ff2d</span>8001000 JavaThread <span class=\"string\">\"flink-akka.remote.default-remote-dispatcher-15\"</span> daemon [_thread_new, id=<span class=\"number\">31925</span>, stack(<span class=\"number\">0x00007ff340ced</span>000,<span class=\"number\">0x00007ff340d</span>ee000)]</span><br><span class=\"line\">  <span class=\"number\">0x00007ff</span>2ec053800 JavaThread <span class=\"string\">\"Hashed wheel timer #1\"</span> daemon [_thread_blocked, id=<span class=\"number\">14219</span>, stack(<span class=\"number\">0x00007ff33bdf</span>e000,<span class=\"number\">0x00007ff33beff</span>000)]</span><br><span class=\"line\">  <span class=\"number\">0x00007ff2d</span>c130800 JavaThread <span class=\"string\">\"New I/O server boss #6\"</span> daemon [_thread_in_native, id=<span class=\"number\">14218</span>, stack(<span class=\"number\">0x00007ff33beff</span>000,<span class=\"number\">0x00007ff</span>33c000000)]</span><br><span class=\"line\">  <span class=\"number\">0x00007ff2d</span>c119800 JavaThread <span class=\"string\">\"New I/O worker #5\"</span> daemon [_thread_in_native, id=<span class=\"number\">14217</span>, stack(<span class=\"number\">0x00007ff</span>3400e3000,<span class=\"number\">0x00007ff</span>3401e4000)]</span><br><span class=\"line\">  <span class=\"number\">0x00007ff2d</span>c0b6000 JavaThread <span class=\"string\">\"New I/O worker #4\"</span> daemon [_thread_in_native, id=<span class=\"number\">14216</span>, stack(<span class=\"number\">0x00007ff</span>3401e4000,<span class=\"number\">0x00007ff</span>3402e5000)]</span><br><span class=\"line\">  <span class=\"number\">0x00007ff2d</span>c0bb800 JavaThread <span class=\"string\">\"New I/O boss #3\"</span> daemon [_thread_in_native, id=<span class=\"number\">14215</span>, stack(<span class=\"number\">0x00007ff</span>3402e5000,<span class=\"number\">0x00007ff</span>3403e6000)]</span><br><span class=\"line\">  <span class=\"number\">0x00007ff2d</span>c05c000 JavaThread <span class=\"string\">\"New I/O worker #2\"</span> daemon [_thread_in_native, id=<span class=\"number\">14214</span>, stack(<span class=\"number\">0x00007ff</span>3403e6000,<span class=\"number\">0x00007ff</span>3404e7000)]</span><br><span class=\"line\">  <span class=\"number\">0x00007ff2d</span>c052000 JavaThread <span class=\"string\">\"New I/O worker #1\"</span> daemon [_thread_in_native, id=<span class=\"number\">14213</span>, stack(<span class=\"number\">0x00007ff</span>3404e7000,<span class=\"number\">0x00007ff</span>3405e8000)]</span><br><span class=\"line\">  <span class=\"number\">0x00007ff</span>2c8009800 JavaThread <span class=\"string\">\"flink-akka.remote.default-remote-dispatcher-7\"</span> daemon [_thread_in_vm, id=<span class=\"number\">14206</span>, stack(<span class=\"number\">0x00007ff</span>3407e8000,<span class=\"number\">0x00007ff</span>3408e9000)]</span><br><span class=\"line\">  <span class=\"number\">0x00007ff</span>2c800c000 JavaThread <span class=\"string\">\"flink-akka.remote.default-remote-dispatcher-6\"</span> daemon [_thread_in_native, id=<span class=\"number\">14202</span>, stack(<span class=\"number\">0x00007ff</span>3408e9000,<span class=\"number\">0x00007ff</span>3409ea000)]</span><br><span class=\"line\">  <span class=\"number\">0x00007ff</span>2cc020000 JavaThread <span class=\"string\">\"flink-akka.actor.default-dispatcher-5\"</span> daemon [_thread_blocked, id=<span class=\"number\">14147</span>, stack(<span class=\"number\">0x00007ff</span>3409ea000,<span class=\"number\">0x00007ff</span>340aeb000)]</span><br><span class=\"line\">  <span class=\"number\">0x00007ff</span>36222a800 JavaThread <span class=\"string\">\"flink-akka.actor.default-dispatcher-4\"</span> daemon [_thread_blocked, id=<span class=\"number\">14136</span>, stack(<span class=\"number\">0x00007ff</span>340aeb000,<span class=\"number\">0x00007ff</span>340bec000)]</span><br><span class=\"line\">  <span class=\"number\">0x00007ff</span>362229000 JavaThread <span class=\"string\">\"flink-akka.actor.default-dispatcher-3\"</span> daemon [_thread_blocked, id=<span class=\"number\">14135</span>, stack(<span class=\"number\">0x00007ff</span>340bec000,<span class=\"number\">0x00007ff340ced</span>000)]</span><br><span class=\"line\">  <span class=\"number\">0x00007ff</span>362183000 JavaThread <span class=\"string\">\"flink-scheduler-1\"</span> daemon [_thread_blocked, id=<span class=\"number\">14044</span>, stack(<span class=\"number\">0x00007ff340f</span>ee000,<span class=\"number\">0x00007ff3410ef</span>000)]</span><br><span class=\"line\">  <span class=\"number\">0x00007ff</span>3614b4000 JavaThread <span class=\"string\">\"Timer for 'phoenix' metrics system\"</span> daemon [_thread_blocked, id=<span class=\"number\">14032</span>, stack(<span class=\"number\">0x00007ff342df</span>a000,<span class=\"number\">0x00007ff342ef</span>b000)]</span><br><span class=\"line\">  <span class=\"number\">0x00007ff360f</span>c1000 JavaThread <span class=\"string\">\"main-EventThread\"</span> daemon [_thread_blocked, id=<span class=\"number\">14031</span>, stack(<span class=\"number\">0x00007ff3431f</span>c000,<span class=\"number\">0x00007ff3432fd</span>000)]</span><br><span class=\"line\">  <span class=\"number\">0x00007ff360faf</span>000 JavaThread <span class=\"string\">\"main-SendThread(cnzk2:2181)\"</span> daemon [_thread_in_native, id=<span class=\"number\">14030</span>, stack(<span class=\"number\">0x00007ff3432fd</span>000,<span class=\"number\">0x00007ff3433f</span>e000)]</span><br><span class=\"line\">  <span class=\"number\">0x00007ff</span>360471000 JavaThread <span class=\"string\">\"Thread-80\"</span> daemon [_thread_blocked, id=<span class=\"number\">14029</span>, stack(<span class=\"number\">0x00007ff3430f</span>b000,<span class=\"number\">0x00007ff3431f</span>c000)]</span><br><span class=\"line\">  <span class=\"number\">0x00007ff</span>3608a7000 JavaThread <span class=\"string\">\"IPC Parameter Sending Thread #0\"</span> daemon [_thread_blocked, id=<span class=\"number\">13178</span>, stack(<span class=\"number\">0x00007ff3437f</span>e000,<span class=\"number\">0x00007ff3438ff</span>000)]</span><br><span class=\"line\">  <span class=\"number\">0x00007ff</span>3608a4000 JavaThread <span class=\"string\">\"IPC Client (1508059488) connection to cnhm0/10.0.1.222:8032 from apps\"</span> daemon [_thread_blocked, id=<span class=\"number\">13177</span>, stack(<span class=\"number\">0x00007ff</span>348923000,<span class=\"number\">0x00007ff</span>348a24000)]</span><br><span class=\"line\">  <span class=\"number\">0x00007ff3600df</span>800 JavaThread <span class=\"string\">\"Service Thread\"</span> daemon [_thread_blocked, id=<span class=\"number\">13172</span>, stack(<span class=\"number\">0x00007ff</span>3498c5000,<span class=\"number\">0x00007ff</span>3499c6000)]</span><br><span class=\"line\">  <span class=\"number\">0x00007ff3600d</span>2000 JavaThread <span class=\"string\">\"C1 CompilerThread2\"</span> daemon [_thread_in_native, id=<span class=\"number\">13171</span>, stack(<span class=\"number\">0x00007ff</span>3499c6000,<span class=\"number\">0x00007ff</span>349ac7000)]</span><br><span class=\"line\">  <span class=\"number\">0x00007ff3600d</span>0000 JavaThread <span class=\"string\">\"C2 CompilerThread1\"</span> daemon [_thread_blocked, id=<span class=\"number\">13170</span>, stack(<span class=\"number\">0x00007ff</span>349ac7000,<span class=\"number\">0x00007ff</span>349bc8000)]</span><br><span class=\"line\">  <span class=\"number\">0x00007ff3600cd</span>000 JavaThread <span class=\"string\">\"C2 CompilerThread0\"</span> daemon [_thread_blocked, id=<span class=\"number\">13169</span>, stack(<span class=\"number\">0x00007ff</span>349bc8000,<span class=\"number\">0x00007ff</span>349cc9000)]</span><br><span class=\"line\">  <span class=\"number\">0x00007ff</span>3600cb000 JavaThread <span class=\"string\">\"JDWP Event Helper Thread\"</span> daemon [_thread_blocked, id=<span class=\"number\">13168</span>, stack(<span class=\"number\">0x00007ff</span>349cc9000,<span class=\"number\">0x00007ff349d</span>ca000)]</span><br><span class=\"line\">  <span class=\"number\">0x00007ff</span>3600c7000 JavaThread <span class=\"string\">\"JDWP Transport Listener: dt_socket\"</span> daemon [_thread_in_native, id=<span class=\"number\">13167</span>, stack(<span class=\"number\">0x00007ff349d</span>ca000,<span class=\"number\">0x00007ff</span>349ecb000)]</span><br><span class=\"line\">  <span class=\"number\">0x00007ff</span>3600b8000 JavaThread <span class=\"string\">\"Signal Dispatcher\"</span> daemon [_thread_blocked, id=<span class=\"number\">13166</span>, stack(<span class=\"number\">0x00007ff34a0cf</span>000,<span class=\"number\">0x00007ff34a1d</span>0000)]</span><br><span class=\"line\">  <span class=\"number\">0x00007ff</span>36008c000 JavaThread <span class=\"string\">\"Finalizer\"</span> daemon [_thread_blocked, id=<span class=\"number\">13165</span>, stack(<span class=\"number\">0x00007ff34a1d</span>0000,<span class=\"number\">0x00007ff34a2d</span>1000)]</span><br><span class=\"line\">  <span class=\"number\">0x00007ff</span>36008a000 JavaThread <span class=\"string\">\"Reference Handler\"</span> daemon [_thread_blocked, id=<span class=\"number\">13164</span>, stack(<span class=\"number\">0x00007ff34a2d</span>1000,<span class=\"number\">0x00007ff34a3d</span>2000)]</span><br><span class=\"line\">  <span class=\"number\">0x00007ff</span>360017000 JavaThread <span class=\"string\">\"main\"</span> [_thread_blocked, id=<span class=\"number\">13158</span>, stack(<span class=\"number\">0x00007ff</span>369c7a000,<span class=\"number\">0x00007ff369d</span>7b000)]</span><br><span class=\"line\"></span><br><span class=\"line\">Other Threads:</span><br><span class=\"line\">  <span class=\"number\">0x00007ff</span>360085000 VMThread [stack: <span class=\"number\">0x00007ff34a3d</span>2000,<span class=\"number\">0x00007ff34a4d</span>3000] [id=<span class=\"number\">13163</span>]</span><br><span class=\"line\">  <span class=\"number\">0x00007ff</span>3600e2000 WatcherThread [stack: <span class=\"number\">0x00007ff</span>3497c4000,<span class=\"number\">0x00007ff</span>3498c5000] [id=<span class=\"number\">13173</span>]</span><br></pre></td></tr></table></figure><br>这一部分是crash时Java代码中所有线程的状况。分析类似上一部分。<br><figure class=\"highlight livecodeserver\"><table><tr><td class=\"code\"><pre><span class=\"line\">VM state:<span class=\"keyword\">not</span> <span class=\"keyword\">at</span> safepoint (<span class=\"keyword\">normal</span> execution)</span><br><span class=\"line\">VM Mutex/Monitor currently owned <span class=\"keyword\">by</span> <span class=\"keyword\">a</span> thread: None</span><br></pre></td></tr></table></figure><br><strong>VM状态</strong>：</p>\n<table>\n<thead>\n<tr>\n<th>状态</th>\n<th style=\"text-align:center\">描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>not at a safepoint</td>\n<td style=\"text-align:center\">正常执行</td>\n</tr>\n<tr>\n<td>at safepoint</td>\n<td style=\"text-align:center\">所有VM内的线程被block住，在等待某一个VM操作完成</td>\n</tr>\n<tr>\n<td>synchronizing</td>\n<td style=\"text-align:center\">一个特殊VM操作需要执行，VM在等待所有线程block</td>\n</tr>\n</tbody>\n</table>\n<figure class=\"highlight x86asm\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"symbol\">Heap:</span></span><br><span class=\"line\"> PSYoungGen  total 39424K, used 31166K [<span class=\"number\">0x0000000771a00000</span>, <span class=\"number\">0x0000000774780000</span>, <span class=\"number\">0x00000007c0000000</span>)</span><br><span class=\"line\">  eden space 38912K, <span class=\"number\">79</span>% used [<span class=\"number\">0x0000000771a00000</span>,<span class=\"number\">0x000000077384faf0</span>,<span class=\"number\">0x0000000774000000</span>)</span><br><span class=\"line\">  from space 512K, <span class=\"number\">25</span>% used [<span class=\"number\">0x0000000774680000</span>,<span class=\"number\">0x00000007746a0000</span>,<span class=\"number\">0x0000000774700000</span>)</span><br><span class=\"line\">  to   space 512K, <span class=\"number\">0</span>% used [<span class=\"number\">0x0000000774700000</span>,<span class=\"number\">0x0000000774700000</span>,<span class=\"number\">0x0000000774780000</span>)</span><br><span class=\"line\"> ParOldGen   total 124928K, used 67043K [<span class=\"number\">0x00000006d4e00000</span>, <span class=\"number\">0x00000006dc800000</span>, <span class=\"number\">0x0000000771a00000</span>)</span><br><span class=\"line\">  object space 124928K, <span class=\"number\">53</span>% used [<span class=\"number\">0x00000006d4e00000</span>,<span class=\"number\">0x00000006d8f78d18</span>,<span class=\"number\">0x00000006dc800000</span>)</span><br><span class=\"line\"> Metaspace   used 54122K, capacity 54748K, committed 54912K, reserved 1097728K</span><br><span class=\"line\">  class spaceused 6562K, capacity 6716K, committed 6784K, reserved 1048576K</span><br><span class=\"line\"></span><br><span class=\"line\">Card table byte_map: [<span class=\"number\">0x00007ff3664db000</span>,<span class=\"number\">0x00007ff366c35000</span>] byte_map_base: <span class=\"number\">0x00007ff362e34000</span></span><br><span class=\"line\"></span><br><span class=\"line\">Marking <span class=\"meta\">Bits</span>: (ParMarkBitMap*) <span class=\"number\">0x00007ff3691426c0</span></span><br><span class=\"line\"> Begin <span class=\"meta\">Bits</span>: [<span class=\"number\">0x00007ff324a70000</span>, <span class=\"number\">0x00007ff328538000</span>)</span><br><span class=\"line\"> End <span class=\"meta\">Bits</span>:   [<span class=\"number\">0x00007ff328538000</span>, <span class=\"number\">0x00007ff32c000000</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">Polling page: <span class=\"number\">0x00007ff369d84000</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"symbol\">CodeCache:</span> size=245760Kb used=17958Kb max_used=18385Kb free=227801Kb</span><br><span class=\"line\"> bounds [<span class=\"number\">0x00007ff34aad9000</span>, <span class=\"number\">0x00007ff34bd29000</span>, <span class=\"number\">0x00007ff359ad9000</span>]</span><br><span class=\"line\"> total_blobs=<span class=\"number\">6019</span> nmethods=<span class=\"number\">5425</span> adapters=<span class=\"number\">516</span></span><br><span class=\"line\"><span class=\"symbol\"> compilation:</span> enabled</span><br></pre></td></tr></table></figure>\n<ul>\n<li>Card Table是jvm维护的一种数据结构，用于记录更改对象时的引用，方便GC。</li>\n<li>CodeCache是用来保存本地代码的，不属于PermGen。</li>\n</ul>\n<figure class=\"highlight matlab\"><table><tr><td class=\"code\"><pre><span class=\"line\">Compilation <span class=\"keyword\">events</span> (<span class=\"number\">10</span> <span class=\"keyword\">events</span>):</span><br><span class=\"line\">GC Heap History (<span class=\"number\">10</span> <span class=\"keyword\">events</span>):</span><br><span class=\"line\">Deoptimization <span class=\"keyword\">events</span> (<span class=\"number\">10</span> <span class=\"keyword\">events</span>):</span><br><span class=\"line\">Internal exceptions (<span class=\"number\">10</span> <span class=\"keyword\">events</span>):</span><br><span class=\"line\">Events (<span class=\"number\">10</span> <span class=\"keyword\">events</span>):</span><br><span class=\"line\">Dynamic libraries:</span><br></pre></td></tr></table></figure>\n<p>这些都是表示crash时jvm最近的一些操作。举个例子说明：<br><figure class=\"highlight routeros\"><table><tr><td class=\"code\"><pre><span class=\"line\">Events (10 events):</span><br><span class=\"line\">Event: 2603309.010 Thread 0x00007ff2c800c000 DEOPT UNPACKING <span class=\"attribute\">pc</span>=0x00007ff34aaddf69 <span class=\"attribute\">sp</span>=0x00007ff3409e88a8 mode 2</span><br><span class=\"line\">Event: 2603310.108 Thread 0x00007ff362229000 DEOPT PACKING <span class=\"attribute\">pc</span>=0x00007ff34b25ce6c <span class=\"attribute\">sp</span>=0x00007ff340ceb660</span><br><span class=\"line\">Event: 2603310.122 Thread 0x00007ff2c8009800 Uncommon trap: <span class=\"attribute\">trap_request</span>=0xffffff65 fr.<span class=\"attribute\">pc</span>=0x00007ff34b890e40</span><br><span class=\"line\">Event: 2603310.124 Thread 0x00007ff2c8009800 DEOPT PACKING <span class=\"attribute\">pc</span>=0x00007ff34b890e40 <span class=\"attribute\">sp</span>=0x00007ff3408e7790</span><br><span class=\"line\">Event: 2603310.124 Thread 0x00007ff2c8009800 DEOPT UNPACKING <span class=\"attribute\">pc</span>=0x00007ff34aaddf69 <span class=\"attribute\">sp</span>=0x00007ff3408e7680 mode 2</span><br><span class=\"line\">Event: 2603310.125 Thread 0x00007ff2c8009800 Uncommon trap: <span class=\"attribute\">trap_request</span>=0xffffff65 fr.<span class=\"attribute\">pc</span>=0x00007ff34b850fe4</span><br><span class=\"line\">Event: 2603310.125 Thread 0x00007ff2c8009800 DEOPT PACKING <span class=\"attribute\">pc</span>=0x00007ff34b850fe4 <span class=\"attribute\">sp</span>=0x00007ff3408e7560</span><br><span class=\"line\">Event: 2603310.125 Thread 0x00007ff2c8009800 DEOPT UNPACKING <span class=\"attribute\">pc</span>=0x00007ff34aaddf69 <span class=\"attribute\">sp</span>=0x00007ff3408e72d8 mode 2</span><br><span class=\"line\">Event: 2603310.126 Thread 0x00007ff362229000 DEOPT UNPACKING <span class=\"attribute\">pc</span>=0x00007ff34aaddf69 <span class=\"attribute\">sp</span>=0x00007ff340ceb628 mode 2</span><br><span class=\"line\">Event: 2603310.935 Thread 0x00007ff2d8001000 Thread added: 0x00007ff2d8001000</span><br></pre></td></tr></table></figure></p>\n<p>上述是最近10个runtime VM的事件，拿第一条举例，2603309.010是从VM启动后的时长，单位是秒，pc是program counter，sp是stack pointer。关于 DEOPT、Uncommon trap等的解释可以看这个<a href=\"https://stackoverflow.com/questions/49716694/what-are-events-in-hs-err-pid-log/49716888#49716888\" target=\"_blank\" rel=\"noopener\">issue</a>，大概就是编译的时候，编译器做了一些优化，但是在runtime时发现这个优化没有用，所以叫去优化（deoptimization）。<br><figure class=\"highlight makefile\"><table><tr><td class=\"code\"><pre><span class=\"line\">---------------  S Y S T E M  ---------------</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"section\">OS:Amazon Linux AMI release 2016.03</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"section\">uname:Linux 4.4.11-23.53.amzn1.x86_64 #1 SMP Wed Jun 1 22:22:50 UTC 2016 x86_64</span></span><br><span class=\"line\"><span class=\"section\">libc:glibc 2.17 NPTL 2.17</span></span><br><span class=\"line\"><span class=\"section\">rlimit: STACK 8192k, CORE 0k, NPROC 65536, NOFILE 65536, AS infinity</span></span><br><span class=\"line\">load average:10.84 2.76 1.17</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"section\">/proc/meminfo:</span></span><br><span class=\"line\"><span class=\"section\">MemTotal:   15403948 kB</span></span><br><span class=\"line\"><span class=\"section\">MemFree: 2637700 kB</span></span><br><span class=\"line\"><span class=\"section\">MemAvailable:2571132 kB</span></span><br><span class=\"line\"><span class=\"section\">Buffers: 304 kB</span></span><br><span class=\"line\"><span class=\"section\">Cached:13784 kB</span></span><br><span class=\"line\"><span class=\"section\">SwapCached:0 kB</span></span><br><span class=\"line\"><span class=\"section\">Active: 12625320 kB</span></span><br><span class=\"line\"><span class=\"section\">Inactive:   7684 kB</span></span><br><span class=\"line\"><span class=\"section\">Active(anon):   12619252 kB</span></span><br><span class=\"line\"><span class=\"section\">Inactive(anon):  336 kB</span></span><br><span class=\"line\"><span class=\"section\">Active(file):   6068 kB</span></span><br><span class=\"line\"><span class=\"section\">Inactive(file): 7348 kB</span></span><br><span class=\"line\"><span class=\"section\">Unevictable:   0 kB</span></span><br><span class=\"line\"><span class=\"section\">Mlocked:   0 kB</span></span><br><span class=\"line\"><span class=\"section\">SwapTotal: 0 kB</span></span><br><span class=\"line\"><span class=\"section\">SwapFree:  0 kB</span></span><br><span class=\"line\"><span class=\"section\">Dirty:16 kB</span></span><br><span class=\"line\"><span class=\"section\">Writeback:56 kB</span></span><br><span class=\"line\"><span class=\"section\">AnonPages:  12606968 kB</span></span><br><span class=\"line\"><span class=\"section\">Mapped:10896 kB</span></span><br><span class=\"line\"><span class=\"section\">Shmem:   356 kB</span></span><br><span class=\"line\"><span class=\"section\">Slab:  46004 kB</span></span><br><span class=\"line\"><span class=\"section\">SReclaimable:  22384 kB</span></span><br><span class=\"line\"><span class=\"section\">SUnreclaim:23620 kB</span></span><br><span class=\"line\"><span class=\"section\">KernelStack:9856 kB</span></span><br><span class=\"line\"><span class=\"section\">PageTables:38084 kB</span></span><br><span class=\"line\"><span class=\"section\">NFS_Unstable:  0 kB</span></span><br><span class=\"line\"><span class=\"section\">Bounce:0 kB</span></span><br><span class=\"line\"><span class=\"section\">WritebackTmp:  0 kB</span></span><br><span class=\"line\"><span class=\"section\">CommitLimit: 7701972 kB</span></span><br><span class=\"line\"><span class=\"section\">Committed_AS:   18337652 kB</span></span><br><span class=\"line\"><span class=\"section\">VmallocTotal:   34359738367 kB</span></span><br><span class=\"line\"><span class=\"section\">VmallocUsed:   0 kB</span></span><br><span class=\"line\"><span class=\"section\">VmallocChunk:  0 kB</span></span><br><span class=\"line\"><span class=\"section\">AnonHugePages: 0 kB</span></span><br><span class=\"line\"><span class=\"section\">HugePages_Total:   0</span></span><br><span class=\"line\"><span class=\"section\">HugePages_Free:0</span></span><br><span class=\"line\"><span class=\"section\">HugePages_Rsvd:0</span></span><br><span class=\"line\"><span class=\"section\">HugePages_Surp:0</span></span><br><span class=\"line\"><span class=\"section\">Hugepagesize:   2048 kB</span></span><br><span class=\"line\"><span class=\"section\">DirectMap4k:   12288 kB</span></span><br><span class=\"line\"><span class=\"section\">DirectMap2M:15716352 kB</span></span><br></pre></td></tr></table></figure><br>系统内存情况：</p>\n<table>\n<thead>\n<tr>\n<th>名词</th>\n<th style=\"text-align:center\">描述</th>\n<th style=\"text-align:center\">名词</th>\n<th style=\"text-align:center\">描述</th>\n<th style=\"text-align:center\">名词</th>\n<th style=\"text-align:left\">描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>MemToal</td>\n<td style=\"text-align:center\">总内存</td>\n<td style=\"text-align:center\">MemFree</td>\n<td style=\"text-align:center\">未使用内存</td>\n<td style=\"text-align:center\">MemAvailable</td>\n<td style=\"text-align:left\">可用内存</td>\n</tr>\n<tr>\n<td>Buffers</td>\n<td style=\"text-align:center\">文件读写Buffer</td>\n<td style=\"text-align:center\">Cached</td>\n<td style=\"text-align:center\">缓存</td>\n<td style=\"text-align:center\">SwapCached</td>\n<td style=\"text-align:left\">缓存的交换空间</td>\n</tr>\n<tr>\n<td>Active</td>\n<td style=\"text-align:center\">最近被申请过的空间</td>\n<td style=\"text-align:center\">Inactive</td>\n<td style=\"text-align:center\">最近未被申请过的空间</td>\n<td style=\"text-align:center\">Active(anon)</td>\n<td style=\"text-align:left\">..</td>\n</tr>\n<tr>\n<td>Inactive(anon)</td>\n<td style=\"text-align:center\">..</td>\n<td style=\"text-align:center\">Active(file)</td>\n<td style=\"text-align:center\">..</td>\n<td style=\"text-align:center\">Inactive(file)</td>\n<td style=\"text-align:left\">..</td>\n</tr>\n<tr>\n<td>Unevictable</td>\n<td style=\"text-align:center\">..</td>\n<td style=\"text-align:center\">Unevictable</td>\n<td style=\"text-align:center\">..</td>\n<td style=\"text-align:center\">Mlocked</td>\n<td style=\"text-align:left\">..</td>\n</tr>\n<tr>\n<td>SwapTotal</td>\n<td style=\"text-align:center\">可用交换空间</td>\n<td style=\"text-align:center\">SwapFree</td>\n<td style=\"text-align:center\">可用交换空间</td>\n<td style=\"text-align:center\">Dirty</td>\n<td style=\"text-align:left\">等待写入磁盘的空间</td>\n</tr>\n<tr>\n<td>Writeback</td>\n<td style=\"text-align:center\">正在被写入磁盘的空间</td>\n<td style=\"text-align:center\">AnonPages</td>\n<td style=\"text-align:center\">..</td>\n<td style=\"text-align:center\">Mapped</td>\n<td style=\"text-align:left\">..</td>\n</tr>\n<tr>\n<td>Shmem</td>\n<td style=\"text-align:center\">..</td>\n<td style=\"text-align:center\">Slab</td>\n<td style=\"text-align:center\">kernel使用</td>\n<td style=\"text-align:center\">Sreclaimable</td>\n<td style=\"text-align:left\">..</td>\n</tr>\n<tr>\n<td>SUnreclaim</td>\n<td style=\"text-align:center\">..</td>\n<td style=\"text-align:center\">KernelStack</td>\n<td style=\"text-align:center\">..</td>\n<td style=\"text-align:center\">PageTables</td>\n<td style=\"text-align:left\">内存页映射表空间</td>\n</tr>\n<tr>\n<td>NFS_Unstable</td>\n<td style=\"text-align:center\">..</td>\n<td style=\"text-align:center\">Bounce</td>\n<td style=\"text-align:center\">..</td>\n<td style=\"text-align:center\">WritebackTmp</td>\n<td style=\"text-align:left\">..</td>\n</tr>\n<tr>\n<td>CommitLimit</td>\n<td style=\"text-align:center\">..</td>\n<td style=\"text-align:center\">Committed_AS</td>\n<td style=\"text-align:center\">完成workload最坏情况的内存使用情况</td>\n<td style=\"text-align:center\">VmallocTotal</td>\n<td style=\"text-align:left\">..</td>\n</tr>\n<tr>\n<td>VmallocUsed</td>\n<td style=\"text-align:center\">虚拟空间可映射的大小</td>\n<td style=\"text-align:center\">VmallocUsed</td>\n<td style=\"text-align:center\">已使用的虚拟空间映射大小</td>\n<td style=\"text-align:center\">VmallocChunk</td>\n<td style=\"text-align:left\">虚拟空间最大的虚拟空间块</td>\n</tr>\n<tr>\n<td>AnonHugePages</td>\n<td style=\"text-align:center\">..</td>\n<td style=\"text-align:center\">HugePages_Total</td>\n<td style=\"text-align:center\">..</td>\n<td style=\"text-align:center\">HugePages_Free</td>\n<td style=\"text-align:left\">..</td>\n</tr>\n<tr>\n<td>HugePages_Rsvd</td>\n<td style=\"text-align:center\">..</td>\n<td style=\"text-align:center\">HugePages_Surp</td>\n<td style=\"text-align:center\">..</td>\n<td style=\"text-align:center\">Hugepagesize</td>\n<td style=\"text-align:left\">..</td>\n</tr>\n<tr>\n<td>DirectMap4k</td>\n<td style=\"text-align:center\">..</td>\n<td style=\"text-align:center\">DirectMap2M</td>\n<td style=\"text-align:center\">..</td>\n</tr>\n</tbody>\n</table>\n"}],"PostAsset":[],"PostCategory":[],"PostTag":[{"post_id":"cjfvdlqwk0001faugfaxus5j4","tag_id":"cjfvdlqxd0005faugqs8gaizv","_id":"cjfvdlqxx0009faug9xw0iq9l"},{"post_id":"cjfvdlqwk0001faugfaxus5j4","tag_id":"cjfvdlqxu0007faugd77zbg16","_id":"cjfvdlqxx000afaug00c7nttj"},{"post_id":"cjfvdlqwy0003faugvkhcrxr7","tag_id":"cjfvdlqxw0008faugxltdtf7z","_id":"cjfvdlqy2000cfaugwrddf99q"},{"post_id":"cjfvdlqxi0006fauggapoj8lk","tag_id":"cjfvdlqxy000bfaugam8say7s","_id":"cjfvdlqy4000efaugxndbzpmn"},{"post_id":"cjfvdlqxi0006fauggapoj8lk","tag_id":"cjfvdlqy3000dfaugfwf4248e","_id":"cjfvdlqy5000ffaug8ykgoe09"}],"Tag":[{"name":"flink","_id":"cjfvdlqxd0005faugqs8gaizv"},{"name":"exactly-once","_id":"cjfvdlqxu0007faugd77zbg16"},{"name":"Aerospike","_id":"cjfvdlqxw0008faugxltdtf7z"},{"name":"memory","_id":"cjfvdlqxy000bfaugam8say7s"},{"name":"linux","_id":"cjfvdlqy3000dfaugfwf4248e"}]}}